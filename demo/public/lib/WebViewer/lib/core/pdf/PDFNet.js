(function(h){function p(){return{putNumber:function(a,b,d){a[b]=0+d},jsColorToNumber:function(a){return 16777216*Math.floor(a.A)+65536*Math.floor(a.R)+256*Math.floor(a.G)+Math.floor(a.B)},jsColorFromNumber:function(a){return{A:5.9604644775390625E-8*a&255,R:((a|0)&16711680)>>>16,G:((a|0)&65280)>>>8,B:(a|0)&255}}}}var b=h.PDFNet?h.PDFNet:{};b.Convert=h.PDFNet&&h.PDFNet.Convert?h.PDFNet.Convert:{};h.CoreControls&&h.CoreControls.enableFullPDF(!0);h.isArrayBuffer=function(a){return a instanceof ArrayBuffer||
null!=a&&null!=a.constructor&&"ArrayBuffer"===a.constructor.name&&"number"===typeof a.byteLength};b.createDiffOptions=function(){var a={},b=p(),d={getBlendMode:function(){return"BlendMode"in a?a.BlendMode:5},setBlendMode:function(e){b.putNumber(a,"BlendMode",e);return d},getColorA:function(){return"ColorA"in a?b.jsColorFromNumber(a.ColorA):b.jsColorFromNumber(4291559424)},setColorA:function(e){b.putNumber(a,"ColorA",b.jsColorToNumber(e));return d},getColorB:function(){return"ColorB"in a?b.jsColorFromNumber(a.ColorB):
b.jsColorFromNumber(4278242508)},setColorB:function(e){b.putNumber(a,"ColorB",b.jsColorToNumber(e));return d},getJsonString:function(){return JSON.stringify(a)}};return Promise.resolve(d)};b.Iterator=function(a,b){this.name="Iterator";this.id=a;this.type=b};b.DictIterator=function(a){this.name="DictIterator";this.id=a};b.Matrix2D=function(a,c,d,e,f,g){this.name="Matrix2D";if(a&&"undefined"===typeof c)copyFunc(a,this);else return"undefined"===typeof a&&(a=0),"undefined"===typeof c&&(c=0),"undefined"===
typeof d&&(d=0),"undefined"===typeof e&&(e=0),"undefined"===typeof f&&(f=0),"undefined"===typeof g&&(g=0),new b.Matrix2D({m_a:a,m_b:c,m_c:d,m_d:e,m_h:f,m_v:g})};b.Field=function(a,c){this.name="Field";if(a&&"undefined"===typeof c)copyFunc(a,this);else return"undefined"===typeof a&&(a="0"),"undefined"===typeof c&&(c="0"),new b.Field({leaf_node:a,builder:c})};b.FDFDoc=function(a){this.name="FDFDoc";this.id=a};b.FDFField=function(a,c){this.name="FDFField";if(a&&"undefined"===typeof c)copyFunc(a,this);
else return"undefined"===typeof a&&(a="0"),"undefined"===typeof c&&(c="0"),new b.FDFField({mp_leaf_node:a,mp_root_array:c})};b.Filter=function(a){this.name="Filter";this.id=a};b.FilterReader=function(a){this.name="FilterReader";this.id=a};b.FilterWriter=function(a){this.name="FilterWriter";this.id=a};b.OCG=function(a){this.name="OCG";this.id=a};b.OCGConfig=function(a){this.name="OCGConfig";this.id=a};b.OCGContext=function(a){this.name="OCGContext";this.id=a};b.OCMD=function(a){this.name="OCMD";this.id=
a};b.PDFACompliance=function(a){this.name="PDFACompliance";this.id=a};b.AttrObj=function(a){this.name="AttrObj";this.id=a};b.ClassMap=function(a){this.name="ClassMap";this.id=a};b.ContentItem=function(a,c){this.name="ContentItem";if(a&&"undefined"===typeof c)copyFunc(a,this);else return"undefined"===typeof a&&(a="0"),"undefined"===typeof c&&(c="0"),new b.ContentItem({o:a,p:c})};b.RoleMap=function(a){this.name="RoleMap";this.id=a};b.SElement=function(a,c){this.name="SElement";if(a&&"undefined"===typeof c)copyFunc(a,
this);else return"undefined"===typeof a&&(a="0"),"undefined"===typeof c&&(c="0"),new b.SElement({obj:a,k:c})};b.STree=function(a){this.name="STree";this.id=a};b.Action=function(a){this.name="Action";this.id=a};b.KeyStrokeActionResult=function(a){this.name="KeyStrokeActionResult";this.id=a};b.KeyStrokeEventData=function(a){this.name="KeyStrokeEventData";this.id=a};b.Page=function(a){this.name="Page";this.id=a};b.Annot=function(a){this.name="Annot";this.id=a};b.AnnotBorderStyle=function(a){this.name=
"AnnotBorderStyle";this.id=a};b.CaretAnnot=function(a){this.name="CaretAnnot";this.id=a};b.LineAnnot=function(a){this.name="LineAnnot";this.id=a};b.CircleAnnot=function(a){this.name="CircleAnnot";this.id=a};b.FileAttachmentAnnot=function(a){this.name="FileAttachmentAnnot";this.id=a};b.FreeTextAnnot=function(a){this.name="FreeTextAnnot";this.id=a};b.HighlightAnnot=function(a){this.name="HighlightAnnot";this.id=a};b.InkAnnot=function(a){this.name="InkAnnot";this.id=a};b.LinkAnnot=function(a){this.name=
"LinkAnnot";this.id=a};b.MarkupAnnot=function(a){this.name="MarkupAnnot";this.id=a};b.MovieAnnot=function(a){this.name="MovieAnnot";this.id=a};b.PolyLineAnnot=function(a){this.name="PolyLineAnnot";this.id=a};b.PolygonAnnot=function(a){this.name="PolygonAnnot";this.id=a};b.PopupAnnot=function(a){this.name="PopupAnnot";this.id=a};b.RedactionAnnot=function(a){this.name="RedactionAnnot";this.id=a};b.RubberStampAnnot=function(a){this.name="RubberStampAnnot";this.id=a};b.ScreenAnnot=function(a){this.name=
"ScreenAnnot";this.id=a};b.SoundAnnot=function(a){this.name="SoundAnnot";this.id=a};b.SquareAnnot=function(a){this.name="SquareAnnot";this.id=a};b.SquigglyAnnot=function(a){this.name="SquigglyAnnot";this.id=a};b.StrikeOutAnnot=function(a){this.name="StrikeOutAnnot";this.id=a};b.TextAnnot=function(a){this.name="TextAnnot";this.id=a};b.UnderlineAnnot=function(a){this.name="UnderlineAnnot";this.id=a};b.WatermarkAnnot=function(a){this.name="WatermarkAnnot";this.id=a};b.TextMarkupAnnot=function(a){this.name=
"TextMarkupAnnot";this.id=a};b.WidgetAnnot=function(a){this.name="WidgetAnnot";this.id=a};b.Bookmark=function(a){this.name="Bookmark";this.id=a};b.ColorPt=function(a){this.name="ColorPt";this.id=a};b.ColorSpace=function(a){this.name="ColorSpace";this.id=a};b.ContentReplacer=function(a){this.name="ContentReplacer";this.id=a};b.DocumentConversion=function(a){this.name="DocumentConversion";this.id=a};b.ConversionMonitor=function(a){this.name="ConversionMonitor";this.id=a};b.Date=function(a,c,d,e,f,g,
k,l,h,n){this.name="Date";if(a&&"undefined"===typeof c)copyFunc(a,this);else return"undefined"===typeof a&&(a=0),"undefined"===typeof c&&(c=0),"undefined"===typeof d&&(d=0),"undefined"===typeof e&&(e=0),"undefined"===typeof f&&(f=0),"undefined"===typeof g&&(g=0),"undefined"===typeof k&&(k=0),"undefined"===typeof l&&(l=0),"undefined"===typeof h&&(h=0),"undefined"===typeof n&&(n="0"),new b.Date({year:a,month:c,day:d,hour:e,minute:f,second:g,UT:k,UT_hour:l,UT_minutes:h,mp_obj:n})};b.Destination=function(a){this.name=
"Destination";this.id=a};b.GState=function(a){this.name="GState";this.id=a};b.Element=function(a){this.name="Element";this.id=a};b.ElementBuilder=function(a){this.name="ElementBuilder";this.id=a};b.ElementReader=function(a){this.name="ElementReader";this.id=a};b.ElementWriter=function(a){this.name="ElementWriter";this.id=a};b.FileSpec=function(a){this.name="FileSpec";this.id=a};b.Flattener=function(a){this.name="Flattener";this.id=a};b.Font=function(a){this.name="Font";this.id=a};b.Function=function(a){this.name=
"Function";this.id=a};b.Highlights=function(a){this.name="Highlights";this.id=a};b.HTML2PDF_Proxy=function(a){this.name="HTML2PDF_Proxy";this.id=a};b.HTML2PDF_WebPageSettings=function(a){this.name="HTML2PDF_WebPageSettings";this.id=a};b.HTML2PDF_TOCSettings=function(a){this.name="HTML2PDF_TOCSettings";this.id=a};b.HTML2PDF=function(a){this.name="HTML2PDF";this.id=a};b.Image=function(a){this.name="Image";this.id=a};b.Optimizer=function(a){this.name="Optimizer";this.id=a};b.PageLabel=function(a,c,d){this.name=
"PageLabel";if(a&&"undefined"===typeof c)copyFunc(a,this);else return"undefined"===typeof a&&(a="0"),"undefined"===typeof c&&(c=0),"undefined"===typeof d&&(d=0),new b.PageLabel({mp_obj:a,m_first_page:c,m_last_page:d})};b.PageSet=function(a){this.name="PageSet";this.id=a};b.PatternColor=function(a){this.name="PatternColor";this.id=a};b.GeometryCollection=function(a){this.name="GeometryCollection";this.id=a};b.PDFDoc=function(a){this.name="PDFDoc";this.id=a};b.PDFDocInfo=function(a){this.name="PDFDocInfo";
this.id=a};b.PDFDocViewPrefs=function(a){this.name="PDFDocViewPrefs";this.id=a};b.PDFRasterizer=function(a){this.name="PDFRasterizer";this.id=a};b.PDFDraw=function(a){this.name="PDFDraw";this.id=a};b.PDFNet=function(a){this.name="PDFNet";this.id=a};b.Rect=function(a,c,d,e,f){this.name="Rect";if(a&&"undefined"===typeof c)copyFunc(a,this);else return"undefined"===typeof a&&(a=0),"undefined"===typeof c&&(c=0),"undefined"===typeof d&&(d=0),"undefined"===typeof e&&(e=0),"undefined"===typeof f&&(f="0"),
new b.Rect({x1:a,y1:c,x2:d,y2:e,mp_rect:f})};b.Redactor=function(a){this.name="Redactor";this.id=a};b.RedactionAppearance=function(a){this.name="RedactionAppearance";this.id=a};b.Shading=function(a){this.name="Shading";this.id=a};b.Stamper=function(a){this.name="Stamper";this.id=a};b.TextExtractor=function(a){this.name="TextExtractor";this.id=a};b.TextExtractorStyle=function(a){this.name="TextExtractorStyle";"undefined"!==typeof a&&(this.mp_imp=a)};b.TextExtractorWord=function(a,c,d,e,f,g,k){this.name=
"TextExtractorWord";if(a&&"undefined"===typeof c)copyFunc(a,this);else return"undefined"===typeof a&&(a="0"),"undefined"===typeof c&&(c="0"),"undefined"===typeof d&&(d="0"),"undefined"===typeof e&&(e="0"),"undefined"===typeof f&&(f=0),"undefined"===typeof g&&(g=0),"undefined"===typeof k&&(k="0"),new b.TextExtractorWord({line:a,word:c,end:d,uni:e,num:f,cur_num:g,mp_bld:k})};b.TextExtractorLine=function(a,c,d,e,f,g){this.name="TextExtractorLine";if(a&&"undefined"===typeof c)copyFunc(a,this);else return"undefined"===
typeof a&&(a="0"),"undefined"===typeof c&&(c="0"),"undefined"===typeof d&&(d=0),"undefined"===typeof e&&(e=0),"undefined"===typeof f&&(f=0),"undefined"===typeof g&&(g="0"),new b.TextExtractorLine({line:a,uni:c,num:d,cur_num:e,m_direction:f,mp_bld:g})};b.TextSearch=function(a){this.name="TextSearch";this.id=a};b.NameTree=function(a){this.name="NameTree";this.id=a};b.NumberTree=function(a){this.name="NumberTree";this.id=a};b.Obj=function(a){this.name="Obj";this.id=a};b.ObjSet=function(a){this.name=
"ObjSet";this.id=a};b.SDFDoc=function(a){this.name="SDFDoc";this.id=a};b.SecurityHandler=function(a){this.name="SecurityHandler";this.id=a};b.SignatureHandler=function(a){this.name="SignatureHandler";this.id=a};b.ProgressMonitor=function(a){this.name="ProgressMonitor";this.id=a};b.PDFDC=function(a){this.name="PDFDC";this.id=a};b.PDFDCEX=function(a){this.name="PDFDCEX";this.id=a};b.ChunkRenderer=function(a){this.name="ChunkRenderer";this.id=a};b.PDFView=function(a){this.name="PDFView";this.id=a};b.PDFViewCtrl=
function(a){this.name="PDFViewCtrl";this.id=a};b.ViewChangeCollection=function(a){this.name="ViewChangeCollection";this.id=a};b.ActionParameter=function(a){this.name="ActionParameter";this.id=a};b.Vector=function(a){this.name="Vector";this.id=a};b.AppearanceReferenceList=function(a){this.name="AppearanceReferenceList";this.id=a};b.OwnedBitmap=function(a){this.name="OwnedBitmap";this.id=a};b.Redaction=function(a){this.name="Redaction";this.id=a};b.QuadPoint=function(a,c,d,e,f,g,k,l){this.name="QuadPoint";
if(a&&"undefined"===typeof c)copyFunc(a,this);else return"undefined"===typeof a&&(a=0),"undefined"===typeof c&&(c=0),"undefined"===typeof d&&(d=0),"undefined"===typeof e&&(e=0),"undefined"===typeof f&&(f=0),"undefined"===typeof g&&(g=0),"undefined"===typeof k&&(k=0),"undefined"===typeof l&&(l=0),new b.QuadPoint({p1x:a,p1y:c,p2x:d,p2y:e,p3x:f,p3y:g,p4x:k,p4y:l})};b.Point=function(a,c){this.name="Point";if(a&&"undefined"===typeof c)copyFunc(a,this);else return"undefined"===typeof a&&(a=0),"undefined"===
typeof c&&(c=0),new b.Point({x:a,y:c})};b.SVGOutputOptions=function(a){this.id=a;this.name="SVGOutputOptions"};b.XPSOutputOptions=function(a){this.id=a;this.name="XPSOutputOptions"};b.XODOutputOptions=function(a){this.id=a;this.name="XODOutputOptions"};b.MarkupAnnot.prototype=new b.Annot;b.TextMarkupAnnot.prototype=new b.MarkupAnnot;b.CaretAnnot.prototype=new b.MarkupAnnot;b.LineAnnot.prototype=new b.MarkupAnnot;b.CircleAnnot.prototype=new b.MarkupAnnot;b.FileAttachmentAnnot.prototype=new b.MarkupAnnot;
b.FreeTextAnnot.prototype=new b.MarkupAnnot;b.HighlightAnnot.prototype=new b.TextMarkupAnnot;b.InkAnnot.prototype=new b.MarkupAnnot;b.LinkAnnot.prototype=new b.Annot;b.MovieAnnot.prototype=new b.Annot;b.PolyLineAnnot.prototype=new b.LineAnnot;b.PolygonAnnot.prototype=new b.PolyLineAnnot;b.PopupAnnot.prototype=new b.Annot;b.RedactionAnnot.prototype=new b.MarkupAnnot;b.RubberStampAnnot.prototype=new b.MarkupAnnot;b.ScreenAnnot.prototype=new b.Annot;b.SoundAnnot.prototype=new b.MarkupAnnot;b.SquareAnnot.prototype=
new b.MarkupAnnot;b.SquigglyAnnot.prototype=new b.TextMarkupAnnot;b.StrikeOutAnnot.prototype=new b.TextMarkupAnnot;b.TextAnnot.prototype=new b.MarkupAnnot;b.UnderlineAnnot.prototype=new b.TextMarkupAnnot;b.WatermarkAnnot.prototype=new b.Annot;b.WidgetAnnot.prototype=new b.Annot;b.Field.EventType={e_action_trigger_keystroke:13,e_action_trigger_format:14,e_action_trigger_validate:15,e_action_trigger_calculate:16};b.Field.Type={e_button:0,e_check:1,e_radio:2,e_text:3,e_choice:4,e_signature:5,e_null:6};
b.Field.Flag={e_read_only:0,e_required:1,e_no_export:2,e_pushbutton_flag:3,e_radio_flag:4,e_toggle_to_off:5,e_radios_in_unison:6,e_multiline:7,e_password:8,e_file_select:9,e_no_spellcheck:10,e_no_scroll:11,e_comb:12,e_rich_text:13,e_combo:14,e_edit:15,e_sort:16,e_multiselect:17,e_commit_on_sel_change:18};b.Field.TextJustification={e_left_justified:0,e_centered:1,e_right_justified:2};b.Filter.StdFileOpenMode={e_read_mode:0,e_write_mode:1,e_append_mode:2};b.Filter.ReferencePos={e_begin:0,e_end:2,e_cur:1};
b.OCGContext.OCDrawMode={e_VisibleOC:0,e_AllOC:1,e_NoOC:2};b.OCMD.VisibilityPolicyType={e_AllOn:0,e_AnyOn:1,e_AnyOff:2,e_AllOff:3};b.PDFACompliance.Conformance={e_Level1A:1,e_Level1B:2,e_Level2A:3,e_Level2B:4,e_Level2U:5,e_Level3A:6,e_Level3B:7,e_Level3U:8};b.PDFACompliance.ErrorCode={e_PDFA0_1_0:10,e_PDFA0_1_1:11,e_PDFA0_1_2:12,e_PDFA0_1_3:13,e_PDFA0_1_4:14,e_PDFA0_1_5:15,e_PDFA1_2_1:121,e_PDFA1_2_2:122,e_PDFA1_3_1:131,e_PDFA1_3_2:132,e_PDFA1_3_3:133,e_PDFA1_3_4:134,e_PDFA1_4_1:141,e_PDFA1_4_2:142,
e_PDFA1_6_1:161,e_PDFA1_7_1:171,e_PDFA1_7_2:172,e_PDFA1_7_3:173,e_PDFA1_7_4:174,e_PDFA1_8_1:181,e_PDFA1_8_2:182,e_PDFA1_8_3:183,e_PDFA1_8_4:184,e_PDFA1_8_5:185,e_PDFA1_8_6:186,e_PDFA1_10_1:1101,e_PDFA1_11_1:1111,e_PDFA1_11_2:1112,e_PDFA1_12_1:1121,e_PDFA1_12_2:1122,e_PDFA1_12_3:1123,e_PDFA1_12_4:1124,e_PDFA1_12_5:1125,e_PDFA1_12_6:1126,e_PDFA1_13_1:1131,e_PDFA2_2_1:221,e_PDFA2_3_2:232,e_PDFA2_3_3:233,e_PDFA2_3_3_1:2331,e_PDFA2_3_3_2:2332,e_PDFA2_3_4_1:2341,e_PDFA2_4_1:241,e_PDFA2_4_2:242,e_PDFA2_4_3:243,
e_PDFA2_4_4:244,e_PDFA2_5_1:251,e_PDFA2_5_2:252,e_PDFA2_6_1:261,e_PDFA2_7_1:271,e_PDFA2_8_1:281,e_PDFA2_9_1:291,e_PDFA2_10_1:2101,e_PDFA3_2_1:321,e_PDFA3_3_1:331,e_PDFA3_3_2:332,e_PDFA3_3_3_1:3331,e_PDFA3_3_3_2:3332,e_PDFA3_4_1:341,e_PDFA3_5_1:351,e_PDFA3_5_2:352,e_PDFA3_5_3:353,e_PDFA3_5_4:354,e_PDFA3_5_5:355,e_PDFA3_5_6:356,e_PDFA3_6_1:361,e_PDFA3_7_1:371,e_PDFA3_7_2:372,e_PDFA3_7_3:373,e_PDFA4_1:41,e_PDFA4_2:42,e_PDFA4_3:43,e_PDFA4_4:44,e_PDFA4_5:45,e_PDFA4_6:46,e_PDFA5_2_1:521,e_PDFA5_2_2:522,
e_PDFA5_2_3:523,e_PDFA5_2_4:524,e_PDFA5_2_5:525,e_PDFA5_2_6:526,e_PDFA5_2_7:527,e_PDFA5_2_8:528,e_PDFA5_2_9:529,e_PDFA5_2_10:5210,e_PDFA5_2_11:5211,e_PDFA5_3_1:531,e_PDFA5_3_2_1:5321,e_PDFA5_3_2_2:5322,e_PDFA5_3_2_3:5323,e_PDFA5_3_2_4:5324,e_PDFA5_3_2_5:5325,e_PDFA5_3_3_1:5331,e_PDFA5_3_3_2:5332,e_PDFA5_3_3_3:5333,e_PDFA5_3_3_4:5334,e_PDFA5_3_4_0:5340,e_PDFA5_3_4_1:5341,e_PDFA5_3_4_2:5342,e_PDFA5_3_4_3:5343,e_PDFA6_1_1:611,e_PDFA6_1_2:612,e_PDFA6_2_1:621,e_PDFA6_2_2:622,e_PDFA6_2_3:623,e_PDFA7_2_1:721,
e_PDFA7_2_2:722,e_PDFA7_2_3:723,e_PDFA7_2_4:724,e_PDFA7_2_5:725,e_PDFA7_3_1:731,e_PDFA7_3_2:732,e_PDFA7_3_3:733,e_PDFA7_3_4:734,e_PDFA7_3_5:735,e_PDFA7_3_6:736,e_PDFA7_3_7:737,e_PDFA7_3_8:738,e_PDFA7_3_9:739,e_PDFA7_5_1:751,e_PDFA7_8_1:781,e_PDFA7_8_2:782,e_PDFA7_8_3:783,e_PDFA7_8_4:784,e_PDFA7_8_5:785,e_PDFA7_8_6:786,e_PDFA7_8_7:787,e_PDFA7_8_8:788,e_PDFA7_8_9:789,e_PDFA7_8_10:7810,e_PDFA7_8_11:7811,e_PDFA7_8_12:7812,e_PDFA7_8_13:7813,e_PDFA7_8_14:7814,e_PDFA7_8_15:7815,e_PDFA7_8_16:7816,e_PDFA7_8_17:7817,
e_PDFA7_8_18:7818,e_PDFA7_8_19:7819,e_PDFA7_8_20:7820,e_PDFA7_8_21:7821,e_PDFA7_8_22:7822,e_PDFA7_8_23:7823,e_PDFA7_8_24:7824,e_PDFA7_8_25:7825,e_PDFA7_8_26:7826,e_PDFA7_8_27:7827,e_PDFA7_8_28:7828,e_PDFA7_8_29:7829,e_PDFA7_8_30:7830,e_PDFA7_8_31:7831,e_PDFA7_11_1:7111,e_PDFA7_11_2:7112,e_PDFA7_11_3:7113,e_PDFA7_11_4:7114,e_PDFA7_11_5:7115,e_PDFA9_1:91,e_PDFA9_2:92,e_PDFA9_3:93,e_PDFA9_4:94,e_PDFA3_8_1:381,e_PDFA8_2_2:822,e_PDFA8_3_3_1:8331,e_PDFA8_3_3_2:8332,e_PDFA8_3_4_1:8341,e_PDFA1_2_3:123,e_PDFA1_10_2:1102,
e_PDFA1_10_3:1103,e_PDFA1_12_10:11210,e_PDFA1_13_5:1135,e_PDFA2_3_10:2310,e_PDFA2_4_2_10:24220,e_PDFA2_4_2_11:24221,e_PDFA2_4_2_12:24222,e_PDFA2_4_2_13:24223,e_PDFA2_5_10:2510,e_PDFA2_5_11:2511,e_PDFA2_5_12:2512,e_PDFA2_8_3_1:2831,e_PDFA2_8_3_2:2832,e_PDFA2_8_3_3:2833,e_PDFA2_8_3_4:2834,e_PDFA2_8_3_5:2835,e_PDFA2_10_20:21020,e_PDFA2_10_21:21021,e_PDFA11_0_0:11E3,e_PDFA6_2_11_8:62118,e_PDFA8_1:81,e_PDFA_3E1:1,e_PDFA_3E2:2,e_PDFA_3E3:3,e_PDFA_LAST:4};b.ContentItem.Type={e_MCR:0,e_MCID:1,e_OBJR:2,e_Unknown:3};
b.Action.Type={e_GoTo:0,e_GoToR:1,e_GoToE:2,e_Launch:3,e_Thread:4,e_URI:5,e_Sound:6,e_Movie:7,e_Hide:8,e_Named:9,e_SubmitForm:10,e_ResetForm:11,e_ImportData:12,e_JavaScript:13,e_SetOCGState:14,e_Rendition:15,e_Trans:16,e_GoTo3DView:17,e_RichMediaExecute:18,e_Unknown:19};b.Action.FormActionFlag={e_exclude:0,e_include_no_value_fields:1,e_export_format:2,e_get_method:3,e_submit_coordinates:4,e_xfdf:5,e_include_append_saves:6,e_include_annotations:7,e_submit_pdf:8,e_canonical_format:9,e_excl_non_user_annots:10,
e_excl_F_key:11,e_embed_form:13};b.Page.EventType={e_action_trigger_page_open:11,e_action_trigger_page_close:12};b.Page.Box={e_media:0,e_crop:1,e_bleed:2,e_trim:3,e_art:4};b.Page.Rotate={e_0:0,e_90:1,e_180:2,e_270:3};b.Annot.EventType={e_action_trigger_activate:0,e_action_trigger_annot_enter:1,e_action_trigger_annot_exit:2,e_action_trigger_annot_down:3,e_action_trigger_annot_up:4,e_action_trigger_annot_focus:5,e_action_trigger_annot_blur:6,e_action_trigger_annot_page_open:7,e_action_trigger_annot_page_close:8,
e_action_trigger_annot_page_visible:9,e_action_trigger_annot_page_invisible:10};b.Annot.Type={e_Text:0,e_Link:1,e_FreeText:2,e_Line:3,e_Square:4,e_Circle:5,e_Polygon:6,e_Polyline:7,e_Highlight:8,e_Underline:9,e_Squiggly:10,e_StrikeOut:11,e_Stamp:12,e_Caret:13,e_Ink:14,e_Popup:15,e_FileAttachment:16,e_Sound:17,e_Movie:18,e_Widget:19,e_Screen:20,e_PrinterMark:21,e_TrapNet:22,e_Watermark:23,e_3D:24,e_Redact:25,e_Projection:26,e_RichMedia:27,e_Unknown:28};b.Annot.Flag={e_invisible:0,e_hidden:1,e_print:2,
e_no_zoom:3,e_no_rotate:4,e_no_view:5,e_annot_read_only:6,e_locked:7,e_toggle_no_view:8,e_locked_contents:9};b.AnnotBorderStyle.Style={e_solid:0,e_dashed:1,e_beveled:2,e_inset:3,e_underline:4};b.Annot.State={e_normal:0,e_rollover:1,e_down:2};b.LineAnnot.EndingStyle={e_Square:0,e_Circle:1,e_Diamond:2,e_OpenArrow:3,e_ClosedArrow:4,e_Butt:5,e_ROpenArrow:6,e_RClosedArrow:7,e_Slash:8,e_None:9,e_Unknown:10};b.LineAnnot.IntentType={e_LineArrow:0,e_LineDimension:1,e_null:2};b.LineAnnot.CapPos={e_Inline:0,
e_Top:1};b.FileAttachmentAnnot.Icon={e_Graph:0,e_PushPin:1,e_Paperclip:2,e_Tag:3,e_Unknown:4};b.FreeTextAnnot.IntentName={e_FreeText:0,e_FreeTextCallout:1,e_FreeTextTypeWriter:2,e_Unknown:3};b.LinkAnnot.HighlightingMode={e_none:0,e_invert:1,e_outline:2,e_push:3};b.MarkupAnnot.BorderEffect={e_None:0,e_Cloudy:1};b.PolyLineAnnot.IntentType={e_PolygonCloud:0,e_PolyLineDimension:1,e_PolygonDimension:2,e_Unknown:3};b.RedactionAnnot.QuadForm={e_LeftJustified:0,e_Centered:1,e_RightJustified:2,e_None:3};b.RubberStampAnnot.Icon=
{e_Approved:0,e_Experimental:1,e_NotApproved:2,e_AsIs:3,e_Expired:4,e_NotForPublicRelease:5,e_Confidential:6,e_Final:7,e_Sold:8,e_Departmental:9,e_ForComment:10,e_TopSecret:11,e_ForPublicRelease:12,e_Draft:13,e_Unknown:14};b.ScreenAnnot.ScaleType={e_Anamorphic:0,e_Proportional:1};b.ScreenAnnot.ScaleCondition={e_Always:0,e_WhenBigger:1,e_WhenSmaller:2,e_Never:3};b.ScreenAnnot.IconCaptionRelation={e_NoIcon:0,e_NoCaption:1,e_CBelowI:2,e_CAboveI:3,e_CRightILeft:4,e_CLeftIRight:5,e_COverlayI:6};b.SoundAnnot.Icon=
{e_Speaker:0,e_Mic:1,e_Unknown:2};b.TextAnnot.Icon={e_Comment:0,e_Key:1,e_Help:2,e_NewParagraph:3,e_Paragraph:4,e_Insert:5,e_Note:6,e_Unknown:7};b.WidgetAnnot.HighlightingMode={e_none:0,e_invert:1,e_outline:2,e_push:3,e_toggle:4};b.WidgetAnnot.ScaleType={e_Anamorphic:0,e_Proportional:1};b.WidgetAnnot.IconCaptionRelation={e_NoIcon:0,e_NoCaption:1,e_CBelowI:2,e_CAboveI:3,e_CRightILeft:4,e_CLeftIRight:5,e_COverlayI:6};b.WidgetAnnot.ScaleCondition={e_Always:0,e_WhenBigger:1,e_WhenSmaller:2,e_Never:3};
b.ColorSpace.Type={e_device_gray:0,e_device_rgb:1,e_device_cmyk:2,e_cal_gray:3,e_cal_rgb:4,e_lab:5,e_icc:6,e_indexed:7,e_pattern:8,e_separation:9,e_device_n:10,e_null:11};b.DocumentConversion._Result={e_Success:0,e_Incomplete:1,e_Failure:2};b.Destination.FitType={e_XYZ:0,e_Fit:1,e_FitH:2,e_FitV:3,e_FitR:4,e_FitB:5,e_FitBH:6,e_FitBV:7};b.GState.Attribute={e_transform:0,e_rendering_intent:1,e_stroke_cs:2,e_stroke_color:3,e_fill_cs:4,e_fill_color:5,e_line_width:6,e_line_cap:7,e_line_join:8,e_flatness:9,
e_miter_limit:10,e_dash_pattern:11,e_char_spacing:12,e_word_spacing:13,e_horizontal_scale:14,e_leading:15,e_font:16,e_font_size:17,e_text_render_mode:18,e_text_rise:19,e_text_knockout:20,e_text_pos_offset:21,e_blend_mode:22,e_opacity_fill:23,e_opacity_stroke:24,e_alpha_is_shape:25,e_soft_mask:26,e_smoothnes:27,e_auto_stoke_adjust:28,e_stroke_overprint:29,e_fill_overprint:30,e_overprint_mode:31,e_transfer_funct:32,e_BG_funct:33,e_UCR_funct:34,e_halftone:35,e_null:36};b.GState.LineCap={e_butt_cap:0,
e_round_cap:1,e_square_cap:2};b.GState.LineJoin={e_miter_join:0,e_round_join:1,e_bevel_join:2};b.GState.TextRenderingMode={e_fill_text:0,e_stroke_text:1,e_fill_stroke_text:2,e_invisible_text:3,e_fill_clip_text:4,e_stroke_clip_text:5,e_fill_stroke_clip_text:6,e_clip_text:7};b.GState.RenderingIntent={e_absolute_colorimetric:0,e_relative_colorimetric:1,e_saturation:2,e_perceptual:3};b.GState.BlendMode={e_bl_compatible:0,e_bl_normal:1,e_bl_multiply:2,e_bl_screen:3,e_bl_difference:4,e_bl_darken:5,e_bl_lighten:6,
e_bl_color_dodge:7,e_bl_color_burn:8,e_bl_exclusion:9,e_bl_hard_light:10,e_bl_overlay:11,e_bl_soft_light:12,e_bl_luminosity:13,e_bl_hue:14,e_bl_saturation:15,e_bl_color:16};b.Element.Type={e_null:0,e_path:1,e_text_begin:2,e_text:3,e_text_new_line:4,e_text_end:5,e_image:6,e_inline_image:7,e_shading:8,e_form:9,e_group_begin:10,e_group_end:11,e_marked_content_begin:12,e_marked_content_end:13,e_marked_content_point:14};b.Element.PathSegmentType={e_moveto:1,e_lineto:2,e_cubicto:3,e_conicto:4,e_rect:5,
e_closepath:6};b.ElementWriter.WriteMode={e_underlay:0,e_overlay:1,e_replacement:2};b.Flattener.Threshold={e_threshold_very_strict:0,e_threshold_strict:1,e_threshold_default:2,e_threshold_keep_most:3,e_threshold_keep_all:4};b.Flattener.Mode={e_mode_simple:0,e_mode_fast:1};b.Font.StandardType1Font={e_times_roman:0,e_times_bold:1,e_times_italic:2,e_times_bold_italic:3,e_helvetica:4,e_helvetica_bold:5,e_helvetica_oblique:6,e_helvetica_bold_oblique:7,e_courier:8,e_courier_bold:9,e_courier_oblique:10,
e_courier_bold_oblique:11,e_symbol:12,e_zapf_dingbats:13,e_null:14};b.Font.Encoding={e_IdentityH:0,e_Indices:1};b.Font.Type={e_Type1:0,e_TrueType:1,e_MMType1:2,e_Type3:3,e_Type0:4,e_CIDType0:5,e_CIDType2:6};b.Function.Type={e_sampled:0,e_exponential:2,e_stitching:3,e_postscript:4};b.HTML2PDF._WebPageSettings_ErrorHandling={e_WebPageSettings_abort:0,e_WebPageSettings_skip:1,e_WebPageSettings_ignore:2};b.HTML2PDF._Proxy_Type={e_Proxy_default:0,e_Proxy_none:1,e_Proxy_http:2,e_Proxy_socks5:3};b.Image.InputFilter=
{e_none:0,e_jpeg:1,e_jp2:2,e_flate:3,e_g3:4,e_g4:5,e_ascii_hex:6};b.Optimizer._ImageSettings_CompressionMode={e_ImageSettings_retain:0,e_ImageSettings_flate:1,e_ImageSettings_jpeg:2,e_ImageSettings_jpeg2000:3,e_ImageSettings_none:4};b.Optimizer._ImageSettings_DownsampleMode={e_ImageSettings_off:0,e_ImageSettings_default:1};b.Optimizer._MonoImageSettings_CompressionMode={e_MonoImageSettings_jbig2:0,e_MonoImageSettings_flate:1,e_MonoImageSettings_none:2};b.Optimizer._MonoImageSettings_DownsampleMode=
{e_MonoImageSettings_off:0,e_MonoImageSettings_default:1};b.PageLabel.Style={e_decimal:0,e_roman_uppercase:1,e_roman_lowercase:2,e_alphabetic_uppercase:3,e_alphabetic_lowercase:4,e_none:5};b.PageSet.Filter={e_all:0,e_even:1,e_odd:2};b.PatternColor.Type={e_uncolored_tiling_pattern:0,e_colored_tiling_pattern:1,e_shading:2,e_null:3};b.PatternColor.TilingType={e_constant_spacing:0,e_no_distortion:1,e_constant_spacing_fast_fill:2};b.PDFDoc.EventType={e_action_trigger_doc_will_close:17,e_action_trigger_doc_will_save:18,
e_action_trigger_doc_did_save:19,e_action_trigger_doc_will_print:20,e_action_trigger_doc_did_print:21};b.PDFDoc.InsertFlag={e_none:0,e_insert_bookmark:1};b.PDFDoc.ExtractFlag={e_forms_only:0,e_annots_only:1,e_both:2};b.PDFDocViewPrefs.PageMode={e_UseNone:0,e_UseThumbs:1,e_UseBookmarks:2,e_FullScreen:3,e_UseOC:4,e_UseAttachments:5};b.PDFDocViewPrefs.PageLayout={e_Default:0,e_SinglePage:1,e_OneColumn:2,e_TwoColumnLeft:3,e_TwoColumnRight:4,e_TwoPageLeft:5,e_TwoPageRight:6};b.PDFDocViewPrefs.ViewerPref=
{e_HideToolbar:0,e_HideMenubar:1,e_HideWindowUI:2,e_FitWindow:3,e_CenterWindow:4,e_DisplayDocTitle:5};b.PDFRasterizer.Type={e_BuiltIn:0,e_GDIPlus:1};b.PDFRasterizer.OverprintPreviewMode={e_op_off:0,e_op_on:1,e_op_pdfx_on:2};b.PDFRasterizer.ColorPostProcessMode={e_postprocess_none:0,e_postprocess_invert:1};b.PDFDraw.PixelFormat={e_rgba:0,e_bgra:1,e_rgb:2,e_bgr:3,e_gray:4,e_gray_alpha:5,e_cmyk:6};b.CloudErrorCode={e_STATUS_ERR:0,e_STATUS_OK:1,e_STATUS_NETWORK_ERR:2,e_STATUS_BAD_CREDENTIALS:3,e_STATUS_SERVICE_DOWN:4,
e_STATUS_INVALID_OPERATION:5,e_STATUS_NUM:6};b.CMSType={e_lcms:0,e_icm:1,e_no_cms:2};b.CharacterOrdering={e_Identity:0,e_Japan1:1,e_Japan2:2,e_GB1:3,e_CNS1:4,e_Korea1:5};b.LogLevel={e_LogLevel_Off:-1,e_LogLevel_Fatal:5,e_LogLevel_Error:4,e_LogLevel_Warning:3,e_LogLevel_Info:2,e_LogLevel_Trace:1,e_LogLevel_Debug:0};b.Shading.Type={e_function_shading:0,e_axial_shading:1,e_radial_shading:2,e_free_gouraud_shading:3,e_lattice_gouraud_shading:4,e_coons_shading:5,e_tensor_shading:6,e_null:7};b.Stamper.SizeType=
{e_relative_scale:1,e_absolute_size:2,e_font_size:3};b.Stamper.TextAlignment={e_align_left:-1,e_align_center:0,e_align_right:1};b.Stamper.HorizontalAlignment={e_horizontal_left:-1,e_horizontal_center:0,e_horizontal_right:1};b.Stamper.VerticalAlignment={e_vertical_bottom:-1,e_vertical_center:0,e_vertical_top:1};b.TextExtractor.ProcessingFlags={e_no_ligature_exp:1,e_no_dup_remove:2,e_punct_break:4,e_remove_hidden_text:8,e_no_invisible_text:16};b.TextExtractor.XMLOutputFlags={e_words_as_elements:1,e_output_bbox:2,
e_output_style_info:4};b.TextSearch.ResultCode={e_done:0,e_page:1,e_found:2};b.TextSearch.Mode={e_reg_expression:1,e_case_sensitive:2,e_whole_word:4,e_search_up:8,e_page_stop:16,e_highlight:32,e_ambient_string:64};b.Obj.Type={e_null:0,e_bool:1,e_number:2,e_name:3,e_string:4,e_dict:5,e_array:6,e_stream:7};b.SDFDoc.SaveOptions={e_incremental:1,e_remove_unused:2,e_hex_strings:4,e_omit_xref:8,e_linearized:16,e_compatibility:32};b.SecurityHandler.Permission={e_owner:1,e_doc_open:2,e_doc_modify:3,e_print:4,
e_print_high:5,e_extract_content:6,e_mod_annot:7,e_fill_forms:8,e_access_support:9,e_assemble_doc:10};b.SecurityHandler.AlgorithmType={e_RC4_40:1,e_RC4_128:2,e_AES:3,e_AES_256:4};b.Iterator.prototype.hasNext=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'hasNext'. Expected 0 arguments. Function Signature: hasNext()");return b.messageHandler.sendWithPromise("Iterator.hasNext",{itr:this.id},this.userPriority)};b.Iterator.prototype.next=function(){if(0!=
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'next'. Expected 0 arguments. Function Signature: next()");return b.messageHandler.sendWithPromise("Iterator.next",{itr:this.id},this.userPriority)};b.Iterator.prototype.assign=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'assign'. Expected 0 arguments. Function Signature: assign()");return b.messageHandler.sendWithPromise("Iterator.assign",{right:this.id},
this.userPriority).then(function(a){if("0"==a)return null;a=new b.Iterator(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Iterator.prototype.destroy=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<
deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("Iterator.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.DictIterator.prototype.hasNext=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'hasNext'. Expected 0 arguments. Function Signature: hasNext()");return b.messageHandler.sendWithPromise("DictIterator.hasNext",
{itr:this.id},this.userPriority)};b.DictIterator.prototype.key=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'key'. Expected 0 arguments. Function Signature: key()");return b.messageHandler.sendWithPromise("DictIterator.key",{itr:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.DictIterator.prototype.value=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'value'. Expected 0 arguments. Function Signature: value()");
return b.messageHandler.sendWithPromise("DictIterator.value",{itr:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.DictIterator.prototype.next=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'next'. Expected 0 arguments. Function Signature: next()");return b.messageHandler.sendWithPromise("DictIterator.next",{itr:this.id},this.userPriority)};b.DictIterator.prototype.assign=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'assign'. Expected 0 arguments. Function Signature: assign()");return b.messageHandler.sendWithPromise("DictIterator.assign",{right:this.id},this.userPriority).then(function(a){if("0"==a)return null;a=new b.DictIterator(a);createdObjects.push({name:a.name,id:a.id});return a})};b.DictIterator.prototype.destroy=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");
for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("DictIterator.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.Matrix2D.prototype.copy=
function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'copy'. Expected 0 arguments. Function Signature: copy()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'copy'. Perhaps a yield statement is required for "+this.yieldFunction+"?");return b.messageHandler.sendWithPromise("Matrix2D.copy",{m:this},this.userPriority).then(function(a){return"0"==
a?null:new b.Matrix2D(a)})};b.Matrix2D.prototype.set=function(a,c,d,e,f,g){if(6!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'set'. Expected 6 arguments. Function Signature: set(number, number, number, number, number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'set' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'set' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: set(number, number, number, number, number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'set' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'set' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: set(number, number, number, number, number, number).");
if(d instanceof Promise)throw new TypeError("3rd input argument in function 'set' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'set' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: set(number, number, number, number, number, number).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'set' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof e)throw new TypeError("4th input argument '"+e+"' in function 'set' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: set(number, number, number, number, number, number).");if(f instanceof Promise)throw new TypeError("5th input argument in function 'set' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof f)throw new TypeError("5th input argument '"+f+"' in function 'set' is of type '"+typeof f+"'. Expected type 'number'. Function Signature: set(number, number, number, number, number, number).");
if(g instanceof Promise)throw new TypeError("6th input argument in function 'set' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof g)throw new TypeError("6th input argument '"+g+"' in function 'set' is of type '"+typeof g+"'. Expected type 'number'. Function Signature: set(number, number, number, number, number, number).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'set'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");var k=this;this.yieldFunction="Matrix2D.set";return b.messageHandler.sendWithPromise("Matrix2D.set",{matrix:this,a:a,b:c,c:d,d:e,h:f,v:g},this.userPriority).then(function(a){k.yieldFunction=void 0;copyFunc(a.matrix,k)})};b.Matrix2D.prototype.concat=function(a,c,d,e,f,g){if(6!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'concat'. Expected 6 arguments. Function Signature: concat(number, number, number, number, number, number)");if(a instanceof
Promise)throw new TypeError("1st input argument in function 'concat' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'concat' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: concat(number, number, number, number, number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'concat' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'concat' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: concat(number, number, number, number, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'concat' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'concat' is of type '"+typeof d+
"'. Expected type 'number'. Function Signature: concat(number, number, number, number, number, number).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'concat' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof e)throw new TypeError("4th input argument '"+e+"' in function 'concat' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: concat(number, number, number, number, number, number).");if(f instanceof
Promise)throw new TypeError("5th input argument in function 'concat' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof f)throw new TypeError("5th input argument '"+f+"' in function 'concat' is of type '"+typeof f+"'. Expected type 'number'. Function Signature: concat(number, number, number, number, number, number).");if(g instanceof Promise)throw new TypeError("6th input argument in function 'concat' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof g)throw new TypeError("6th input argument '"+g+"' in function 'concat' is of type '"+typeof g+"'. Expected type 'number'. Function Signature: concat(number, number, number, number, number, number).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'concat'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var k=this;this.yieldFunction=
"Matrix2D.concat";return b.messageHandler.sendWithPromise("Matrix2D.concat",{matrix:this,a:a,b:c,c:d,d:e,h:f,v:g},this.userPriority).then(function(a){k.yieldFunction=void 0;copyFunc(a.matrix,k)})};b.Matrix2D.prototype.equals=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'equals'. Expected 1 argument. Function Signature: equals(Matrix2D)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'equals' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Matrix2D)&&"Matrix2D"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'equals' is of type '"+a.name+"'. Expected type 'Matrix2D'. Function Signature: equals(Matrix2D).");throw new TypeError("1st input argument '"+a+"' in function 'equals' is of type '"+typeof a+"'. Expected type 'Matrix2D'. Function Signature: equals(Matrix2D).");}if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'equals'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'equals'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("Matrix2D.equals",{m1:this,m2:a},this.userPriority)};b.Matrix2D.prototype.inverse=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'inverse'. Expected 0 arguments. Function Signature: inverse()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'inverse'. Perhaps a yield statement is required for "+this.yieldFunction+"?");return b.messageHandler.sendWithPromise("Matrix2D.inverse",{matrix:this},this.userPriority).then(function(a){return"0"==a?null:new b.Matrix2D(a)})};
b.Matrix2D.prototype.translate=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'translate'. Expected 2 arguments. Function Signature: translate(number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'translate' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'translate' is of type '"+
typeof a+"'. Expected type 'number'. Function Signature: translate(number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'translate' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'translate' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: translate(number, number).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+
this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'translate'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var d=this;this.yieldFunction="Matrix2D.translate";return b.messageHandler.sendWithPromise("Matrix2D.translate",{matrix:this,h:a,v:c},this.userPriority).then(function(a){d.yieldFunction=void 0;copyFunc(a.matrix,d)})};b.Matrix2D.prototype.scale=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'scale'. Expected 2 arguments. Function Signature: scale(number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'scale' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'scale' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: scale(number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'scale' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'scale' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: scale(number, number).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'scale'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var d=this;this.yieldFunction="Matrix2D.scale";return b.messageHandler.sendWithPromise("Matrix2D.scale",
{matrix:this,h:a,v:c},this.userPriority).then(function(a){d.yieldFunction=void 0;copyFunc(a.matrix,d)})};b.Matrix2D.createZeroMatrix=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createZeroMatrix'. Expected 0 arguments. Function Signature: createZeroMatrix()");return b.messageHandler.sendWithPromise("matrix2DCreateZeroMatrix",{},this.userPriority).then(function(a){return"0"==a?null:new b.Matrix2D(a)})};b.Matrix2D.createIdentityMatrix=function(){if(0!=
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createIdentityMatrix'. Expected 0 arguments. Function Signature: createIdentityMatrix()");return b.messageHandler.sendWithPromise("matrix2DCreateIdentityMatrix",{},this.userPriority).then(function(a){return"0"==a?null:new b.Matrix2D(a)})};b.Matrix2D.createRotationMatrix=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createRotationMatrix'. Expected 1 argument. Function Signature: createRotationMatrix(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createRotationMatrix' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createRotationMatrix' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: createRotationMatrix(number).");return b.messageHandler.sendWithPromise("matrix2DCreateRotationMatrix",{angle:a},this.userPriority).then(function(a){return"0"==
a?null:new b.Matrix2D(a)})};b.Field.create=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 1 argument. Function Signature: create(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'create' is of type '"+
a.name+"'. Expected type 'Obj'. Function Signature: create(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: create(Obj).");}return b.messageHandler.sendWithPromise("fieldCreate",{field_dict:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.Field(a)})};b.Field.prototype.assign=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'assign'. Expected 1 argument. Function Signature: assign(Field)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'assign' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Field)&&"Field"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'assign' is of type '"+a.name+"'. Expected type 'Field'. Function Signature: assign(Field).");throw new TypeError("1st input argument '"+a+"' in function 'assign' is of type '"+typeof a+"'. Expected type 'Field'. Function Signature: assign(Field).");
}if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'assign'. Perhaps a yield statement is required for "+this.yieldFunction+"?");if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'assign'. Perhaps a yield statement is required for '"+
a.yieldFunction+"'?");var c=this;this.yieldFunction="Field.assign";return b.messageHandler.sendWithPromise("Field.assign",{left:this,right:a},this.userPriority).then(function(a){c.yieldFunction=void 0;copyFunc(a.left,c)})};b.Field.prototype.isValid=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isValid'. Expected 0 arguments. Function Signature: isValid()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+
" recently altered a struct object without yielding. That object is now being accessed by function 'isValid'. Perhaps a yield statement is required for "+this.yieldFunction+"?");return b.messageHandler.sendWithPromise("Field.isValid",{field:this},this.userPriority)};b.Field.prototype.getType=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getType'. Expected 0 arguments. Function Signature: getType()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+
this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getType'. Perhaps a yield statement is required for "+this.yieldFunction+"?");return b.messageHandler.sendWithPromise("Field.getType",{field:this},this.userPriority)};b.Field.prototype.getValue=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getValue'. Expected 0 arguments. Function Signature: getValue()");if("undefined"!==
typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getValue'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction="Field.getValue";return b.messageHandler.sendWithPromise("Field.getValue",{field:this},this.userPriority).then(function(c){a.yieldFunction=void 0;if("0"==c)return null;copyFunc(c.field,a);return new b.Obj(c.result)})};b.Field.prototype.getValueAsString=
function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getValueAsString'. Expected 0 arguments. Function Signature: getValueAsString()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getValueAsString'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction="Field.getValueAsString";
return b.messageHandler.sendWithPromise("Field.getValueAsString",{field:this},this.userPriority).then(function(b){a.yieldFunction=void 0;copyFunc(b.field,a);return b.result})};b.Field.prototype.getDefaultValueAsString=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getDefaultValueAsString'. Expected 0 arguments. Function Signature: getDefaultValueAsString()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+
" recently altered a struct object without yielding. That object is now being accessed by function 'getDefaultValueAsString'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction="Field.getDefaultValueAsString";return b.messageHandler.sendWithPromise("Field.getDefaultValueAsString",{field:this},this.userPriority).then(function(b){a.yieldFunction=void 0;copyFunc(b.field,a);return b.result})};b.Field.prototype.setValueAsString=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'setValueAsString'. Expected 1 argument. Function Signature: setValueAsString(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setValueAsString' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setValueAsString' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setValueAsString(string).");if("undefined"!==
typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'setValueAsString'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var c=this;this.yieldFunction="Field.setValueAsString";return b.messageHandler.sendWithPromise("Field.setValueAsString",{field:this,value:a},this.userPriority).then(function(a){c.yieldFunction=void 0;if("0"==a)return null;copyFunc(a.field,c);return new b.ViewChangeCollection(a.result)})};
b.Field.prototype.setValue=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setValue'. Expected 1 argument. Function Signature: setValue(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setValue' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'setValue' is of type '"+a.name+
"'. Expected type 'Obj'. Function Signature: setValue(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'setValue' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: setValue(Obj).");}if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'setValue'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var c=this;this.yieldFunction=
"Field.setValue";return b.messageHandler.sendWithPromise("Field.setValue",{field:this,value:a.id},this.userPriority).then(function(a){c.yieldFunction=void 0;if("0"==a)return null;copyFunc(a.field,c);return new b.ViewChangeCollection(a.result)})};b.Field.prototype.setValueAsBool=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setValueAsBool'. Expected 1 argument. Function Signature: setValueAsBool(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setValueAsBool' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setValueAsBool' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setValueAsBool(boolean).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'setValueAsBool'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var c=this;this.yieldFunction="Field.setValueAsBool";
return b.messageHandler.sendWithPromise("Field.setValueAsBool",{field:this,value:a},this.userPriority).then(function(a){c.yieldFunction=void 0;if("0"==a)return null;copyFunc(a.field,c);return new b.ViewChangeCollection(a.result)})};b.Field.prototype.getTriggerAction=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTriggerAction'. Expected 1 argument. Function Signature: getTriggerAction(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getTriggerAction' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getTriggerAction' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getTriggerAction(number).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getTriggerAction'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var c=this;this.yieldFunction=
"Field.getTriggerAction";return b.messageHandler.sendWithPromise("Field.getTriggerAction",{field:this,trigger:a},this.userPriority).then(function(a){c.yieldFunction=void 0;if("0"==a)return null;copyFunc(a.field,c);return new b.Obj(a.result)})};b.Field.prototype.getValueAsBool=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getValueAsBool'. Expected 0 arguments. Function Signature: getValueAsBool()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+
this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getValueAsBool'. Perhaps a yield statement is required for "+this.yieldFunction+"?");return b.messageHandler.sendWithPromise("Field.getValueAsBool",{field:this},this.userPriority)};b.Field.prototype.refreshAppearance=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'refreshAppearance'. Expected 0 arguments. Function Signature: refreshAppearance()");
if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'refreshAppearance'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction="Field.refreshAppearance";return b.messageHandler.sendWithPromise("Field.refreshAppearance",{field:this},this.userPriority).then(function(b){a.yieldFunction=void 0;copyFunc(b.field,a)})};b.Field.prototype.eraseAppearance=
function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'eraseAppearance'. Expected 0 arguments. Function Signature: eraseAppearance()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'eraseAppearance'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction="Field.eraseAppearance";
return b.messageHandler.sendWithPromise("Field.eraseAppearance",{field:this},this.userPriority).then(function(b){a.yieldFunction=void 0;copyFunc(b.field,a)})};b.Field.prototype.getDefaultValue=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getDefaultValue'. Expected 0 arguments. Function Signature: getDefaultValue()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getDefaultValue'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");var a=this;this.yieldFunction="Field.getDefaultValue";return b.messageHandler.sendWithPromise("Field.getDefaultValue",{field:this},this.userPriority).then(function(c){a.yieldFunction=void 0;if("0"==c)return null;copyFunc(c.field,a);return new b.Obj(c.result)})};b.Field.prototype.getName=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getName'. Expected 0 arguments. Function Signature: getName()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+
this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getName'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction="Field.getName";return b.messageHandler.sendWithPromise("Field.getName",{field:this},this.userPriority).then(function(b){a.yieldFunction=void 0;copyFunc(b.field,a);return b.result})};b.Field.prototype.getPartialName=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getPartialName'. Expected 0 arguments. Function Signature: getPartialName()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getPartialName'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction="Field.getPartialName";return b.messageHandler.sendWithPromise("Field.getPartialName",{field:this},
this.userPriority).then(function(b){a.yieldFunction=void 0;copyFunc(b.field,a);return b.result})};b.Field.prototype.rename=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'rename'. Expected 1 argument. Function Signature: rename(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'rename' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'rename' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: rename(string).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'rename'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var c=this;this.yieldFunction="Field.rename";return b.messageHandler.sendWithPromise("Field.rename",{field:this,field_name:a},
this.userPriority).then(function(a){c.yieldFunction=void 0;copyFunc(a.field,c)})};b.Field.prototype.isAnnot=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isAnnot'. Expected 0 arguments. Function Signature: isAnnot()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'isAnnot'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("Field.isAnnot",{field:this},this.userPriority)};b.Field.prototype.useSignatureHandler=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'useSignatureHandler'. Expected 1 argument. Function Signature: useSignatureHandler(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'useSignatureHandler' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'useSignatureHandler' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: useSignatureHandler(number).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'useSignatureHandler'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var c=this;this.yieldFunction=
"Field.useSignatureHandler";return b.messageHandler.sendWithPromise("Field.useSignatureHandler",{field:this,signature_handler_id:a},this.userPriority).then(function(a){c.yieldFunction=void 0;if("0"==a)return null;copyFunc(a.field,c);return new b.Obj(a.result)})};b.Field.prototype.getFlag=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFlag'. Expected 1 argument. Function Signature: getFlag(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getFlag' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getFlag' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getFlag(number).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getFlag'. Perhaps a yield statement is required for "+this.yieldFunction+"?");return b.messageHandler.sendWithPromise("Field.getFlag",
{field:this,flag:a},this.userPriority)};b.Field.prototype.setFlag=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setFlag'. Expected 2 arguments. Function Signature: setFlag(number, boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setFlag' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setFlag' is of type '"+
typeof a+"'. Expected type 'number'. Function Signature: setFlag(number, boolean).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setFlag' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setFlag' is of type '"+typeof c+"'. Expected type 'boolean'. Function Signature: setFlag(number, boolean).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+
this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'setFlag'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var d=this;this.yieldFunction="Field.setFlag";return b.messageHandler.sendWithPromise("Field.setFlag",{field:this,flag:a,value:c},this.userPriority).then(function(a){d.yieldFunction=void 0;copyFunc(a.field,d)})};b.Field.prototype.getJustification=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getJustification'. Expected 0 arguments. Function Signature: getJustification()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getJustification'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction="Field.getJustification";return b.messageHandler.sendWithPromise("Field.getJustification",
{field:this},this.userPriority).then(function(b){a.yieldFunction=void 0;copyFunc(b.field,a);return b.result})};b.Field.prototype.setJustification=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setJustification'. Expected 1 argument. Function Signature: setJustification(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setJustification' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setJustification' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setJustification(number).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'setJustification'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var c=this;this.yieldFunction=
"Field.setJustification";return b.messageHandler.sendWithPromise("Field.setJustification",{field:this,j:a},this.userPriority).then(function(a){c.yieldFunction=void 0;copyFunc(a.field,c)})};b.Field.prototype.setMaxLen=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setMaxLen'. Expected 1 argument. Function Signature: setMaxLen(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setMaxLen' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setMaxLen' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setMaxLen(number).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'setMaxLen'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var c=this;this.yieldFunction="Field.setMaxLen";return b.messageHandler.sendWithPromise("Field.setMaxLen",
{field:this,max_len:a},this.userPriority).then(function(a){c.yieldFunction=void 0;copyFunc(a.field,c)})};b.Field.prototype.getMaxLen=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getMaxLen'. Expected 0 arguments. Function Signature: getMaxLen()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getMaxLen'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("Field.getMaxLen",{field:this},this.userPriority)};b.Field.prototype.getDefaultAppearance=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getDefaultAppearance'. Expected 0 arguments. Function Signature: getDefaultAppearance()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getDefaultAppearance'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");var a=this;this.yieldFunction="Field.getDefaultAppearance";return b.messageHandler.sendWithPromise("Field.getDefaultAppearance",{field:this},this.userPriority).then(function(c){a.yieldFunction=void 0;if("0"==c)return null;copyFunc(c.field,a);return new b.GState(c.result)})};b.Field.prototype.getUpdateRect=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getUpdateRect'. Expected 0 arguments. Function Signature: getUpdateRect()");
if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getUpdateRect'. Perhaps a yield statement is required for "+this.yieldFunction+"?");return b.messageHandler.sendWithPromise("Field.getUpdateRect",{field:this},this.userPriority).then(function(a){return"0"==a?null:new b.Rect(a)})};b.Field.prototype.flatten=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'flatten'. Expected 1 argument. Function Signature: flatten(Page)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'flatten' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Page)){if("object"==typeof a)throw new TypeError("1st input argument in function 'flatten' is of type '"+a.name+"'. Expected type 'Page'. Function Signature: flatten(Page).");throw new TypeError("1st input argument '"+
a+"' in function 'flatten' is of type '"+typeof a+"'. Expected type 'Page'. Function Signature: flatten(Page).");}if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'flatten'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var c=this;this.yieldFunction="Field.flatten";return b.messageHandler.sendWithPromise("Field.flatten",{field:this,page:a.id},
this.userPriority).then(function(a){c.yieldFunction=void 0;copyFunc(a.field,c)})};b.Field.prototype.findInheritedAttribute=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'findInheritedAttribute'. Expected 1 argument. Function Signature: findInheritedAttribute(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'findInheritedAttribute' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'findInheritedAttribute' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: findInheritedAttribute(string).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'findInheritedAttribute'. Perhaps a yield statement is required for "+this.yieldFunction+"?");return b.messageHandler.sendWithPromise("Field.findInheritedAttribute",
{field:this,attrib:a},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Field.prototype.getSDFObj=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSDFObj'. Expected 0 arguments. Function Signature: getSDFObj()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getSDFObj'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("Field.getSDFObj",{field:this},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Field.prototype.getOptCount=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getOptCount'. Expected 0 arguments. Function Signature: getOptCount()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getOptCount'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("Field.getOptCount",{field:this},this.userPriority)};b.Field.prototype.getOpt=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getOpt'. Expected 1 argument. Function Signature: getOpt(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getOpt' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'getOpt' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getOpt(number).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getOpt'. Perhaps a yield statement is required for "+this.yieldFunction+"?");return b.messageHandler.sendWithPromise("Field.getOpt",{field:this,index:a},this.userPriority)};b.FDFDoc.create=function(){if(0!=
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 0 arguments. Function Signature: create()");return b.messageHandler.sendWithPromise("fdfDocCreate",{},this.userPriority).then(function(a){if("0"==a)return null;a=new b.FDFDoc(a);createdObjects.push({name:a.name,id:a.id});return a})};b.FDFDoc.createFromStream=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromStream'. Expected 1 argument. Function Signature: createFromStream(Filter)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Filter)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromStream' is of type '"+a.name+"'. Expected type 'Filter'. Function Signature: createFromStream(Filter).");throw new TypeError("1st input argument '"+a+"' in function 'createFromStream' is of type '"+typeof a+"'. Expected type 'Filter'. Function Signature: createFromStream(Filter).");
}var c=-1;if(0!=a.id){for(var d=createdObjects.length-1;0<=d;d--)if(createdObjects[d].id==a.id){c=d;break}if(-1!=c)for(createdObjects.splice(c,1),d=deallocStackCounter.length-1;0<=d;d--)if(deallocStackCounter[d]>c)--deallocStackCounter[d];else break;else console.log("[WARNING] Object to remove ownership from was not found in memory deallocation list. Decallocating may cause errors.")}return b.messageHandler.sendWithPromise("fdfDocCreateFromStream",{no_own_stream:a.id},this.userPriority).then(function(a){if("0"==
a)return null;a=new b.FDFDoc(a);createdObjects.push({name:a.name,id:a.id});return a})};b.FDFDoc.createFromMemoryBuffer=function(a){a instanceof Array&&(a=new Float64Array(a));if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromMemoryBuffer'. Expected 1 argument. Function Signature: createFromMemoryBuffer(ArrayBuffer)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromMemoryBuffer' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!h.isArrayBuffer(a.buffer)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromMemoryBuffer' is of type '"+a.name+"'. Expected type 'ArrayBuffer'. Function Signature: createFromMemoryBuffer(ArrayBuffer).");throw new TypeError("1st input argument '"+a+"' in function 'createFromMemoryBuffer' is of type '"+typeof a+"'. Expected type 'ArrayBuffer'. Function Signature: createFromMemoryBuffer(ArrayBuffer).");}return b.messageHandler.sendWithPromise("fdfDocCreateFromMemoryBuffer",
{buf:a.buffer},this.userPriority).then(function(a){if("0"==a)return null;a=new b.FDFDoc(a);createdObjects.push({name:a.name,id:a.id});return a})};b.FDFDoc.prototype.destroy=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-
1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("FDFDoc.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.FDFDoc.prototype.isModified=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isModified'. Expected 0 arguments. Function Signature: isModified()");
return b.messageHandler.sendWithPromise("FDFDoc.isModified",{doc:this.id},this.userPriority)};b.FDFDoc.prototype.saveMemoryBuffer=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'saveMemoryBuffer'. Expected 0 arguments. Function Signature: saveMemoryBuffer()");return b.messageHandler.sendWithPromise("FDFDoc.saveMemoryBuffer",{doc:this.id},this.userPriority).then(function(a){return new Uint8Array(a)})};b.FDFDoc.prototype.getTrailer=function(){if(0!=
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTrailer'. Expected 0 arguments. Function Signature: getTrailer()");return b.messageHandler.sendWithPromise("FDFDoc.getTrailer",{doc:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.FDFDoc.prototype.getRoot=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getRoot'. Expected 0 arguments. Function Signature: getRoot()");return b.messageHandler.sendWithPromise("FDFDoc.getRoot",
{doc:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.FDFDoc.prototype.getFDF=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFDF'. Expected 0 arguments. Function Signature: getFDF()");return b.messageHandler.sendWithPromise("FDFDoc.getFDF",{doc:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.FDFDoc.prototype.getPDFFileName=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getPDFFileName'. Expected 0 arguments. Function Signature: getPDFFileName()");return b.messageHandler.sendWithPromise("FDFDoc.getPDFFileName",{doc:this.id},this.userPriority)};b.FDFDoc.prototype.setPDFFileName=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPDFFileName'. Expected 1 argument. Function Signature: setPDFFileName(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPDFFileName' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setPDFFileName' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setPDFFileName(string).");return b.messageHandler.sendWithPromise("FDFDoc.setPDFFileName",{doc:this.id,filepath:a},this.userPriority)};b.FDFDoc.prototype.getID=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getID'. Expected 0 arguments. Function Signature: getID()");return b.messageHandler.sendWithPromise("FDFDoc.getID",
{doc:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.FDFDoc.prototype.setID=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setID'. Expected 1 argument. Function Signature: setID(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setID' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'setID' is of type '"+
a.name+"'. Expected type 'Obj'. Function Signature: setID(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'setID' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: setID(Obj).");}return b.messageHandler.sendWithPromise("FDFDoc.setID",{doc:this.id,id:a.id},this.userPriority)};b.FDFDoc.prototype.getFieldIteratorBegin=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFieldIteratorBegin'. Expected 0 arguments. Function Signature: getFieldIteratorBegin()");
return b.messageHandler.sendWithPromise("FDFDoc.getFieldIteratorBegin",{doc:this.id},this.userPriority).then(function(a){if("0"==a)return null;a=new b.Iterator(a);createdObjects.push({name:a.name,id:a.id});return a})};b.FDFDoc.prototype.getFieldIterator=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFieldIterator'. Expected 1 argument. Function Signature: getFieldIterator(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getFieldIterator' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getFieldIterator' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: getFieldIterator(string).");return b.messageHandler.sendWithPromise("FDFDoc.getFieldIterator",{doc:this.id,field_name:a},this.userPriority).then(function(a){if("0"==a)return null;a=new b.Iterator(a);createdObjects.push({name:a.name,id:a.id});return a})};b.FDFDoc.prototype.getField=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getField'. Expected 1 argument. Function Signature: getField(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getField' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getField' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: getField(string).");return b.messageHandler.sendWithPromise("FDFDoc.getField",
{doc:this.id,field_name:a},this.userPriority).then(function(a){return"0"==a?null:new b.FDFField(a)})};b.FDFDoc.prototype.fieldCreate=function(a,c,d){"undefined"===typeof d&&(d=new b.Obj("0"));if(2>arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'fieldCreate'. Expected 2 to 3 arguments. Function Signature: fieldCreate(string, number, Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'fieldCreate' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'fieldCreate' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: fieldCreate(string, number, Obj).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'fieldCreate' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'fieldCreate' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: fieldCreate(string, number, Obj).");
if(d instanceof Promise)throw new TypeError("3rd input argument in function 'fieldCreate' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(d instanceof b.Obj)){if("object"==typeof d)throw new TypeError("3rd input argument in function 'fieldCreate' is of type '"+d.name+"'. Expected type 'Obj'. Function Signature: fieldCreate(string, number, Obj).");throw new TypeError("3rd input argument '"+d+"' in function 'fieldCreate' is of type '"+typeof d+"'. Expected type 'Obj'. Function Signature: fieldCreate(string, number, Obj).");
}return b.messageHandler.sendWithPromise("FDFDoc.fieldCreate",{doc:this.id,field_name:a,type:c,field_value:d.id},this.userPriority).then(function(a){return"0"==a?null:new b.FDFField(a)})};b.FDFDoc.prototype.fieldCreateFromString=function(a,c,d){if(3!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'fieldCreateFromString'. Expected 3 arguments. Function Signature: fieldCreateFromString(string, number, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'fieldCreateFromString' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'fieldCreateFromString' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: fieldCreateFromString(string, number, string).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'fieldCreateFromString' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'fieldCreateFromString' is of type '"+
typeof c+"'. Expected type 'number'. Function Signature: fieldCreateFromString(string, number, string).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'fieldCreateFromString' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'fieldCreateFromString' is of type '"+typeof d+"'. Expected type 'string'. Function Signature: fieldCreateFromString(string, number, string).");
return b.messageHandler.sendWithPromise("FDFDoc.fieldCreateFromString",{doc:this.id,field_name:a,type:c,field_value:d},this.userPriority).then(function(a){return"0"==a?null:new b.FDFField(a)})};b.FDFDoc.prototype.getSDFDoc=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSDFDoc'. Expected 0 arguments. Function Signature: getSDFDoc()");return b.messageHandler.sendWithPromise("FDFDoc.getSDFDoc",{doc:this.id},this.userPriority).then(function(a){return"0"==
a?null:new b.SDFDoc(a)})};b.FDFDoc.createFromXFDF=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromXFDF'. Expected 1 argument. Function Signature: createFromXFDF(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromXFDF' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createFromXFDF' is of type '"+
typeof a+"'. Expected type 'string'. Function Signature: createFromXFDF(string).");return b.messageHandler.sendWithPromise("fdfDocCreateFromXFDF",{file_name:a},this.userPriority).then(function(a){if("0"==a)return null;a=new b.FDFDoc(a);createdObjects.push({name:a.name,id:a.id});return a})};b.FDFDoc.prototype.saveAsXFDFAsString=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'saveAsXFDFAsString'. Expected 0 arguments. Function Signature: saveAsXFDFAsString()");
return b.messageHandler.sendWithPromise("FDFDoc.saveAsXFDFAsString",{doc:this.id},this.userPriority)};b.FDFDoc.prototype.mergeAnnots=function(a,c){"undefined"===typeof c&&(c="");if(1>arguments.length||2<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'mergeAnnots'. Expected 1 to 2 arguments. Function Signature: mergeAnnots(string, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'mergeAnnots' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'mergeAnnots' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: mergeAnnots(string, string).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'mergeAnnots' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'mergeAnnots' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: mergeAnnots(string, string).");
return b.messageHandler.sendWithPromise("FDFDoc.mergeAnnots",{doc:this.id,command_file:a,permitted_user:c},this.userPriority)};b.FDFField.create=function(a,c){"undefined"===typeof a&&(a=new b.Obj("0"));"undefined"===typeof c&&(c=new b.Obj("0"));if(2<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected at most 2 arguments. Function Signature: create(Obj, Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: create(Obj, Obj).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: create(Obj, Obj).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.Obj)){if("object"==typeof c)throw new TypeError("2nd input argument in function 'create' is of type '"+c.name+"'. Expected type 'Obj'. Function Signature: create(Obj, Obj).");throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'Obj'. Function Signature: create(Obj, Obj).");}return b.messageHandler.sendWithPromise("fdfFieldCreate",{field_dict:a.id,fdf_dict:c.id},this.userPriority).then(function(a){return"0"==a?null:new b.FDFField(a)})};
b.FDFField.prototype.assign=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'assign'. Expected 1 argument. Function Signature: assign(FDFField)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'assign' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.FDFField)&&"FDFField"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'assign' is of type '"+
a.name+"'. Expected type 'FDFField'. Function Signature: assign(FDFField).");throw new TypeError("1st input argument '"+a+"' in function 'assign' is of type '"+typeof a+"'. Expected type 'FDFField'. Function Signature: assign(FDFField).");}if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'assign'. Perhaps a yield statement is required for "+this.yieldFunction+"?");
if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'assign'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");var c=this;this.yieldFunction="FDFField.assign";return b.messageHandler.sendWithPromise("FDFField.assign",{left:this,right:a},this.userPriority).then(function(a){c.yieldFunction=void 0;copyFunc(a.left,c)})};b.FDFField.prototype.getValue=
function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getValue'. Expected 0 arguments. Function Signature: getValue()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getValue'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction="FDFField.getValue";return b.messageHandler.sendWithPromise("FDFField.getValue",
{field:this},this.userPriority).then(function(c){a.yieldFunction=void 0;if("0"==c)return null;copyFunc(c.field,a);return new b.Obj(c.result)})};b.FDFField.prototype.setValue=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setValue'. Expected 1 argument. Function Signature: setValue(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setValue' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'setValue' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: setValue(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'setValue' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: setValue(Obj).");}if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'setValue'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");var c=this;this.yieldFunction="FDFField.setValue";return b.messageHandler.sendWithPromise("FDFField.setValue",{field:this,value:a.id},this.userPriority).then(function(a){c.yieldFunction=void 0;copyFunc(a.field,c)})};b.FDFField.prototype.getName=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getName'. Expected 0 arguments. Function Signature: getName()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+
this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getName'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction="FDFField.getName";return b.messageHandler.sendWithPromise("FDFField.getName",{field:this},this.userPriority).then(function(b){a.yieldFunction=void 0;copyFunc(b.field,a);return b.result})};b.FDFField.prototype.getPartialName=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getPartialName'. Expected 0 arguments. Function Signature: getPartialName()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getPartialName'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction="FDFField.getPartialName";return b.messageHandler.sendWithPromise("FDFField.getPartialName",
{field:this},this.userPriority).then(function(b){a.yieldFunction=void 0;copyFunc(b.field,a);return b.result})};b.FDFField.prototype.getSDFObj=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSDFObj'. Expected 0 arguments. Function Signature: getSDFObj()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getSDFObj'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("FDFField.getSDFObj",{field:this},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.FDFField.prototype.findAttribute=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'findAttribute'. Expected 1 argument. Function Signature: findAttribute(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'findAttribute' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'findAttribute' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: findAttribute(string).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'findAttribute'. Perhaps a yield statement is required for "+this.yieldFunction+"?");return b.messageHandler.sendWithPromise("FDFField.findAttribute",
{field:this,attrib:a},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Filter.prototype.createASCII85Encode=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createASCII85Encode'. Expected 2 arguments. Function Signature: createASCII85Encode(number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createASCII85Encode' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createASCII85Encode' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: createASCII85Encode(number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createASCII85Encode' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createASCII85Encode' is of type '"+
typeof c+"'. Expected type 'number'. Function Signature: createASCII85Encode(number, number).");var d=-1;if(0!=this.id){for(var e=createdObjects.length-1;0<=e;e--)if(createdObjects[e].id==this.id){d=e;break}if(-1!=d)for(createdObjects.splice(d,1),e=deallocStackCounter.length-1;0<=e;e--)if(deallocStackCounter[e]>d)--deallocStackCounter[e];else break;else console.log("[WARNING] Object to remove ownership from was not found in memory deallocation list. Decallocating may cause errors.")}return b.messageHandler.sendWithPromise("Filter.createASCII85Encode",
{no_own_input_filter:this.id,line_width:a,buf_sz:c},this.userPriority).then(function(a){if("0"==a)return null;a=new b.Filter(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Filter.createMemoryFilter=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createMemoryFilter'. Expected 2 arguments. Function Signature: createMemoryFilter(number, boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createMemoryFilter' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createMemoryFilter' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: createMemoryFilter(number, boolean).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createMemoryFilter' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createMemoryFilter' is of type '"+
typeof c+"'. Expected type 'boolean'. Function Signature: createMemoryFilter(number, boolean).");return b.messageHandler.sendWithPromise("filterCreateMemoryFilter",{buf_sz:a,is_input:c},this.userPriority).then(function(a){if("0"==a)return null;a=new b.Filter(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Filter.createImage2RGBFromElement=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createImage2RGBFromElement'. Expected 1 argument. Function Signature: createImage2RGBFromElement(Element)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createImage2RGBFromElement' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Element)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createImage2RGBFromElement' is of type '"+a.name+"'. Expected type 'Element'. Function Signature: createImage2RGBFromElement(Element).");throw new TypeError("1st input argument '"+a+"' in function 'createImage2RGBFromElement' is of type '"+
typeof a+"'. Expected type 'Element'. Function Signature: createImage2RGBFromElement(Element).");}return b.messageHandler.sendWithPromise("filterCreateImage2RGBFromElement",{elem:a.id},this.userPriority).then(function(a){if("0"==a)return null;a=new b.Filter(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Filter.createImage2RGBFromObj=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createImage2RGBFromObj'. Expected 1 argument. Function Signature: createImage2RGBFromObj(Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createImage2RGBFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createImage2RGBFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createImage2RGBFromObj(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createImage2RGBFromObj' is of type '"+
typeof a+"'. Expected type 'Obj'. Function Signature: createImage2RGBFromObj(Obj).");}return b.messageHandler.sendWithPromise("filterCreateImage2RGBFromObj",{obj:a.id},this.userPriority).then(function(a){if("0"==a)return null;a=new b.Filter(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Filter.createImage2RGB=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createImage2RGB'. Expected 1 argument. Function Signature: createImage2RGB(Image)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createImage2RGB' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Image)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createImage2RGB' is of type '"+a.name+"'. Expected type 'Image'. Function Signature: createImage2RGB(Image).");throw new TypeError("1st input argument '"+a+"' in function 'createImage2RGB' is of type '"+typeof a+"'. Expected type 'Image'. Function Signature: createImage2RGB(Image).");
}return b.messageHandler.sendWithPromise("filterCreateImage2RGB",{img:a.id},this.userPriority).then(function(a){if("0"==a)return null;a=new b.Filter(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Filter.createImage2RGBAFromElement=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createImage2RGBAFromElement'. Expected 2 arguments. Function Signature: createImage2RGBAFromElement(Element, boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createImage2RGBAFromElement' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Element)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createImage2RGBAFromElement' is of type '"+a.name+"'. Expected type 'Element'. Function Signature: createImage2RGBAFromElement(Element, boolean).");throw new TypeError("1st input argument '"+a+"' in function 'createImage2RGBAFromElement' is of type '"+typeof a+"'. Expected type 'Element'. Function Signature: createImage2RGBAFromElement(Element, boolean).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createImage2RGBAFromElement' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createImage2RGBAFromElement' is of type '"+typeof c+"'. Expected type 'boolean'. Function Signature: createImage2RGBAFromElement(Element, boolean).");return b.messageHandler.sendWithPromise("filterCreateImage2RGBAFromElement",{elem:a.id,premultiply:c},this.userPriority).then(function(a){if("0"==a)return null;a=new b.Filter(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Filter.createImage2RGBAFromObj=function(a,
c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createImage2RGBAFromObj'. Expected 2 arguments. Function Signature: createImage2RGBAFromObj(Obj, boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createImage2RGBAFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createImage2RGBAFromObj' is of type '"+
a.name+"'. Expected type 'Obj'. Function Signature: createImage2RGBAFromObj(Obj, boolean).");throw new TypeError("1st input argument '"+a+"' in function 'createImage2RGBAFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createImage2RGBAFromObj(Obj, boolean).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createImage2RGBAFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof c)throw new TypeError("2nd input argument '"+
c+"' in function 'createImage2RGBAFromObj' is of type '"+typeof c+"'. Expected type 'boolean'. Function Signature: createImage2RGBAFromObj(Obj, boolean).");return b.messageHandler.sendWithPromise("filterCreateImage2RGBAFromObj",{obj:a.id,premultiply:c},this.userPriority).then(function(a){if("0"==a)return null;a=new b.Filter(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Filter.createImage2RGBA=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createImage2RGBA'. Expected 2 arguments. Function Signature: createImage2RGBA(Image, boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createImage2RGBA' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Image)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createImage2RGBA' is of type '"+a.name+"'. Expected type 'Image'. Function Signature: createImage2RGBA(Image, boolean).");throw new TypeError("1st input argument '"+a+"' in function 'createImage2RGBA' is of type '"+typeof a+
"'. Expected type 'Image'. Function Signature: createImage2RGBA(Image, boolean).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createImage2RGBA' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createImage2RGBA' is of type '"+typeof c+"'. Expected type 'boolean'. Function Signature: createImage2RGBA(Image, boolean).");return b.messageHandler.sendWithPromise("filterCreateImage2RGBA",
{img:a.id,premultiply:c},this.userPriority).then(function(a){if("0"==a)return null;a=new b.Filter(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Filter.createCustomWithStruct=function(a,c,d){if(1>arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createCustomWithStruct'. Expected 1 to 3 arguments. Function Signature: createCustomWithStruct(number, void*, void*)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createCustomWithStruct' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createCustomWithStruct' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: createCustomWithStruct(number, void*, void*).");return b.messageHandler.sendWithPromise("filterCreateCustomWithStruct",{mode:a,user_data:c,callbacks:d},this.userPriority).then(function(a){if("0"==a)return null;a=new b.Filter(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Filter.prototype.destroy=function(){if(0!=
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");
return b.messageHandler.sendWithPromise("Filter.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.Filter.prototype.attachFilter=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'attachFilter'. Expected 1 argument. Function Signature: attachFilter(Filter)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'attachFilter' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof
b.Filter)){if("object"==typeof a)throw new TypeError("1st input argument in function 'attachFilter' is of type '"+a.name+"'. Expected type 'Filter'. Function Signature: attachFilter(Filter).");throw new TypeError("1st input argument '"+a+"' in function 'attachFilter' is of type '"+typeof a+"'. Expected type 'Filter'. Function Signature: attachFilter(Filter).");}var c=-1;if(0!=a.id){for(var d=createdObjects.length-1;0<=d;d--)if(createdObjects[d].id==a.id){c=d;break}if(-1!=c)for(createdObjects.splice(c,
1),d=deallocStackCounter.length-1;0<=d;d--)if(deallocStackCounter[d]>c)--deallocStackCounter[d];else break;else console.log("[WARNING] Object to remove ownership from was not found in memory deallocation list. Decallocating may cause errors.")}return b.messageHandler.sendWithPromise("Filter.attachFilter",{filter:this.id,no_own_attach_filter:a.id},this.userPriority)};b.Filter.prototype.releaseAttachedFilter=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'releaseAttachedFilter'. Expected 0 arguments. Function Signature: releaseAttachedFilter()");
return b.messageHandler.sendWithPromise("Filter.releaseAttachedFilter",{filter:this.id},this.userPriority).then(function(a){if("0"==a)return null;a=new b.Filter(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Filter.prototype.getAttachedFilter=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getAttachedFilter'. Expected 0 arguments. Function Signature: getAttachedFilter()");return b.messageHandler.sendWithPromise("Filter.getAttachedFilter",
{filter:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Filter(a)})};b.Filter.prototype.getSourceFilter=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSourceFilter'. Expected 0 arguments. Function Signature: getSourceFilter()");return b.messageHandler.sendWithPromise("Filter.getSourceFilter",{filter:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Filter(a)})};b.Filter.prototype.getName=function(){if(0!=
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getName'. Expected 0 arguments. Function Signature: getName()");return b.messageHandler.sendWithPromise("Filter.getName",{filter:this.id},this.userPriority)};b.Filter.prototype.getDecodeName=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getDecodeName'. Expected 0 arguments. Function Signature: getDecodeName()");return b.messageHandler.sendWithPromise("Filter.getDecodeName",
{filter:this.id},this.userPriority)};b.Filter.prototype.begin=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'begin'. Expected 0 arguments. Function Signature: begin()");return b.messageHandler.sendWithPromise("Filter.begin",{filter:this.id},this.userPriority)};b.Filter.prototype.size=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'size'. Expected 0 arguments. Function Signature: size()");
return b.messageHandler.sendWithPromise("Filter.size",{filter:this.id},this.userPriority)};b.Filter.prototype.consume=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'consume'. Expected 1 argument. Function Signature: consume(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'consume' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'consume' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: consume(number).");return b.messageHandler.sendWithPromise("Filter.consume",{filter:this.id,num_bytes:a},this.userPriority)};b.Filter.prototype.count=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'count'. Expected 0 arguments. Function Signature: count()");return b.messageHandler.sendWithPromise("Filter.count",{filter:this.id},this.userPriority)};
b.Filter.prototype.setCount=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setCount'. Expected 1 argument. Function Signature: setCount(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setCount' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setCount' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setCount(number).");
return b.messageHandler.sendWithPromise("Filter.setCount",{filter:this.id,new_count:a},this.userPriority)};b.Filter.prototype.setStreamLength=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setStreamLength'. Expected 1 argument. Function Signature: setStreamLength(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setStreamLength' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setStreamLength' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setStreamLength(number).");return b.messageHandler.sendWithPromise("Filter.setStreamLength",{filter:this.id,bytes:a},this.userPriority)};b.Filter.prototype.flush=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'flush'. Expected 0 arguments. Function Signature: flush()");return b.messageHandler.sendWithPromise("Filter.flush",
{filter:this.id},this.userPriority)};b.Filter.prototype.flushAll=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'flushAll'. Expected 0 arguments. Function Signature: flushAll()");return b.messageHandler.sendWithPromise("Filter.flushAll",{filter:this.id},this.userPriority)};b.Filter.prototype.isInputFilter=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isInputFilter'. Expected 0 arguments. Function Signature: isInputFilter()");
return b.messageHandler.sendWithPromise("Filter.isInputFilter",{filter:this.id},this.userPriority)};b.Filter.prototype.canSeek=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'canSeek'. Expected 0 arguments. Function Signature: canSeek()");return b.messageHandler.sendWithPromise("Filter.canSeek",{filter:this.id},this.userPriority)};b.Filter.prototype.seek=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'seek'. Expected 2 arguments. Function Signature: seek(number, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'seek' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'seek' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: seek(number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'seek' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'seek' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: seek(number, number).");return b.messageHandler.sendWithPromise("Filter.seek",{filter:this.id,offset:a,origin:c},this.userPriority)};b.Filter.prototype.tell=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'tell'. Expected 0 arguments. Function Signature: tell()");return b.messageHandler.sendWithPromise("Filter.tell",
{filter:this.id},this.userPriority)};b.Filter.prototype.createInputIterator=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createInputIterator'. Expected 0 arguments. Function Signature: createInputIterator()");return b.messageHandler.sendWithPromise("Filter.createInputIterator",{filter:this.id},this.userPriority).then(function(a){if("0"==a)return null;a=new b.Filter(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Filter.prototype.getFilePath=
function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFilePath'. Expected 0 arguments. Function Signature: getFilePath()");return b.messageHandler.sendWithPromise("Filter.getFilePath",{filter:this.id},this.userPriority)};b.Filter.prototype.memoryFilterGetBuffer=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'memoryFilterGetBuffer'. Expected 0 arguments. Function Signature: memoryFilterGetBuffer()");
return b.messageHandler.sendWithPromise("Filter.memoryFilterGetBuffer",{filter:this.id},this.userPriority)};b.Filter.prototype.memoryFilterSetAsInputFilter=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'memoryFilterSetAsInputFilter'. Expected 0 arguments. Function Signature: memoryFilterSetAsInputFilter()");return b.messageHandler.sendWithPromise("Filter.memoryFilterSetAsInputFilter",{filter:this.id},this.userPriority)};b.Filter.prototype.memoryFilterReset=
function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'memoryFilterReset'. Expected 0 arguments. Function Signature: memoryFilterReset()");return b.messageHandler.sendWithPromise("Filter.memoryFilterReset",{filter:this.id},this.userPriority)};b.FilterReader.create=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 1 argument. Function Signature: create(Filter)");if(a instanceof
Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Filter)){if("object"==typeof a)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'Filter'. Function Signature: create(Filter).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'Filter'. Function Signature: create(Filter).");
}return b.messageHandler.sendWithPromise("filterReaderCreate",{filter:a.id},this.userPriority).then(function(a){if("0"==a)return null;a=new b.FilterReader(a);createdObjects.push({name:a.name,id:a.id});return a})};b.FilterReader.prototype.destroy=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;
break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("FilterReader.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.FilterReader.prototype.attachFilter=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'attachFilter'. Expected 1 argument. Function Signature: attachFilter(Filter)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'attachFilter' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Filter)){if("object"==typeof a)throw new TypeError("1st input argument in function 'attachFilter' is of type '"+a.name+"'. Expected type 'Filter'. Function Signature: attachFilter(Filter).");throw new TypeError("1st input argument '"+a+"' in function 'attachFilter' is of type '"+typeof a+"'. Expected type 'Filter'. Function Signature: attachFilter(Filter).");
}return b.messageHandler.sendWithPromise("FilterReader.attachFilter",{reader:this.id,filter:a.id},this.userPriority)};b.FilterReader.prototype.getAttachedFilter=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getAttachedFilter'. Expected 0 arguments. Function Signature: getAttachedFilter()");return b.messageHandler.sendWithPromise("FilterReader.getAttachedFilter",{reader:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Filter(a)})};
b.FilterReader.prototype.seek=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'seek'. Expected 2 arguments. Function Signature: seek(number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'seek' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'seek' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: seek(number, number).");
if(c instanceof Promise)throw new TypeError("2nd input argument in function 'seek' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'seek' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: seek(number, number).");return b.messageHandler.sendWithPromise("FilterReader.seek",{reader:this.id,offset:a,origin:c},this.userPriority)};b.FilterReader.prototype.tell=function(){if(0!=
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'tell'. Expected 0 arguments. Function Signature: tell()");return b.messageHandler.sendWithPromise("FilterReader.tell",{reader:this.id},this.userPriority)};b.FilterReader.prototype.count=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'count'. Expected 0 arguments. Function Signature: count()");return b.messageHandler.sendWithPromise("FilterReader.count",
{reader:this.id},this.userPriority)};b.FilterReader.prototype.flush=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'flush'. Expected 0 arguments. Function Signature: flush()");return b.messageHandler.sendWithPromise("FilterReader.flush",{reader:this.id},this.userPriority)};b.FilterReader.prototype.flushAll=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'flushAll'. Expected 0 arguments. Function Signature: flushAll()");
return b.messageHandler.sendWithPromise("FilterReader.flushAll",{reader:this.id},this.userPriority)};b.FilterReader.prototype.get=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'get'. Expected 0 arguments. Function Signature: get()");return b.messageHandler.sendWithPromise("FilterReader.get",{reader:this.id},this.userPriority)};b.FilterReader.prototype.peek=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'peek'. Expected 0 arguments. Function Signature: peek()");
return b.messageHandler.sendWithPromise("FilterReader.peek",{reader:this.id},this.userPriority)};b.FilterWriter.create=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 1 argument. Function Signature: create(Filter)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Filter)){if("object"==
typeof a)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'Filter'. Function Signature: create(Filter).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'Filter'. Function Signature: create(Filter).");}return b.messageHandler.sendWithPromise("filterWriterCreate",{filter:a.id},this.userPriority).then(function(a){if("0"==a)return null;a=new b.FilterWriter(a);createdObjects.push({name:a.name,
id:a.id});return a})};b.FilterWriter.prototype.destroy=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");
return b.messageHandler.sendWithPromise("FilterWriter.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.FilterWriter.prototype.attachFilter=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'attachFilter'. Expected 1 argument. Function Signature: attachFilter(Filter)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'attachFilter' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Filter)){if("object"==typeof a)throw new TypeError("1st input argument in function 'attachFilter' is of type '"+a.name+"'. Expected type 'Filter'. Function Signature: attachFilter(Filter).");throw new TypeError("1st input argument '"+a+"' in function 'attachFilter' is of type '"+typeof a+"'. Expected type 'Filter'. Function Signature: attachFilter(Filter).");}return b.messageHandler.sendWithPromise("FilterWriter.attachFilter",{writer:this.id,filter:a.id},this.userPriority)};b.FilterWriter.prototype.getAttachedFilter=
function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getAttachedFilter'. Expected 0 arguments. Function Signature: getAttachedFilter()");return b.messageHandler.sendWithPromise("FilterWriter.getAttachedFilter",{writer:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Filter(a)})};b.FilterWriter.prototype.seek=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'seek'. Expected 2 arguments. Function Signature: seek(number, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'seek' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'seek' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: seek(number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'seek' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'seek' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: seek(number, number).");return b.messageHandler.sendWithPromise("FilterWriter.seek",{writer:this.id,offset:a,origin:c},this.userPriority)};b.FilterWriter.prototype.tell=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'tell'. Expected 0 arguments. Function Signature: tell()");return b.messageHandler.sendWithPromise("FilterWriter.tell",
{writer:this.id},this.userPriority)};b.FilterWriter.prototype.count=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'count'. Expected 0 arguments. Function Signature: count()");return b.messageHandler.sendWithPromise("FilterWriter.count",{writer:this.id},this.userPriority)};b.FilterWriter.prototype.flush=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'flush'. Expected 0 arguments. Function Signature: flush()");
return b.messageHandler.sendWithPromise("FilterWriter.flush",{writer:this.id},this.userPriority)};b.FilterWriter.prototype.flushAll=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'flushAll'. Expected 0 arguments. Function Signature: flushAll()");return b.messageHandler.sendWithPromise("FilterWriter.flushAll",{writer:this.id},this.userPriority)};b.FilterWriter.prototype.writeUChar=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'writeUChar'. Expected 1 argument. Function Signature: writeUChar(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'writeUChar' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'writeUChar' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: writeUChar(number).");return b.messageHandler.sendWithPromise("FilterWriter.writeUChar",
{writer:this.id,ch:a},this.userPriority)};b.FilterWriter.prototype.writeInt16=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'writeInt16'. Expected 1 argument. Function Signature: writeInt16(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'writeInt16' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'writeInt16' is of type '"+
typeof a+"'. Expected type 'number'. Function Signature: writeInt16(number).");return b.messageHandler.sendWithPromise("FilterWriter.writeInt16",{writer:this.id,num:a},this.userPriority)};b.FilterWriter.prototype.writeUInt16=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'writeUInt16'. Expected 1 argument. Function Signature: writeUInt16(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'writeUInt16' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'writeUInt16' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: writeUInt16(number).");return b.messageHandler.sendWithPromise("FilterWriter.writeUInt16",{writer:this.id,num:a},this.userPriority)};b.FilterWriter.prototype.writeInt32=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'writeInt32'. Expected 1 argument. Function Signature: writeInt32(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'writeInt32' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'writeInt32' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: writeInt32(number).");return b.messageHandler.sendWithPromise("FilterWriter.writeInt32",{writer:this.id,num:a},this.userPriority)};b.FilterWriter.prototype.writeUInt32=
function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'writeUInt32'. Expected 1 argument. Function Signature: writeUInt32(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'writeUInt32' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'writeUInt32' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: writeUInt32(number).");
return b.messageHandler.sendWithPromise("FilterWriter.writeUInt32",{writer:this.id,num:a},this.userPriority)};b.FilterWriter.prototype.writeInt64=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'writeInt64'. Expected 1 argument. Function Signature: writeInt64(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'writeInt64' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=
typeof a)throw new TypeError("1st input argument '"+a+"' in function 'writeInt64' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: writeInt64(number).");return b.messageHandler.sendWithPromise("FilterWriter.writeInt64",{writer:this.id,num:a},this.userPriority)};b.FilterWriter.prototype.writeUInt64=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'writeUInt64'. Expected 1 argument. Function Signature: writeUInt64(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'writeUInt64' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'writeUInt64' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: writeUInt64(number).");return b.messageHandler.sendWithPromise("FilterWriter.writeUInt64",{writer:this.id,num:a},this.userPriority)};b.FilterWriter.prototype.writeString=
function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'writeString'. Expected 1 argument. Function Signature: writeString(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'writeString' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'writeString' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: writeString(string).");
return b.messageHandler.sendWithPromise("FilterWriter.writeString",{writer:this.id,str:a},this.userPriority)};b.FilterWriter.prototype.writeFilter=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'writeFilter'. Expected 1 argument. Function Signature: writeFilter(FilterReader)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'writeFilter' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.FilterReader)){if("object"==typeof a)throw new TypeError("1st input argument in function 'writeFilter' is of type '"+a.name+"'. Expected type 'FilterReader'. Function Signature: writeFilter(FilterReader).");throw new TypeError("1st input argument '"+a+"' in function 'writeFilter' is of type '"+typeof a+"'. Expected type 'FilterReader'. Function Signature: writeFilter(FilterReader).");}return b.messageHandler.sendWithPromise("FilterWriter.writeFilter",{writer:this.id,reader:a.id},
this.userPriority)};b.FilterWriter.prototype.writeLine=function(a,c){"undefined"===typeof c&&(c=13);if(1>arguments.length||2<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'writeLine'. Expected 1 to 2 arguments. Function Signature: writeLine(string, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'writeLine' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a&&null!==
a)throw new TypeError("1st input argument '"+a+"' in function 'writeLine' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: writeLine(string, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'writeLine' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'writeLine' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: writeLine(string, number).");
return b.messageHandler.sendWithPromise("FilterWriter.writeLine",{writer:this.id,line:a,eol:c},this.userPriority)};b.FilterWriter.prototype.writeBuffer=function(a){a instanceof Array&&(a=new Float64Array(a));if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'writeBuffer'. Expected 1 argument. Function Signature: writeBuffer(ArrayBuffer)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'writeBuffer' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!h.isArrayBuffer(a.buffer)){if("object"==typeof a)throw new TypeError("1st input argument in function 'writeBuffer' is of type '"+a.name+"'. Expected type 'ArrayBuffer'. Function Signature: writeBuffer(ArrayBuffer).");throw new TypeError("1st input argument '"+a+"' in function 'writeBuffer' is of type '"+typeof a+"'. Expected type 'ArrayBuffer'. Function Signature: writeBuffer(ArrayBuffer).");}return b.messageHandler.sendWithPromise("FilterWriter.writeBuffer",{writer:this.id,buf:a.buffer},this.userPriority)};
b.OCG.create=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 2 arguments. Function Signature: create(PDFDoc, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'create' is of type '"+
a.name+"'. Expected type 'PDFDoc'. Function Signature: create(PDFDoc, string).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: create(PDFDoc, string).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+
typeof c+"'. Expected type 'string'. Function Signature: create(PDFDoc, string).");return b.messageHandler.sendWithPromise("ocgCreate",{pdfdoc:a.id,name:c},this.userPriority).then(function(a){return"0"==a?null:new b.OCG(a)})};b.OCG.createFromObj=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected 1 argument. Function Signature: createFromObj(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");}return b.messageHandler.sendWithPromise("ocgCreateFromObj",{ocg_dict:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.OCG(a)})};
b.OCG.prototype.copy=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'copy'. Expected 0 arguments. Function Signature: copy()");return b.messageHandler.sendWithPromise("OCG.copy",{ocg:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.OCG(a)})};b.OCG.prototype.getSDFObj=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSDFObj'. Expected 0 arguments. Function Signature: getSDFObj()");
return b.messageHandler.sendWithPromise("OCG.getSDFObj",{ocg:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.OCG.prototype.isValid=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isValid'. Expected 0 arguments. Function Signature: isValid()");return b.messageHandler.sendWithPromise("OCG.isValid",{ocg:this.id},this.userPriority)};b.OCG.prototype.getName=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getName'. Expected 0 arguments. Function Signature: getName()");return b.messageHandler.sendWithPromise("OCG.getName",{c:this.id},this.userPriority)};b.OCG.prototype.setName=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setName'. Expected 1 argument. Function Signature: setName(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setName' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setName' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setName(string).");return b.messageHandler.sendWithPromise("OCG.setName",{c:this.id,value:a},this.userPriority)};b.OCG.prototype.getIntent=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getIntent'. Expected 0 arguments. Function Signature: getIntent()");return b.messageHandler.sendWithPromise("OCG.getIntent",
{c:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.OCG.prototype.setIntent=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setIntent'. Expected 1 argument. Function Signature: setIntent(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setIntent' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'setIntent' is of type '"+
a.name+"'. Expected type 'Obj'. Function Signature: setIntent(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'setIntent' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: setIntent(Obj).");}return b.messageHandler.sendWithPromise("OCG.setIntent",{c:this.id,value:a.id},this.userPriority)};b.OCG.prototype.hasUsage=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'hasUsage'. Expected 0 arguments. Function Signature: hasUsage()");
return b.messageHandler.sendWithPromise("OCG.hasUsage",{c:this.id},this.userPriority)};b.OCG.prototype.getUsage=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getUsage'. Expected 1 argument. Function Signature: getUsage(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getUsage' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'getUsage' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: getUsage(string).");return b.messageHandler.sendWithPromise("OCG.getUsage",{c:this.id,key:a},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.OCG.prototype.getCurrentState=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getCurrentState'. Expected 1 argument. Function Signature: getCurrentState(OCGContext)");if(a instanceof
Promise)throw new TypeError("1st input argument in function 'getCurrentState' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.OCGContext)){if("object"==typeof a)throw new TypeError("1st input argument in function 'getCurrentState' is of type '"+a.name+"'. Expected type 'OCGContext'. Function Signature: getCurrentState(OCGContext).");throw new TypeError("1st input argument '"+a+"' in function 'getCurrentState' is of type '"+typeof a+"'. Expected type 'OCGContext'. Function Signature: getCurrentState(OCGContext).");
}return b.messageHandler.sendWithPromise("OCG.getCurrentState",{c:this.id,ctx:a.id},this.userPriority)};b.OCG.prototype.setCurrentState=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setCurrentState'. Expected 2 arguments. Function Signature: setCurrentState(OCGContext, boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setCurrentState' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.OCGContext)){if("object"==typeof a)throw new TypeError("1st input argument in function 'setCurrentState' is of type '"+a.name+"'. Expected type 'OCGContext'. Function Signature: setCurrentState(OCGContext, boolean).");throw new TypeError("1st input argument '"+a+"' in function 'setCurrentState' is of type '"+typeof a+"'. Expected type 'OCGContext'. Function Signature: setCurrentState(OCGContext, boolean).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setCurrentState' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setCurrentState' is of type '"+typeof c+"'. Expected type 'boolean'. Function Signature: setCurrentState(OCGContext, boolean).");return b.messageHandler.sendWithPromise("OCG.setCurrentState",{c:this.id,ctx:a.id,state:c},this.userPriority)};b.OCG.prototype.getInitialState=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getInitialState'. Expected 1 argument. Function Signature: getInitialState(OCGConfig)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'getInitialState' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.OCGConfig)){if("object"==typeof a)throw new TypeError("1st input argument in function 'getInitialState' is of type '"+a.name+"'. Expected type 'OCGConfig'. Function Signature: getInitialState(OCGConfig).");throw new TypeError("1st input argument '"+a+"' in function 'getInitialState' is of type '"+typeof a+
"'. Expected type 'OCGConfig'. Function Signature: getInitialState(OCGConfig).");}return b.messageHandler.sendWithPromise("OCG.getInitialState",{c:this.id,cfg:a.id},this.userPriority)};b.OCG.prototype.setInitialState=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setInitialState'. Expected 2 arguments. Function Signature: setInitialState(OCGConfig, boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setInitialState' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.OCGConfig)){if("object"==typeof a)throw new TypeError("1st input argument in function 'setInitialState' is of type '"+a.name+"'. Expected type 'OCGConfig'. Function Signature: setInitialState(OCGConfig, boolean).");throw new TypeError("1st input argument '"+a+"' in function 'setInitialState' is of type '"+typeof a+"'. Expected type 'OCGConfig'. Function Signature: setInitialState(OCGConfig, boolean).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setInitialState' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setInitialState' is of type '"+typeof c+"'. Expected type 'boolean'. Function Signature: setInitialState(OCGConfig, boolean).");return b.messageHandler.sendWithPromise("OCG.setInitialState",{c:this.id,cfg:a.id,state:c},this.userPriority)};b.OCG.prototype.isLocked=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isLocked'. Expected 1 argument. Function Signature: isLocked(OCGConfig)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'isLocked' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.OCGConfig)){if("object"==typeof a)throw new TypeError("1st input argument in function 'isLocked' is of type '"+a.name+"'. Expected type 'OCGConfig'. Function Signature: isLocked(OCGConfig).");throw new TypeError("1st input argument '"+a+"' in function 'isLocked' is of type '"+typeof a+"'. Expected type 'OCGConfig'. Function Signature: isLocked(OCGConfig).");
}return b.messageHandler.sendWithPromise("OCG.isLocked",{c:this.id,cfg:a.id},this.userPriority)};b.OCG.prototype.setLocked=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setLocked'. Expected 2 arguments. Function Signature: setLocked(OCGConfig, boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setLocked' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof
b.OCGConfig)){if("object"==typeof a)throw new TypeError("1st input argument in function 'setLocked' is of type '"+a.name+"'. Expected type 'OCGConfig'. Function Signature: setLocked(OCGConfig, boolean).");throw new TypeError("1st input argument '"+a+"' in function 'setLocked' is of type '"+typeof a+"'. Expected type 'OCGConfig'. Function Signature: setLocked(OCGConfig, boolean).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setLocked' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setLocked' is of type '"+typeof c+"'. Expected type 'boolean'. Function Signature: setLocked(OCGConfig, boolean).");return b.messageHandler.sendWithPromise("OCG.setLocked",{c:this.id,cfg:a.id,state:c},this.userPriority)};b.OCGConfig.createFromObj=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected 1 argument. Function Signature: createFromObj(Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");
}return b.messageHandler.sendWithPromise("ocgConfigCreateFromObj",{dict:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.OCGConfig(a)})};b.OCGConfig.create=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 2 arguments. Function Signature: create(PDFDoc, boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: create(PDFDoc, boolean).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: create(PDFDoc, boolean).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'boolean'. Function Signature: create(PDFDoc, boolean).");return b.messageHandler.sendWithPromise("ocgConfigCreate",{pdfdoc:a.id,default_config:c},this.userPriority).then(function(a){return"0"==a?null:new b.OCGConfig(a)})};b.OCGConfig.prototype.copy=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'copy'. Expected 0 arguments. Function Signature: copy()");
return b.messageHandler.sendWithPromise("OCGConfig.copy",{c:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.OCGConfig(a)})};b.OCGConfig.prototype.getSDFObj=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSDFObj'. Expected 0 arguments. Function Signature: getSDFObj()");return b.messageHandler.sendWithPromise("OCGConfig.getSDFObj",{c:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.OCGConfig.prototype.getOrder=
function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getOrder'. Expected 0 arguments. Function Signature: getOrder()");return b.messageHandler.sendWithPromise("OCGConfig.getOrder",{c:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.OCGConfig.prototype.setOrder=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setOrder'. Expected 1 argument. Function Signature: setOrder(Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setOrder' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'setOrder' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: setOrder(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'setOrder' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: setOrder(Obj).");
}return b.messageHandler.sendWithPromise("OCGConfig.setOrder",{c:this.id,value:a.id},this.userPriority)};b.OCGConfig.prototype.getName=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getName'. Expected 0 arguments. Function Signature: getName()");return b.messageHandler.sendWithPromise("OCGConfig.getName",{c:this.id},this.userPriority)};b.OCGConfig.prototype.setName=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setName'. Expected 1 argument. Function Signature: setName(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setName' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setName' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setName(string).");return b.messageHandler.sendWithPromise("OCGConfig.setName",{c:this.id,value:a},this.userPriority)};b.OCGConfig.prototype.getCreator=function(){if(0!=
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getCreator'. Expected 0 arguments. Function Signature: getCreator()");return b.messageHandler.sendWithPromise("OCGConfig.getCreator",{c:this.id},this.userPriority)};b.OCGConfig.prototype.setCreator=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setCreator'. Expected 1 argument. Function Signature: setCreator(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setCreator' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setCreator' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setCreator(string).");return b.messageHandler.sendWithPromise("OCGConfig.setCreator",{c:this.id,value:a},this.userPriority)};b.OCGConfig.prototype.getInitBaseState=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getInitBaseState'. Expected 0 arguments. Function Signature: getInitBaseState()");
return b.messageHandler.sendWithPromise("OCGConfig.getInitBaseState",{c:this.id},this.userPriority)};b.OCGConfig.prototype.setInitBaseState=function(a){"undefined"===typeof a&&(a="ON");if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setInitBaseState'. Expected at most 1 arguments. Function Signature: setInitBaseState(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setInitBaseState' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof a&&null!==a)throw new TypeError("1st input argument '"+a+"' in function 'setInitBaseState' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setInitBaseState(string).");return b.messageHandler.sendWithPromise("OCGConfig.setInitBaseState",{c:this.id,value:a},this.userPriority)};b.OCGConfig.prototype.getInitOnStates=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getInitOnStates'. Expected 0 arguments. Function Signature: getInitOnStates()");
return b.messageHandler.sendWithPromise("OCGConfig.getInitOnStates",{c:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.OCGConfig.prototype.setInitOnStates=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setInitOnStates'. Expected 1 argument. Function Signature: setInitOnStates(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setInitOnStates' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'setInitOnStates' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: setInitOnStates(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'setInitOnStates' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: setInitOnStates(Obj).");}return b.messageHandler.sendWithPromise("OCGConfig.setInitOnStates",{c:this.id,value:a.id},this.userPriority)};b.OCGConfig.prototype.getInitOffStates=
function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getInitOffStates'. Expected 0 arguments. Function Signature: getInitOffStates()");return b.messageHandler.sendWithPromise("OCGConfig.getInitOffStates",{c:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.OCGConfig.prototype.setInitOffStates=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setInitOffStates'. Expected 1 argument. Function Signature: setInitOffStates(Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setInitOffStates' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'setInitOffStates' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: setInitOffStates(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'setInitOffStates' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: setInitOffStates(Obj).");
}return b.messageHandler.sendWithPromise("OCGConfig.setInitOffStates",{c:this.id,value:a.id},this.userPriority)};b.OCGConfig.prototype.getIntent=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getIntent'. Expected 0 arguments. Function Signature: getIntent()");return b.messageHandler.sendWithPromise("OCGConfig.getIntent",{c:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.OCGConfig.prototype.setIntent=function(a){if(1!=
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setIntent'. Expected 1 argument. Function Signature: setIntent(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setIntent' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'setIntent' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: setIntent(Obj).");
throw new TypeError("1st input argument '"+a+"' in function 'setIntent' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: setIntent(Obj).");}return b.messageHandler.sendWithPromise("OCGConfig.setIntent",{c:this.id,value:a.id},this.userPriority)};b.OCGConfig.prototype.getLockedOCGs=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getLockedOCGs'. Expected 0 arguments. Function Signature: getLockedOCGs()");return b.messageHandler.sendWithPromise("OCGConfig.getLockedOCGs",
{c:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.OCGConfig.prototype.setLockedOCGs=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setLockedOCGs'. Expected 1 argument. Function Signature: setLockedOCGs(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setLockedOCGs' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==
typeof a)throw new TypeError("1st input argument in function 'setLockedOCGs' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: setLockedOCGs(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'setLockedOCGs' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: setLockedOCGs(Obj).");}return b.messageHandler.sendWithPromise("OCGConfig.setLockedOCGs",{c:this.id,value:a.id},this.userPriority)};b.OCGContext.createFromConfig=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'createFromConfig'. Expected 1 argument. Function Signature: createFromConfig(OCGConfig)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromConfig' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.OCGConfig)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromConfig' is of type '"+a.name+"'. Expected type 'OCGConfig'. Function Signature: createFromConfig(OCGConfig).");
throw new TypeError("1st input argument '"+a+"' in function 'createFromConfig' is of type '"+typeof a+"'. Expected type 'OCGConfig'. Function Signature: createFromConfig(OCGConfig).");}return b.messageHandler.sendWithPromise("ocgContextCreateFromConfig",{cfg:a.id},this.userPriority).then(function(a){if("0"==a)return null;a=new b.OCGContext(a);createdObjects.push({name:a.name,id:a.id});return a})};b.OCGContext.prototype.copy=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'copy'. Expected 0 arguments. Function Signature: copy()");
return b.messageHandler.sendWithPromise("OCGContext.copy",{c:this.id},this.userPriority).then(function(a){if("0"==a)return null;a=new b.OCGContext(a);createdObjects.push({name:a.name,id:a.id});return a})};b.OCGContext.prototype.destroy=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=
a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("OCGContext.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.OCGContext.prototype.getState=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getState'. Expected 1 argument. Function Signature: getState(OCG)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'getState' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.OCG)){if("object"==typeof a)throw new TypeError("1st input argument in function 'getState' is of type '"+a.name+"'. Expected type 'OCG'. Function Signature: getState(OCG).");throw new TypeError("1st input argument '"+a+"' in function 'getState' is of type '"+typeof a+"'. Expected type 'OCG'. Function Signature: getState(OCG).");
}return b.messageHandler.sendWithPromise("OCGContext.getState",{c:this.id,grp:a.id},this.userPriority)};b.OCGContext.prototype.setState=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setState'. Expected 2 arguments. Function Signature: setState(OCG, boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setState' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof
b.OCG)){if("object"==typeof a)throw new TypeError("1st input argument in function 'setState' is of type '"+a.name+"'. Expected type 'OCG'. Function Signature: setState(OCG, boolean).");throw new TypeError("1st input argument '"+a+"' in function 'setState' is of type '"+typeof a+"'. Expected type 'OCG'. Function Signature: setState(OCG, boolean).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setState' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setState' is of type '"+typeof c+"'. Expected type 'boolean'. Function Signature: setState(OCG, boolean).");return b.messageHandler.sendWithPromise("OCGContext.setState",{c:this.id,grp:a.id,state:c},this.userPriority)};b.OCGContext.prototype.resetStates=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'resetStates'. Expected 1 argument. Function Signature: resetStates(boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'resetStates' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'resetStates' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: resetStates(boolean).");return b.messageHandler.sendWithPromise("OCGContext.resetStates",{c:this.id,all_on:a},this.userPriority)};b.OCGContext.prototype.setNonOCDrawing=
function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setNonOCDrawing'. Expected 1 argument. Function Signature: setNonOCDrawing(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setNonOCDrawing' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setNonOCDrawing' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setNonOCDrawing(boolean).");
return b.messageHandler.sendWithPromise("OCGContext.setNonOCDrawing",{c:this.id,draw_non_OC:a},this.userPriority)};b.OCGContext.prototype.getNonOCDrawing=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getNonOCDrawing'. Expected 0 arguments. Function Signature: getNonOCDrawing()");return b.messageHandler.sendWithPromise("OCGContext.getNonOCDrawing",{c:this.id},this.userPriority)};b.OCGContext.prototype.setOCDrawMode=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'setOCDrawMode'. Expected 1 argument. Function Signature: setOCDrawMode(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setOCDrawMode' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setOCDrawMode' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setOCDrawMode(number).");return b.messageHandler.sendWithPromise("OCGContext.setOCDrawMode",
{c:this.id,oc_draw_mode:a},this.userPriority)};b.OCGContext.prototype.getOCMode=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getOCMode'. Expected 0 arguments. Function Signature: getOCMode()");return b.messageHandler.sendWithPromise("OCGContext.getOCMode",{c:this.id},this.userPriority)};b.OCMD.createFromObj=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected 1 argument. Function Signature: createFromObj(Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");
}return b.messageHandler.sendWithPromise("ocmdCreateFromObj",{ocmd_dict:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.OCMD(a)})};b.OCMD.create=function(a,c,d){if(3!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 3 arguments. Function Signature: create(PDFDoc, Obj, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: create(PDFDoc, Obj, number).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: create(PDFDoc, Obj, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.Obj)){if("object"==typeof c)throw new TypeError("2nd input argument in function 'create' is of type '"+c.name+"'. Expected type 'Obj'. Function Signature: create(PDFDoc, Obj, number).");throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'Obj'. Function Signature: create(PDFDoc, Obj, number).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'create' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: create(PDFDoc, Obj, number).");return b.messageHandler.sendWithPromise("ocmdCreate",{pdfdoc:a.id,ocgs:c.id,vis_policy:d},this.userPriority).then(function(a){return"0"==a?null:new b.OCMD(a)})};b.OCMD.prototype.copy=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'copy'. Expected 0 arguments. Function Signature: copy()");
return b.messageHandler.sendWithPromise("OCMD.copy",{ocmd:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.OCMD(a)})};b.OCMD.prototype.getSDFObj=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSDFObj'. Expected 0 arguments. Function Signature: getSDFObj()");return b.messageHandler.sendWithPromise("OCMD.getSDFObj",{ocmd:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.OCMD.prototype.getOCGs=
function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getOCGs'. Expected 0 arguments. Function Signature: getOCGs()");return b.messageHandler.sendWithPromise("OCMD.getOCGs",{ocmd:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.OCMD.prototype.getVisibilityExpression=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getVisibilityExpression'. Expected 0 arguments. Function Signature: getVisibilityExpression()");
return b.messageHandler.sendWithPromise("OCMD.getVisibilityExpression",{ocmd:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.OCMD.prototype.isValid=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isValid'. Expected 0 arguments. Function Signature: isValid()");return b.messageHandler.sendWithPromise("OCMD.isValid",{ocmd:this.id},this.userPriority)};b.OCMD.prototype.isCurrentlyVisible=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'isCurrentlyVisible'. Expected 1 argument. Function Signature: isCurrentlyVisible(OCGContext)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'isCurrentlyVisible' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.OCGContext)){if("object"==typeof a)throw new TypeError("1st input argument in function 'isCurrentlyVisible' is of type '"+a.name+"'. Expected type 'OCGContext'. Function Signature: isCurrentlyVisible(OCGContext).");
throw new TypeError("1st input argument '"+a+"' in function 'isCurrentlyVisible' is of type '"+typeof a+"'. Expected type 'OCGContext'. Function Signature: isCurrentlyVisible(OCGContext).");}return b.messageHandler.sendWithPromise("OCMD.isCurrentlyVisible",{ocmd:this.id,ctx:a.id},this.userPriority)};b.OCMD.prototype.getVisibilityPolicy=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getVisibilityPolicy'. Expected 0 arguments. Function Signature: getVisibilityPolicy()");
return b.messageHandler.sendWithPromise("OCMD.getVisibilityPolicy",{ocmd:this.id},this.userPriority)};b.OCMD.prototype.setVisibilityPolicy=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setVisibilityPolicy'. Expected 1 argument. Function Signature: setVisibilityPolicy(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setVisibilityPolicy' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setVisibilityPolicy' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setVisibilityPolicy(number).");return b.messageHandler.sendWithPromise("OCMD.setVisibilityPolicy",{ocmd:this.id,vis_policy:a},this.userPriority)};b.PDFACompliance.prototype.destroy=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");
for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("PDFACompliance.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.PDFACompliance.prototype.getErrorCount=
function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getErrorCount'. Expected 0 arguments. Function Signature: getErrorCount()");return b.messageHandler.sendWithPromise("PDFACompliance.getErrorCount",{pdfac:this.id},this.userPriority)};b.PDFACompliance.prototype.getError=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getError'. Expected 1 argument. Function Signature: getError(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'getError' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getError' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getError(number).");return b.messageHandler.sendWithPromise("PDFACompliance.getError",{pdfac:this.id,idx:a},this.userPriority)};b.PDFACompliance.prototype.getRefObjCount=
function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getRefObjCount'. Expected 1 argument. Function Signature: getRefObjCount(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getRefObjCount' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getRefObjCount' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getRefObjCount(number).");
return b.messageHandler.sendWithPromise("PDFACompliance.getRefObjCount",{pdfac:this.id,id:a},this.userPriority)};b.PDFACompliance.prototype.getRefObj=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getRefObj'. Expected 2 arguments. Function Signature: getRefObj(number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getRefObj' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getRefObj' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getRefObj(number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'getRefObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'getRefObj' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: getRefObj(number, number).");
return b.messageHandler.sendWithPromise("PDFACompliance.getRefObj",{pdfac:this.id,id:a,err_idx:c},this.userPriority)};b.PDFACompliance.getPDFAErrorMessage=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPDFAErrorMessage'. Expected 1 argument. Function Signature: getPDFAErrorMessage(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getPDFAErrorMessage' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getPDFAErrorMessage' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getPDFAErrorMessage(number).");return b.messageHandler.sendWithPromise("pdfaComplianceGetPDFAErrorMessage",{id:a},this.userPriority)};b.PDFACompliance.prototype.saveAsFromFileName=function(a,c){"undefined"===typeof c&&(c=!1);if(1>arguments.length||2<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'saveAsFromFileName'. Expected 1 to 2 arguments. Function Signature: saveAsFromFileName(string, boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'saveAsFromFileName' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'saveAsFromFileName' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: saveAsFromFileName(string, boolean).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'saveAsFromFileName' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'saveAsFromFileName' is of type '"+typeof c+"'. Expected type 'boolean'. Function Signature: saveAsFromFileName(string, boolean).");return b.messageHandler.sendWithPromise("PDFACompliance.saveAsFromFileName",{pdfac:this.id,file_path:a,linearized:c},this.userPriority)};b.PDFACompliance.prototype.saveAsFromBuffer=function(a){"undefined"===typeof a&&(a=!1);if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'saveAsFromBuffer'. Expected at most 1 arguments. Function Signature: saveAsFromBuffer(boolean)");
if(a instanceof Promise)throw new TypeError("3rd input argument in function 'saveAsFromBuffer' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("3rd input argument '"+a+"' in function 'saveAsFromBuffer' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: saveAsFromBuffer(boolean).");return b.messageHandler.sendWithPromise("PDFACompliance.saveAsFromBuffer",{pdfac:this.id,linearized:a},this.userPriority).then(function(a){return new Uint8Array(a)})};
b.AttrObj.create=function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected at most 1 arguments. Function Signature: create(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'create' is of type '"+
a.name+"'. Expected type 'Obj'. Function Signature: create(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: create(Obj).");}return b.messageHandler.sendWithPromise("attrObjCreate",{dict:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.AttrObj(a)})};b.AttrObj.prototype.copy=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'copy'. Expected 0 arguments. Function Signature: copy()");
return b.messageHandler.sendWithPromise("AttrObj.copy",{a:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.AttrObj(a)})};b.AttrObj.prototype.getOwner=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getOwner'. Expected 0 arguments. Function Signature: getOwner()");return b.messageHandler.sendWithPromise("AttrObj.getOwner",{obj:this.id},this.userPriority)};b.AttrObj.prototype.getSDFObj=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getSDFObj'. Expected 0 arguments. Function Signature: getSDFObj()");return b.messageHandler.sendWithPromise("AttrObj.getSDFObj",{obj:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.ClassMap.create=function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected at most 1 arguments. Function Signature: create(Obj)");if(a instanceof
Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: create(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: create(Obj).");}return b.messageHandler.sendWithPromise("classMapCreate",
{dict:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.ClassMap(a)})};b.ClassMap.prototype.copy=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'copy'. Expected 0 arguments. Function Signature: copy()");return b.messageHandler.sendWithPromise("ClassMap.copy",{p:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.ClassMap(a)})};b.ClassMap.prototype.isValid=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'isValid'. Expected 0 arguments. Function Signature: isValid()");return b.messageHandler.sendWithPromise("ClassMap.isValid",{map:this.id},this.userPriority)};b.ClassMap.prototype.getSDFObj=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSDFObj'. Expected 0 arguments. Function Signature: getSDFObj()");return b.messageHandler.sendWithPromise("ClassMap.getSDFObj",{map:this.id},this.userPriority).then(function(a){return"0"==
a?null:new b.Obj(a)})};b.ContentItem.prototype.copy=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'copy'. Expected 0 arguments. Function Signature: copy()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'copy'. Perhaps a yield statement is required for "+this.yieldFunction+"?");return b.messageHandler.sendWithPromise("ContentItem.copy",
{c:this},this.userPriority).then(function(a){return"0"==a?null:new b.ContentItem(a)})};b.ContentItem.prototype.getType=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getType'. Expected 0 arguments. Function Signature: getType()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getType'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("ContentItem.getType",{item:this},this.userPriority)};b.ContentItem.prototype.getParent=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getParent'. Expected 0 arguments. Function Signature: getParent()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getParent'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");var a=this;this.yieldFunction="ContentItem.getParent";return b.messageHandler.sendWithPromise("ContentItem.getParent",{item:this},this.userPriority).then(function(c){a.yieldFunction=void 0;if("0"==c)return null;copyFunc(c.item,a);return new b.SElement(c.result.obj,c.result.k)})};b.ContentItem.prototype.getPage=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPage'. Expected 0 arguments. Function Signature: getPage()");
if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getPage'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction="ContentItem.getPage";return b.messageHandler.sendWithPromise("ContentItem.getPage",{item:this},this.userPriority).then(function(c){a.yieldFunction=void 0;if("0"==c)return null;copyFunc(c.item,a);return new b.Page(c.result)})};
b.ContentItem.prototype.getSDFObj=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSDFObj'. Expected 0 arguments. Function Signature: getSDFObj()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getSDFObj'. Perhaps a yield statement is required for "+this.yieldFunction+"?");return b.messageHandler.sendWithPromise("ContentItem.getSDFObj",
{item:this},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.ContentItem.prototype.getMCID=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getMCID'. Expected 0 arguments. Function Signature: getMCID()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getMCID'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("ContentItem.getMCID",{item:this},this.userPriority)};b.ContentItem.prototype.getContainingStm=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getContainingStm'. Expected 0 arguments. Function Signature: getContainingStm()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getContainingStm'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("ContentItem.getContainingStm",{item:this},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.ContentItem.prototype.getStmOwner=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getStmOwner'. Expected 0 arguments. Function Signature: getStmOwner()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getStmOwner'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("ContentItem.getStmOwner",{item:this},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.ContentItem.prototype.getRefObj=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getRefObj'. Expected 0 arguments. Function Signature: getRefObj()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getRefObj'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("ContentItem.getRefObj",{item:this},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.RoleMap.create=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 1 argument. Function Signature: create(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: create(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: create(Obj).");}return b.messageHandler.sendWithPromise("roleMapCreate",{dict:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.RoleMap(a)})};b.RoleMap.prototype.copy=
function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'copy'. Expected 0 arguments. Function Signature: copy()");return b.messageHandler.sendWithPromise("RoleMap.copy",{p:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.RoleMap(a)})};b.RoleMap.prototype.isValid=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isValid'. Expected 0 arguments. Function Signature: isValid()");
return b.messageHandler.sendWithPromise("RoleMap.isValid",{map:this.id},this.userPriority)};b.RoleMap.prototype.getDirectMap=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getDirectMap'. Expected 1 argument. Function Signature: getDirectMap(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getDirectMap' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'getDirectMap' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: getDirectMap(string).");return b.messageHandler.sendWithPromise("RoleMap.getDirectMap",{map:this.id,type:a},this.userPriority)};b.RoleMap.prototype.getSDFObj=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSDFObj'. Expected 0 arguments. Function Signature: getSDFObj()");return b.messageHandler.sendWithPromise("RoleMap.getSDFObj",{map:this.id},
this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.SElement.create=function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected at most 1 arguments. Function Signature: create(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==
typeof a)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: create(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: create(Obj).");}return b.messageHandler.sendWithPromise("sElementCreate",{dict:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.SElement(a)})};b.SElement.prototype.assign=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'assign'. Expected 1 argument. Function Signature: assign(SElement)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'assign' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.SElement)&&"SElement"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'assign' is of type '"+a.name+"'. Expected type 'SElement'. Function Signature: assign(SElement).");throw new TypeError("1st input argument '"+
a+"' in function 'assign' is of type '"+typeof a+"'. Expected type 'SElement'. Function Signature: assign(SElement).");}if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'assign'. Perhaps a yield statement is required for "+this.yieldFunction+"?");if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'assign'. Perhaps a yield statement is required for '"+
a.yieldFunction+"'?");var c=this;this.yieldFunction="SElement.assign";return b.messageHandler.sendWithPromise("SElement.assign",{left:this,right:a},this.userPriority).then(function(a){c.yieldFunction=void 0;copyFunc(a.left,c)})};b.SElement.createFromPDFDoc=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromPDFDoc'. Expected 2 arguments. Function Signature: createFromPDFDoc(PDFDoc, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromPDFDoc' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromPDFDoc' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: createFromPDFDoc(PDFDoc, string).");throw new TypeError("1st input argument '"+a+"' in function 'createFromPDFDoc' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: createFromPDFDoc(PDFDoc, string).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createFromPDFDoc' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createFromPDFDoc' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: createFromPDFDoc(PDFDoc, string).");return b.messageHandler.sendWithPromise("sElementCreateFromPDFDoc",{doc:a.id,struct_type:c},this.userPriority).then(function(a){return"0"==a?null:new b.SElement(a)})};b.SElement.prototype.insert=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'insert'. Expected 2 arguments. Function Signature: insert(SElement, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'insert' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.SElement)&&"SElement"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'insert' is of type '"+a.name+"'. Expected type 'SElement'. Function Signature: insert(SElement, number).");throw new TypeError("1st input argument '"+a+"' in function 'insert' is of type '"+typeof a+"'. Expected type 'SElement'. Function Signature: insert(SElement, number).");
}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'insert' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'insert' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: insert(SElement, number).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'insert'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'insert'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");var d=this;this.yieldFunction="SElement.insert";return b.messageHandler.sendWithPromise("SElement.insert",{e:this,kid:a,insert_before:c},this.userPriority).then(function(a){d.yieldFunction=void 0;
copyFunc(a.e,d)})};b.SElement.prototype.createContentItem=function(a,c,d){"undefined"===typeof d&&(d=-1);if(2>arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createContentItem'. Expected 2 to 3 arguments. Function Signature: createContentItem(PDFDoc, Page, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createContentItem' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createContentItem' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: createContentItem(PDFDoc, Page, number).");throw new TypeError("1st input argument '"+a+"' in function 'createContentItem' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: createContentItem(PDFDoc, Page, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createContentItem' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.Page)){if("object"==typeof c)throw new TypeError("2nd input argument in function 'createContentItem' is of type '"+c.name+"'. Expected type 'Page'. Function Signature: createContentItem(PDFDoc, Page, number).");throw new TypeError("2nd input argument '"+c+"' in function 'createContentItem' is of type '"+typeof c+"'. Expected type 'Page'. Function Signature: createContentItem(PDFDoc, Page, number).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createContentItem' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'createContentItem' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: createContentItem(PDFDoc, Page, number).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'createContentItem'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var e=this;
this.yieldFunction="SElement.createContentItem";return b.messageHandler.sendWithPromise("SElement.createContentItem",{e:this,doc:a.id,page:c.id,insert_before:d},this.userPriority).then(function(a){e.yieldFunction=void 0;copyFunc(a.e,e);return a.result})};b.SElement.prototype.isValid=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isValid'. Expected 0 arguments. Function Signature: isValid()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+
this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'isValid'. Perhaps a yield statement is required for "+this.yieldFunction+"?");return b.messageHandler.sendWithPromise("SElement.isValid",{e:this},this.userPriority)};b.SElement.prototype.getType=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getType'. Expected 0 arguments. Function Signature: getType()");if("undefined"!==
typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getType'. Perhaps a yield statement is required for "+this.yieldFunction+"?");return b.messageHandler.sendWithPromise("SElement.getType",{e:this},this.userPriority)};b.SElement.prototype.getNumKids=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getNumKids'. Expected 0 arguments. Function Signature: getNumKids()");
if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getNumKids'. Perhaps a yield statement is required for "+this.yieldFunction+"?");return b.messageHandler.sendWithPromise("SElement.getNumKids",{e:this},this.userPriority)};b.SElement.prototype.isContentItem=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isContentItem'. Expected 1 argument. Function Signature: isContentItem(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'isContentItem' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'isContentItem' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: isContentItem(number).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'isContentItem'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("SElement.isContentItem",{e:this,index:a},this.userPriority)};b.SElement.prototype.getAsContentItem=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getAsContentItem'. Expected 1 argument. Function Signature: getAsContentItem(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getAsContentItem' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getAsContentItem' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getAsContentItem(number).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getAsContentItem'. Perhaps a yield statement is required for "+this.yieldFunction+"?");return b.messageHandler.sendWithPromise("SElement.getAsContentItem",
{e:this,index:a},this.userPriority).then(function(a){return"0"==a?null:new b.ContentItem(a)})};b.SElement.prototype.getAsStructElem=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getAsStructElem'. Expected 1 argument. Function Signature: getAsStructElem(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getAsStructElem' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getAsStructElem' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getAsStructElem(number).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getAsStructElem'. Perhaps a yield statement is required for "+this.yieldFunction+"?");return b.messageHandler.sendWithPromise("SElement.getAsStructElem",
{e:this,index:a},this.userPriority).then(function(a){return"0"==a?null:new b.SElement(a)})};b.SElement.prototype.getParent=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getParent'. Expected 0 arguments. Function Signature: getParent()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getParent'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("SElement.getParent",{e:this},this.userPriority).then(function(a){return"0"==a?null:new b.SElement(a)})};b.SElement.prototype.getStructTreeRoot=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getStructTreeRoot'. Expected 0 arguments. Function Signature: getStructTreeRoot()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getStructTreeRoot'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("SElement.getStructTreeRoot",{e:this},this.userPriority).then(function(a){return"0"==a?null:new b.STree(a)})};b.SElement.prototype.hasTitle=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'hasTitle'. Expected 0 arguments. Function Signature: hasTitle()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'hasTitle'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("SElement.hasTitle",{e:this},this.userPriority)};b.SElement.prototype.getTitle=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTitle'. Expected 0 arguments. Function Signature: getTitle()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getTitle'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("SElement.getTitle",{e:this},this.userPriority)};b.SElement.prototype.getID=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getID'. Expected 0 arguments. Function Signature: getID()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getID'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("SElement.getID",{e:this},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.SElement.prototype.hasActualText=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'hasActualText'. Expected 0 arguments. Function Signature: hasActualText()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'hasActualText'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("SElement.hasActualText",{e:this},this.userPriority)};b.SElement.prototype.getActualText=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getActualText'. Expected 0 arguments. Function Signature: getActualText()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getActualText'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("SElement.getActualText",{e:this},this.userPriority)};b.SElement.prototype.hasAlt=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'hasAlt'. Expected 0 arguments. Function Signature: hasAlt()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'hasAlt'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("SElement.hasAlt",{e:this},this.userPriority)};b.SElement.prototype.getAlt=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getAlt'. Expected 0 arguments. Function Signature: getAlt()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getAlt'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("SElement.getAlt",{e:this},this.userPriority)};b.SElement.prototype.getSDFObj=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSDFObj'. Expected 0 arguments. Function Signature: getSDFObj()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getSDFObj'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("SElement.getSDFObj",{e:this},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.STree.create=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 1 argument. Function Signature: create(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: create(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: create(Obj).");}return b.messageHandler.sendWithPromise("sTreeCreate",{struct_dict:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.STree(a)})};b.STree.createFromPDFDoc=
function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromPDFDoc'. Expected 1 argument. Function Signature: createFromPDFDoc(PDFDoc)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromPDFDoc' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromPDFDoc' is of type '"+
a.name+"'. Expected type 'PDFDoc'. Function Signature: createFromPDFDoc(PDFDoc).");throw new TypeError("1st input argument '"+a+"' in function 'createFromPDFDoc' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: createFromPDFDoc(PDFDoc).");}return b.messageHandler.sendWithPromise("sTreeCreateFromPDFDoc",{doc:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.STree(a)})};b.STree.prototype.insert=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'insert'. Expected 2 arguments. Function Signature: insert(SElement, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'insert' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.SElement)&&"SElement"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'insert' is of type '"+a.name+"'. Expected type 'SElement'. Function Signature: insert(SElement, number).");
throw new TypeError("1st input argument '"+a+"' in function 'insert' is of type '"+typeof a+"'. Expected type 'SElement'. Function Signature: insert(SElement, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'insert' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'insert' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: insert(SElement, number).");
if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'insert'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");var d=this;this.yieldFunction="STree.insert";return b.messageHandler.sendWithPromise("STree.insert",{tree:this.id,kid:a,insert_before:c},this.userPriority).then(function(a){d.yieldFunction=void 0;copyFunc(a.kid,d)})};b.STree.prototype.copy=
function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'copy'. Expected 0 arguments. Function Signature: copy()");return b.messageHandler.sendWithPromise("STree.copy",{c:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.STree(a)})};b.STree.prototype.isValid=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isValid'. Expected 0 arguments. Function Signature: isValid()");return b.messageHandler.sendWithPromise("STree.isValid",
{tree:this.id},this.userPriority)};b.STree.prototype.getNumKids=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getNumKids'. Expected 0 arguments. Function Signature: getNumKids()");return b.messageHandler.sendWithPromise("STree.getNumKids",{tree:this.id},this.userPriority)};b.STree.prototype.getKid=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getKid'. Expected 1 argument. Function Signature: getKid(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'getKid' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getKid' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getKid(number).");return b.messageHandler.sendWithPromise("STree.getKid",{tree:this.id,index:a},this.userPriority).then(function(a){return"0"==a?null:new b.SElement(a)})};
b.STree.prototype.getRoleMap=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getRoleMap'. Expected 0 arguments. Function Signature: getRoleMap()");return b.messageHandler.sendWithPromise("STree.getRoleMap",{tree:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.RoleMap(a)})};b.STree.prototype.getClassMap=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getClassMap'. Expected 0 arguments. Function Signature: getClassMap()");
return b.messageHandler.sendWithPromise("STree.getClassMap",{tree:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.ClassMap(a)})};b.STree.prototype.getSDFObj=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSDFObj'. Expected 0 arguments. Function Signature: getSDFObj()");return b.messageHandler.sendWithPromise("STree.getSDFObj",{tree:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Action.createGoto=
function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createGoto'. Expected 1 argument. Function Signature: createGoto(Destination)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createGoto' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Destination)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createGoto' is of type '"+a.name+
"'. Expected type 'Destination'. Function Signature: createGoto(Destination).");throw new TypeError("1st input argument '"+a+"' in function 'createGoto' is of type '"+typeof a+"'. Expected type 'Destination'. Function Signature: createGoto(Destination).");}return b.messageHandler.sendWithPromise("actionCreateGoto",{dest:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.Action(a)})};b.Action.createGotoWithKey=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'createGotoWithKey'. Expected 2 arguments. Function Signature: createGotoWithKey(string, Destination)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createGotoWithKey' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createGotoWithKey' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: createGotoWithKey(string, Destination).");
if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createGotoWithKey' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Destination)){if("object"==typeof c)throw new TypeError("2nd input argument in function 'createGotoWithKey' is of type '"+c.name+"'. Expected type 'Destination'. Function Signature: createGotoWithKey(string, Destination).");throw new TypeError("2nd input argument '"+c+"' in function 'createGotoWithKey' is of type '"+
typeof c+"'. Expected type 'Destination'. Function Signature: createGotoWithKey(string, Destination).");}return b.messageHandler.sendWithPromise("actionCreateGotoWithKey",{key:a,dest:c.id},this.userPriority).then(function(a){return"0"==a?null:new b.Action(a)})};b.Action.createGotoRemote=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createGotoRemote'. Expected 2 arguments. Function Signature: createGotoRemote(FileSpec, number)");if(a instanceof
Promise)throw new TypeError("1st input argument in function 'createGotoRemote' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.FileSpec)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createGotoRemote' is of type '"+a.name+"'. Expected type 'FileSpec'. Function Signature: createGotoRemote(FileSpec, number).");throw new TypeError("1st input argument '"+a+"' in function 'createGotoRemote' is of type '"+typeof a+"'. Expected type 'FileSpec'. Function Signature: createGotoRemote(FileSpec, number).");
}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createGotoRemote' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createGotoRemote' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: createGotoRemote(FileSpec, number).");return b.messageHandler.sendWithPromise("actionCreateGotoRemote",{file:a.id,page_num:c},this.userPriority).then(function(a){return"0"==
a?null:new b.Action(a)})};b.Action.createGotoRemoteSetNewWindow=function(a,c,d){if(3!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createGotoRemoteSetNewWindow'. Expected 3 arguments. Function Signature: createGotoRemoteSetNewWindow(FileSpec, number, boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createGotoRemoteSetNewWindow' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof
b.FileSpec)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createGotoRemoteSetNewWindow' is of type '"+a.name+"'. Expected type 'FileSpec'. Function Signature: createGotoRemoteSetNewWindow(FileSpec, number, boolean).");throw new TypeError("1st input argument '"+a+"' in function 'createGotoRemoteSetNewWindow' is of type '"+typeof a+"'. Expected type 'FileSpec'. Function Signature: createGotoRemoteSetNewWindow(FileSpec, number, boolean).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createGotoRemoteSetNewWindow' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createGotoRemoteSetNewWindow' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: createGotoRemoteSetNewWindow(FileSpec, number, boolean).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createGotoRemoteSetNewWindow' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof d)throw new TypeError("3rd input argument '"+d+
"' in function 'createGotoRemoteSetNewWindow' is of type '"+typeof d+"'. Expected type 'boolean'. Function Signature: createGotoRemoteSetNewWindow(FileSpec, number, boolean).");return b.messageHandler.sendWithPromise("actionCreateGotoRemoteSetNewWindow",{file:a.id,page_num:c,new_window:d},this.userPriority).then(function(a){return"0"==a?null:new b.Action(a)})};b.Action.createURI=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createURI'. Expected 2 arguments. Function Signature: createURI(SDFDoc, string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createURI' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createURI' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: createURI(SDFDoc, string).");throw new TypeError("1st input argument '"+a+"' in function 'createURI' is of type '"+
typeof a+"'. Expected type 'SDFDoc'. Function Signature: createURI(SDFDoc, string).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createURI' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createURI' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: createURI(SDFDoc, string).");return b.messageHandler.sendWithPromise("actionCreateURI",
{sdfdoc:a.id,uri:c},this.userPriority).then(function(a){return"0"==a?null:new b.Action(a)})};b.Action.createURIWithUString=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createURIWithUString'. Expected 2 arguments. Function Signature: createURIWithUString(SDFDoc, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createURIWithUString' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createURIWithUString' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: createURIWithUString(SDFDoc, string).");throw new TypeError("1st input argument '"+a+"' in function 'createURIWithUString' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: createURIWithUString(SDFDoc, string).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createURIWithUString' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createURIWithUString' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: createURIWithUString(SDFDoc, string).");return b.messageHandler.sendWithPromise("actionCreateURIWithUString",{sdfdoc:a.id,current:c},this.userPriority).then(function(a){return"0"==a?null:new b.Action(a)})};b.Action.createSubmitForm=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createSubmitForm'. Expected 1 argument. Function Signature: createSubmitForm(FileSpec)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createSubmitForm' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.FileSpec)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createSubmitForm' is of type '"+a.name+"'. Expected type 'FileSpec'. Function Signature: createSubmitForm(FileSpec).");throw new TypeError("1st input argument '"+a+"' in function 'createSubmitForm' is of type '"+typeof a+
"'. Expected type 'FileSpec'. Function Signature: createSubmitForm(FileSpec).");}return b.messageHandler.sendWithPromise("actionCreateSubmitForm",{url:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.Action(a)})};b.Action.createLaunch=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createLaunch'. Expected 2 arguments. Function Signature: createLaunch(SDFDoc, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createLaunch' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createLaunch' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: createLaunch(SDFDoc, string).");throw new TypeError("1st input argument '"+a+"' in function 'createLaunch' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: createLaunch(SDFDoc, string).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createLaunch' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createLaunch' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: createLaunch(SDFDoc, string).");return b.messageHandler.sendWithPromise("actionCreateLaunch",{sdfdoc:a.id,path:c},this.userPriority).then(function(a){return"0"==a?null:new b.Action(a)})};b.Action.createHideField=function(a,c,d){if(3!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createHideField'. Expected 3 arguments. Function Signature: createHideField(SDFDoc, number, string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createHideField' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createHideField' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: createHideField(SDFDoc, number, string).");throw new TypeError("1st input argument '"+a+
"' in function 'createHideField' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: createHideField(SDFDoc, number, string).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createHideField' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createHideField' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: createHideField(SDFDoc, number, string).");
if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createHideField' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'createHideField' is of type '"+typeof d+"'. Expected type 'string'. Function Signature: createHideField(SDFDoc, number, string).");return b.messageHandler.sendWithPromise("actionCreateHideField",{sdfdoc:a.id,list_length:c,field_list:d},this.userPriority).then(function(a){return"0"==
a?null:new b.Action(a)})};b.Action.createImportData=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createImportData'. Expected 2 arguments. Function Signature: createImportData(SDFDoc, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createImportData' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==
typeof a)throw new TypeError("1st input argument in function 'createImportData' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: createImportData(SDFDoc, string).");throw new TypeError("1st input argument '"+a+"' in function 'createImportData' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: createImportData(SDFDoc, string).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createImportData' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createImportData' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: createImportData(SDFDoc, string).");return b.messageHandler.sendWithPromise("actionCreateImportData",{sdfdoc:a.id,path:c},this.userPriority).then(function(a){return"0"==a?null:new b.Action(a)})};b.Action.createResetForm=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createResetForm'. Expected 1 argument. Function Signature: createResetForm(SDFDoc)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createResetForm' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createResetForm' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: createResetForm(SDFDoc).");throw new TypeError("1st input argument '"+a+"' in function 'createResetForm' is of type '"+
typeof a+"'. Expected type 'SDFDoc'. Function Signature: createResetForm(SDFDoc).");}return b.messageHandler.sendWithPromise("actionCreateResetForm",{sdfdoc:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.Action(a)})};b.Action.createJavaScript=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createJavaScript'. Expected 2 arguments. Function Signature: createJavaScript(SDFDoc, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createJavaScript' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createJavaScript' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: createJavaScript(SDFDoc, string).");throw new TypeError("1st input argument '"+a+"' in function 'createJavaScript' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: createJavaScript(SDFDoc, string).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createJavaScript' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createJavaScript' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: createJavaScript(SDFDoc, string).");return b.messageHandler.sendWithPromise("actionCreateJavaScript",{sdfdoc:a.id,script:c},this.userPriority).then(function(a){return"0"==a?null:new b.Action(a)})};b.Action.create=function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected at most 1 arguments. Function Signature: create(Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: create(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: create(Obj).");
}return b.messageHandler.sendWithPromise("actionCreate",{in_obj:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.Action(a)})};b.Action.prototype.copy=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'copy'. Expected 0 arguments. Function Signature: copy()");return b.messageHandler.sendWithPromise("Action.copy",{in_action:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Action(a)})};b.Action.prototype.compare=
function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'compare'. Expected 1 argument. Function Signature: compare(Action)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'compare' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Action)){if("object"==typeof a)throw new TypeError("1st input argument in function 'compare' is of type '"+a.name+"'. Expected type 'Action'. Function Signature: compare(Action).");
throw new TypeError("1st input argument '"+a+"' in function 'compare' is of type '"+typeof a+"'. Expected type 'Action'. Function Signature: compare(Action).");}return b.messageHandler.sendWithPromise("Action.compare",{action:this.id,in_action:a.id},this.userPriority)};b.Action.prototype.isValid=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isValid'. Expected 0 arguments. Function Signature: isValid()");return b.messageHandler.sendWithPromise("Action.isValid",
{action:this.id},this.userPriority)};b.Action.prototype.getType=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getType'. Expected 0 arguments. Function Signature: getType()");return b.messageHandler.sendWithPromise("Action.getType",{action:this.id},this.userPriority)};b.Action.prototype.getDest=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getDest'. Expected 0 arguments. Function Signature: getDest()");
return b.messageHandler.sendWithPromise("Action.getDest",{action:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Destination(a)})};b.Action.prototype.getNext=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getNext'. Expected 0 arguments. Function Signature: getNext()");return b.messageHandler.sendWithPromise("Action.getNext",{action:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Action.prototype.getSDFObj=
function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSDFObj'. Expected 0 arguments. Function Signature: getSDFObj()");return b.messageHandler.sendWithPromise("Action.getSDFObj",{action:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Action.prototype.getFormActionFlag=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFormActionFlag'. Expected 1 argument. Function Signature: getFormActionFlag(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'getFormActionFlag' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getFormActionFlag' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getFormActionFlag(number).");return b.messageHandler.sendWithPromise("Action.getFormActionFlag",{action:this.id,flag:a},this.userPriority)};b.Action.prototype.setFormActionFlag=
function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setFormActionFlag'. Expected 2 arguments. Function Signature: setFormActionFlag(number, boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setFormActionFlag' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setFormActionFlag' is of type '"+
typeof a+"'. Expected type 'number'. Function Signature: setFormActionFlag(number, boolean).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setFormActionFlag' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setFormActionFlag' is of type '"+typeof c+"'. Expected type 'boolean'. Function Signature: setFormActionFlag(number, boolean).");return b.messageHandler.sendWithPromise("Action.setFormActionFlag",
{action:this.id,flag:a,value:c},this.userPriority)};b.Action.prototype.needsWriteLock=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'needsWriteLock'. Expected 0 arguments. Function Signature: needsWriteLock()");return b.messageHandler.sendWithPromise("Action.needsWriteLock",{action:this.id},this.userPriority)};b.Action.prototype.execute=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'execute'. Expected 0 arguments. Function Signature: execute()");
return b.messageHandler.sendWithPromise("Action.execute",{action:this.id},this.userPriority)};b.Action.prototype.executeKeyStrokeAction=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'executeKeyStrokeAction'. Expected 1 argument. Function Signature: executeKeyStrokeAction(KeyStrokeEventData)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'executeKeyStrokeAction' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.KeyStrokeEventData)){if("object"==typeof a)throw new TypeError("1st input argument in function 'executeKeyStrokeAction' is of type '"+a.name+"'. Expected type 'KeyStrokeEventData'. Function Signature: executeKeyStrokeAction(KeyStrokeEventData).");throw new TypeError("1st input argument '"+a+"' in function 'executeKeyStrokeAction' is of type '"+typeof a+"'. Expected type 'KeyStrokeEventData'. Function Signature: executeKeyStrokeAction(KeyStrokeEventData).");}return b.messageHandler.sendWithPromise("Action.executeKeyStrokeAction",
{action:this.id,data:a.id},this.userPriority).then(function(a){if("0"==a)return null;a=new b.KeyStrokeActionResult(a);createdObjects.push({name:a.name,id:a.id});return a})};b.KeyStrokeActionResult.prototype.isValid=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isValid'. Expected 0 arguments. Function Signature: isValid()");return b.messageHandler.sendWithPromise("KeyStrokeActionResult.isValid",{action_ret:this.id},this.userPriority)};b.KeyStrokeActionResult.prototype.getText=
function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getText'. Expected 0 arguments. Function Signature: getText()");return b.messageHandler.sendWithPromise("KeyStrokeActionResult.getText",{action_ret:this.id},this.userPriority)};b.KeyStrokeActionResult.prototype.destroy=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=
-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("KeyStrokeActionResult.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.KeyStrokeActionResult.prototype.copy=
function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'copy'. Expected 0 arguments. Function Signature: copy()");return b.messageHandler.sendWithPromise("KeyStrokeActionResult.copy",{action_ret:this.id},this.userPriority).then(function(a){if("0"==a)return null;a=new b.KeyStrokeActionResult(a);createdObjects.push({name:a.name,id:a.id});return a})};b.KeyStrokeActionResult.prototype.assign=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'assign'. Expected 1 argument. Function Signature: assign(KeyStrokeActionResult)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'assign' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.KeyStrokeActionResult)){if("object"==typeof a)throw new TypeError("1st input argument in function 'assign' is of type '"+a.name+"'. Expected type 'KeyStrokeActionResult'. Function Signature: assign(KeyStrokeActionResult).");
throw new TypeError("1st input argument '"+a+"' in function 'assign' is of type '"+typeof a+"'. Expected type 'KeyStrokeActionResult'. Function Signature: assign(KeyStrokeActionResult).");}return b.messageHandler.sendWithPromise("KeyStrokeActionResult.assign",{left:this.id,right:a.id},this.userPriority)};b.KeyStrokeEventData.create=function(a,c,d,e,f){if(5!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 5 arguments. Function Signature: create(string, string, string, number, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: create(string, string, string, number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: create(string, string, string, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'create' is of type '"+typeof d+"'. Expected type 'string'. Function Signature: create(string, string, string, number, number).");
if(e instanceof Promise)throw new TypeError("4th input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof e)throw new TypeError("4th input argument '"+e+"' in function 'create' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: create(string, string, string, number, number).");if(f instanceof Promise)throw new TypeError("5th input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof f)throw new TypeError("5th input argument '"+f+"' in function 'create' is of type '"+typeof f+"'. Expected type 'number'. Function Signature: create(string, string, string, number, number).");return b.messageHandler.sendWithPromise("keyStrokeEventDataCreate",{field_name:a,current:c,change:d,selection_start:e,selection_end:f},this.userPriority).then(function(a){if("0"==a)return null;a=new b.KeyStrokeEventData(a);createdObjects.push({name:a.name,id:a.id});return a})};b.KeyStrokeEventData.prototype.destroy=
function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");
return b.messageHandler.sendWithPromise("KeyStrokeEventData.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.KeyStrokeEventData.prototype.copy=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'copy'. Expected 0 arguments. Function Signature: copy()");return b.messageHandler.sendWithPromise("KeyStrokeEventData.copy",{data:this.id},this.userPriority).then(function(a){if("0"==a)return null;a=new b.KeyStrokeEventData(a);createdObjects.push({name:a.name,
id:a.id});return a})};b.KeyStrokeEventData.prototype.assign=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'assign'. Expected 1 argument. Function Signature: assign(KeyStrokeEventData)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'assign' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.KeyStrokeEventData)){if("object"==typeof a)throw new TypeError("1st input argument in function 'assign' is of type '"+
a.name+"'. Expected type 'KeyStrokeEventData'. Function Signature: assign(KeyStrokeEventData).");throw new TypeError("1st input argument '"+a+"' in function 'assign' is of type '"+typeof a+"'. Expected type 'KeyStrokeEventData'. Function Signature: assign(KeyStrokeEventData).");}return b.messageHandler.sendWithPromise("KeyStrokeEventData.assign",{left:this.id,right:a.id},this.userPriority)};b.Page.create=function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'create'. Expected at most 1 arguments. Function Signature: create(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: create(Obj).");throw new TypeError("1st input argument '"+
a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: create(Obj).");}return b.messageHandler.sendWithPromise("pageCreate",{page_dict:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.Page(a)})};b.Page.prototype.copy=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'copy'. Expected 0 arguments. Function Signature: copy()");return b.messageHandler.sendWithPromise("Page.copy",{p:this.id},
this.userPriority).then(function(a){return"0"==a?null:new b.Page(a)})};b.Page.prototype.isValid=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isValid'. Expected 0 arguments. Function Signature: isValid()");return b.messageHandler.sendWithPromise("Page.isValid",{page:this.id},this.userPriority)};b.Page.prototype.getIndex=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getIndex'. Expected 0 arguments. Function Signature: getIndex()");
return b.messageHandler.sendWithPromise("Page.getIndex",{page:this.id},this.userPriority)};b.Page.prototype.getTriggerAction=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTriggerAction'. Expected 1 argument. Function Signature: getTriggerAction(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getTriggerAction' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=
typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getTriggerAction' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getTriggerAction(number).");return b.messageHandler.sendWithPromise("Page.getTriggerAction",{page:this.id,trigger:a},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Page.prototype.getBox=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getBox'. Expected 1 argument. Function Signature: getBox(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'getBox' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getBox' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getBox(number).");return b.messageHandler.sendWithPromise("Page.getBox",{page:this.id,type:a},this.userPriority).then(function(a){return"0"==a?null:new b.Rect(a)})};b.Page.prototype.setBox=
function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setBox'. Expected 2 arguments. Function Signature: setBox(number, Rect)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setBox' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setBox' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setBox(number, Rect).");
if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setBox' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Rect)&&"Rect"!=c.name){if("object"==typeof c)throw new TypeError("2nd input argument in function 'setBox' is of type '"+c.name+"'. Expected type 'Rect'. Function Signature: setBox(number, Rect).");throw new TypeError("2nd input argument '"+c+"' in function 'setBox' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: setBox(number, Rect).");
}if("undefined"!=typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'setBox'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("Page.setBox",{page:this.id,type:a,box:c},this.userPriority)};b.Page.prototype.getCropBox=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getCropBox'. Expected 0 arguments. Function Signature: getCropBox()");
return b.messageHandler.sendWithPromise("Page.getCropBox",{page:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Rect(a)})};b.Page.prototype.setCropBox=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setCropBox'. Expected 1 argument. Function Signature: setCropBox(Rect)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setCropBox' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Rect)&&"Rect"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'setCropBox' is of type '"+a.name+"'. Expected type 'Rect'. Function Signature: setCropBox(Rect).");throw new TypeError("1st input argument '"+a+"' in function 'setCropBox' is of type '"+typeof a+"'. Expected type 'Rect'. Function Signature: setCropBox(Rect).");}if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setCropBox'. Perhaps a yield statement is required for '"+
a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("Page.setCropBox",{page:this.id,box:a},this.userPriority)};b.Page.prototype.getMediaBox=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getMediaBox'. Expected 0 arguments. Function Signature: getMediaBox()");return b.messageHandler.sendWithPromise("Page.getMediaBox",{page:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Rect(a)})};b.Page.prototype.setMediaBox=
function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setMediaBox'. Expected 1 argument. Function Signature: setMediaBox(Rect)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setMediaBox' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Rect)&&"Rect"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'setMediaBox' is of type '"+a.name+
"'. Expected type 'Rect'. Function Signature: setMediaBox(Rect).");throw new TypeError("1st input argument '"+a+"' in function 'setMediaBox' is of type '"+typeof a+"'. Expected type 'Rect'. Function Signature: setMediaBox(Rect).");}if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setMediaBox'. Perhaps a yield statement is required for '"+a.yieldFunction+
"'?");return b.messageHandler.sendWithPromise("Page.setMediaBox",{page:this.id,box:a},this.userPriority)};b.Page.prototype.getVisibleContentBox=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getVisibleContentBox'. Expected 0 arguments. Function Signature: getVisibleContentBox()");return b.messageHandler.sendWithPromise("Page.getVisibleContentBox",{page:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Rect(a)})};b.Page.prototype.getRotation=
function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getRotation'. Expected 0 arguments. Function Signature: getRotation()");return b.messageHandler.sendWithPromise("Page.getRotation",{page:this.id},this.userPriority)};b.Page.prototype.setRotation=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setRotation'. Expected 1 argument. Function Signature: setRotation(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setRotation' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setRotation' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setRotation(number).");return b.messageHandler.sendWithPromise("Page.setRotation",{page:this.id,angle:a},this.userPriority)};b.Page.addRotations=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'addRotations'. Expected 2 arguments. Function Signature: addRotations(number, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'addRotations' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'addRotations' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: addRotations(number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'addRotations' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'addRotations' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: addRotations(number, number).");return b.messageHandler.sendWithPromise("pageAddRotations",{r0:a,r1:c},this.userPriority)};b.Page.subtractRotations=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'subtractRotations'. Expected 2 arguments. Function Signature: subtractRotations(number, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'subtractRotations' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'subtractRotations' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: subtractRotations(number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'subtractRotations' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'subtractRotations' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: subtractRotations(number, number).");return b.messageHandler.sendWithPromise("pageSubtractRotations",{r0:a,r1:c},this.userPriority)};b.Page.rotationToDegree=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'rotationToDegree'. Expected 1 argument. Function Signature: rotationToDegree(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'rotationToDegree' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'rotationToDegree' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: rotationToDegree(number).");return b.messageHandler.sendWithPromise("pageRotationToDegree",{r:a},this.userPriority)};b.Page.degreeToRotation=function(a){if(1!=
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'degreeToRotation'. Expected 1 argument. Function Signature: degreeToRotation(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'degreeToRotation' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'degreeToRotation' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: degreeToRotation(number).");
return b.messageHandler.sendWithPromise("pageDegreeToRotation",{r:a},this.userPriority)};b.Page.prototype.getPageWidth=function(a){"undefined"===typeof a&&(a=b.Page.Box.e_crop);if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPageWidth'. Expected at most 1 arguments. Function Signature: getPageWidth(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getPageWidth' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getPageWidth' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getPageWidth(number).");return b.messageHandler.sendWithPromise("Page.getPageWidth",{page:this.id,box_type:a},this.userPriority)};b.Page.prototype.getPageHeight=function(a){"undefined"===typeof a&&(a=b.Page.Box.e_crop);if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPageHeight'. Expected at most 1 arguments. Function Signature: getPageHeight(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'getPageHeight' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getPageHeight' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getPageHeight(number).");return b.messageHandler.sendWithPromise("Page.getPageHeight",{page:this.id,box_type:a},this.userPriority)};b.Page.prototype.getDefaultMatrix=
function(a,c,d){"undefined"===typeof a&&(a=!1);"undefined"===typeof c&&(c=b.Page.Box.e_crop);"undefined"===typeof d&&(d=b.Page.Rotate.e_0);if(3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getDefaultMatrix'. Expected at most 3 arguments. Function Signature: getDefaultMatrix(boolean, number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getDefaultMatrix' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getDefaultMatrix' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: getDefaultMatrix(boolean, number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'getDefaultMatrix' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'getDefaultMatrix' is of type '"+
typeof c+"'. Expected type 'number'. Function Signature: getDefaultMatrix(boolean, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'getDefaultMatrix' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'getDefaultMatrix' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: getDefaultMatrix(boolean, number, number).");return b.messageHandler.sendWithPromise("Page.getDefaultMatrix",
{page:this.id,flip_y:a,box_type:c,angle:d},this.userPriority).then(function(a){return"0"==a?null:new b.Matrix2D(a)})};b.Page.prototype.getAnnots=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getAnnots'. Expected 0 arguments. Function Signature: getAnnots()");return b.messageHandler.sendWithPromise("Page.getAnnots",{page:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Page.prototype.getNumAnnots=function(){if(0!=
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getNumAnnots'. Expected 0 arguments. Function Signature: getNumAnnots()");return b.messageHandler.sendWithPromise("Page.getNumAnnots",{page:this.id},this.userPriority)};b.Page.prototype.getAnnot=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getAnnot'. Expected 1 argument. Function Signature: getAnnot(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getAnnot' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getAnnot(number).");return b.messageHandler.sendWithPromise("Page.getAnnot",{page:this.id,index:a},this.userPriority).then(function(a){return"0"==a?null:new b.Annot(a)})};b.Page.prototype.annotInsert=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'annotInsert'. Expected 2 arguments. Function Signature: annotInsert(number, Annot)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'annotInsert' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'annotInsert' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: annotInsert(number, Annot).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'annotInsert' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.Annot)){if("object"==typeof c)throw new TypeError("2nd input argument in function 'annotInsert' is of type '"+c.name+"'. Expected type 'Annot'. Function Signature: annotInsert(number, Annot).");throw new TypeError("2nd input argument '"+c+"' in function 'annotInsert' is of type '"+typeof c+"'. Expected type 'Annot'. Function Signature: annotInsert(number, Annot).");}return b.messageHandler.sendWithPromise("Page.annotInsert",{page:this.id,pos:a,annot:c.id},this.userPriority)};b.Page.prototype.annotPushBack=
function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'annotPushBack'. Expected 1 argument. Function Signature: annotPushBack(Annot)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'annotPushBack' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Annot)){if("object"==typeof a)throw new TypeError("1st input argument in function 'annotPushBack' is of type '"+a.name+
"'. Expected type 'Annot'. Function Signature: annotPushBack(Annot).");throw new TypeError("1st input argument '"+a+"' in function 'annotPushBack' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: annotPushBack(Annot).");}return b.messageHandler.sendWithPromise("Page.annotPushBack",{page:this.id,annot:a.id},this.userPriority)};b.Page.prototype.annotPushFront=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'annotPushFront'. Expected 1 argument. Function Signature: annotPushFront(Annot)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'annotPushFront' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Annot)){if("object"==typeof a)throw new TypeError("1st input argument in function 'annotPushFront' is of type '"+a.name+"'. Expected type 'Annot'. Function Signature: annotPushFront(Annot).");throw new TypeError("1st input argument '"+a+"' in function 'annotPushFront' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: annotPushFront(Annot).");
}return b.messageHandler.sendWithPromise("Page.annotPushFront",{page:this.id,annot:a.id},this.userPriority)};b.Page.prototype.annotRemove=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'annotRemove'. Expected 1 argument. Function Signature: annotRemove(Annot)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'annotRemove' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof
b.Annot)){if("object"==typeof a)throw new TypeError("1st input argument in function 'annotRemove' is of type '"+a.name+"'. Expected type 'Annot'. Function Signature: annotRemove(Annot).");throw new TypeError("1st input argument '"+a+"' in function 'annotRemove' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: annotRemove(Annot).");}return b.messageHandler.sendWithPromise("Page.annotRemove",{page:this.id,annot:a.id},this.userPriority)};b.Page.prototype.annotRemoveByIndex=function(a){if(1!=
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'annotRemoveByIndex'. Expected 1 argument. Function Signature: annotRemoveByIndex(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'annotRemoveByIndex' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'annotRemoveByIndex' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: annotRemoveByIndex(number).");
return b.messageHandler.sendWithPromise("Page.annotRemoveByIndex",{page:this.id,index:a},this.userPriority)};b.Page.prototype.scale=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'scale'. Expected 1 argument. Function Signature: scale(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'scale' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'scale' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: scale(number).");return b.messageHandler.sendWithPromise("Page.scale",{page:this.id,scale:a},this.userPriority)};b.Page.prototype.flattenField=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'flattenField'. Expected 1 argument. Function Signature: flattenField(Field)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'flattenField' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Field)&&"Field"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'flattenField' is of type '"+a.name+"'. Expected type 'Field'. Function Signature: flattenField(Field).");throw new TypeError("1st input argument '"+a+"' in function 'flattenField' is of type '"+typeof a+"'. Expected type 'Field'. Function Signature: flattenField(Field).");}if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'flattenField'. Perhaps a yield statement is required for '"+
a.yieldFunction+"'?");var c=this;this.yieldFunction="Page.flattenField";return b.messageHandler.sendWithPromise("Page.flattenField",{page:this.id,field_to_flatten:a},this.userPriority).then(function(a){c.yieldFunction=void 0;copyFunc(a.field_to_flatten,c)})};b.Page.prototype.hasTransition=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'hasTransition'. Expected 0 arguments. Function Signature: hasTransition()");return b.messageHandler.sendWithPromise("Page.hasTransition",
{page:this.id},this.userPriority)};b.Page.prototype.getUserUnitSize=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getUserUnitSize'. Expected 0 arguments. Function Signature: getUserUnitSize()");return b.messageHandler.sendWithPromise("Page.getUserUnitSize",{page:this.id},this.userPriority)};b.Page.prototype.setUserUnitSize=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setUserUnitSize'. Expected 1 argument. Function Signature: setUserUnitSize(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setUserUnitSize' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setUserUnitSize' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setUserUnitSize(number).");return b.messageHandler.sendWithPromise("Page.setUserUnitSize",{page:this.id,unit_size:a},this.userPriority)};b.Page.prototype.getResourceDict=
function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getResourceDict'. Expected 0 arguments. Function Signature: getResourceDict()");return b.messageHandler.sendWithPromise("Page.getResourceDict",{page:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Page.prototype.getContents=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getContents'. Expected 0 arguments. Function Signature: getContents()");
return b.messageHandler.sendWithPromise("Page.getContents",{page:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Page.prototype.getThumb=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getThumb'. Expected 0 arguments. Function Signature: getThumb()");return b.messageHandler.sendWithPromise("Page.getThumb",{page:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Page.prototype.getSDFObj=
function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSDFObj'. Expected 0 arguments. Function Signature: getSDFObj()");return b.messageHandler.sendWithPromise("Page.getSDFObj",{page:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Page.prototype.findInheritedAttribute=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'findInheritedAttribute'. Expected 1 argument. Function Signature: findInheritedAttribute(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'findInheritedAttribute' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'findInheritedAttribute' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: findInheritedAttribute(string).");return b.messageHandler.sendWithPromise("Page.findInheritedAttribute",{page:this.id,attrib:a},this.userPriority).then(function(a){return"0"==
a?null:new b.Obj(a)})};b.Annot.create=function(a,c,d){if(3!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 3 arguments. Function Signature: create(SDFDoc, number, Rect)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'create' is of type '"+
a.name+"'. Expected type 'SDFDoc'. Function Signature: create(SDFDoc, number, Rect).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: create(SDFDoc, number, Rect).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+
typeof c+"'. Expected type 'number'. Function Signature: create(SDFDoc, number, Rect).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(d instanceof b.Rect)&&"Rect"!=d.name){if("object"==typeof d)throw new TypeError("3rd input argument in function 'create' is of type '"+d.name+"'. Expected type 'Rect'. Function Signature: create(SDFDoc, number, Rect).");throw new TypeError("3rd input argument '"+
d+"' in function 'create' is of type '"+typeof d+"'. Expected type 'Rect'. Function Signature: create(SDFDoc, number, Rect).");}if("undefined"!=typeof d.yieldFunction)throw Error("Function '"+d.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 3rd input argument in function 'create'. Perhaps a yield statement is required for '"+d.yieldFunction+"'?");return b.messageHandler.sendWithPromise("annotCreate",{doc:a.id,type:c,pos:d},this.userPriority).then(function(a){return"0"==
a?null:new b.Annot(a)})};b.Annot.createFromObj=function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected at most 1 arguments. Function Signature: createFromObj(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+
a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");}return b.messageHandler.sendWithPromise("annotCreateFromObj",{d:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.Annot(a)})};b.Annot.prototype.copy=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'copy'. Expected 0 arguments. Function Signature: copy()");
return b.messageHandler.sendWithPromise("Annot.copy",{d:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Annot(a)})};b.Annot.prototype.compare=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'compare'. Expected 1 argument. Function Signature: compare(Annot)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'compare' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Annot)){if("object"==typeof a)throw new TypeError("1st input argument in function 'compare' is of type '"+a.name+"'. Expected type 'Annot'. Function Signature: compare(Annot).");throw new TypeError("1st input argument '"+a+"' in function 'compare' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: compare(Annot).");}return b.messageHandler.sendWithPromise("Annot.compare",{annot:this.id,d:a.id},this.userPriority)};b.Annot.prototype.isValid=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'isValid'. Expected 0 arguments. Function Signature: isValid()");return b.messageHandler.sendWithPromise("Annot.isValid",{annot:this.id},this.userPriority)};b.Annot.prototype.getSDFObj=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSDFObj'. Expected 0 arguments. Function Signature: getSDFObj()");return b.messageHandler.sendWithPromise("Annot.getSDFObj",{annot:this.id},this.userPriority).then(function(a){return"0"==
a?null:new b.Obj(a)})};b.Annot.prototype.getType=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getType'. Expected 0 arguments. Function Signature: getType()");return b.messageHandler.sendWithPromise("Annot.getType",{annot:this.id},this.userPriority)};b.Annot.prototype.isMarkup=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isMarkup'. Expected 0 arguments. Function Signature: isMarkup()");
return b.messageHandler.sendWithPromise("Annot.isMarkup",{annot:this.id},this.userPriority)};b.Annot.prototype.getRect=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getRect'. Expected 0 arguments. Function Signature: getRect()");return b.messageHandler.sendWithPromise("Annot.getRect",{annot:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Rect(a)})};b.Annot.prototype.getVisibleContentBox=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getVisibleContentBox'. Expected 0 arguments. Function Signature: getVisibleContentBox()");return b.messageHandler.sendWithPromise("Annot.getVisibleContentBox",{annot:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Rect(a)})};b.Annot.prototype.setRect=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setRect'. Expected 1 argument. Function Signature: setRect(Rect)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setRect' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Rect)&&"Rect"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'setRect' is of type '"+a.name+"'. Expected type 'Rect'. Function Signature: setRect(Rect).");throw new TypeError("1st input argument '"+a+"' in function 'setRect' is of type '"+typeof a+"'. Expected type 'Rect'. Function Signature: setRect(Rect).");}if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setRect'. Perhaps a yield statement is required for '"+
a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("Annot.setRect",{annot:this.id,pos:a},this.userPriority)};b.Annot.prototype.resize=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'resize'. Expected 1 argument. Function Signature: resize(Rect)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'resize' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof
b.Rect)&&"Rect"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'resize' is of type '"+a.name+"'. Expected type 'Rect'. Function Signature: resize(Rect).");throw new TypeError("1st input argument '"+a+"' in function 'resize' is of type '"+typeof a+"'. Expected type 'Rect'. Function Signature: resize(Rect).");}if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'resize'. Perhaps a yield statement is required for '"+
a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("Annot.resize",{annot:this.id,newrect:a},this.userPriority)};b.Annot.prototype.setContents=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setContents'. Expected 1 argument. Function Signature: setContents(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setContents' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setContents' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setContents(string).");return b.messageHandler.sendWithPromise("Annot.setContents",{annot:this.id,contents:a},this.userPriority)};b.Annot.prototype.getContents=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getContents'. Expected 0 arguments. Function Signature: getContents()");
return b.messageHandler.sendWithPromise("Annot.getContents",{annot:this.id},this.userPriority)};b.Annot.prototype.getTriggerAction=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTriggerAction'. Expected 1 argument. Function Signature: getTriggerAction(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getTriggerAction' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getTriggerAction' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getTriggerAction(number).");return b.messageHandler.sendWithPromise("Annot.getTriggerAction",{annot:this.id,trigger:a},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Annot.prototype.getPage=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPage'. Expected 0 arguments. Function Signature: getPage()");
return b.messageHandler.sendWithPromise("Annot.getPage",{annot:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Page(a)})};b.Annot.prototype.setPage=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPage'. Expected 1 argument. Function Signature: setPage(Page)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPage' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Page)){if("object"==typeof a)throw new TypeError("1st input argument in function 'setPage' is of type '"+a.name+"'. Expected type 'Page'. Function Signature: setPage(Page).");throw new TypeError("1st input argument '"+a+"' in function 'setPage' is of type '"+typeof a+"'. Expected type 'Page'. Function Signature: setPage(Page).");}return b.messageHandler.sendWithPromise("Annot.setPage",{annot:this.id,page:a.id},this.userPriority)};b.Annot.prototype.getUniqueID=function(){if(0!=
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getUniqueID'. Expected 0 arguments. Function Signature: getUniqueID()");return b.messageHandler.sendWithPromise("Annot.getUniqueID",{annot:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Annot.prototype.getDate=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getDate'. Expected 0 arguments. Function Signature: getDate()");
return b.messageHandler.sendWithPromise("Annot.getDate",{annot:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Date(a)})};b.Annot.prototype.setDate=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setDate'. Expected 1 argument. Function Signature: setDate(Date)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setDate' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Date)&&"Date"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'setDate' is of type '"+a.name+"'. Expected type 'Date'. Function Signature: setDate(Date).");throw new TypeError("1st input argument '"+a+"' in function 'setDate' is of type '"+typeof a+"'. Expected type 'Date'. Function Signature: setDate(Date).");}if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setDate'. Perhaps a yield statement is required for '"+
a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("Annot.setDate",{annot:this.id,date:a},this.userPriority)};b.Annot.prototype.getFlag=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFlag'. Expected 1 argument. Function Signature: getFlag(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getFlag' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=
typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getFlag' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getFlag(number).");return b.messageHandler.sendWithPromise("Annot.getFlag",{annot:this.id,flag:a},this.userPriority)};b.Annot.prototype.setFlag=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setFlag'. Expected 2 arguments. Function Signature: setFlag(number, boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setFlag' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setFlag' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setFlag(number, boolean).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setFlag' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setFlag' is of type '"+typeof c+"'. Expected type 'boolean'. Function Signature: setFlag(number, boolean).");
return b.messageHandler.sendWithPromise("Annot.setFlag",{annot:this.id,flag:a,value:c},this.userPriority)};b.AnnotBorderStyle.create=function(a,c,d,e){if(4!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 4 arguments. Function Signature: create(number, number, number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: create(number, number, number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: create(number, number, number, number).");
if(d instanceof Promise)throw new TypeError("3rd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'create' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: create(number, number, number, number).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof e)throw new TypeError("4th input argument '"+e+"' in function 'create' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: create(number, number, number, number).");return b.messageHandler.sendWithPromise("annotBorderStyleCreate",{s:a,b_width:c,b_hr:d,b_vr:e},this.userPriority).then(function(a){if("0"==a)return null;a=new b.AnnotBorderStyle(a);createdObjects.push({name:a.name,id:a.id});return a})};b.AnnotBorderStyle.createWithDashPattern=function(a,c,d,e,f){f instanceof
Array&&(f=new Float64Array(f));if(5!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createWithDashPattern'. Expected 5 arguments. Function Signature: createWithDashPattern(number, number, number, number, ArrayBuffer)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createWithDashPattern' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'createWithDashPattern' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: createWithDashPattern(number, number, number, number, ArrayBuffer).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createWithDashPattern' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createWithDashPattern' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: createWithDashPattern(number, number, number, number, ArrayBuffer).");
if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createWithDashPattern' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'createWithDashPattern' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: createWithDashPattern(number, number, number, number, ArrayBuffer).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'createWithDashPattern' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof e)throw new TypeError("4th input argument '"+e+"' in function 'createWithDashPattern' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: createWithDashPattern(number, number, number, number, ArrayBuffer).");if(f instanceof Promise)throw new TypeError("5th input argument in function 'createWithDashPattern' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!h.isArrayBuffer(f.buffer)){if("object"==typeof f)throw new TypeError("5th input argument in function 'createWithDashPattern' is of type '"+
f.name+"'. Expected type 'ArrayBuffer'. Function Signature: createWithDashPattern(number, number, number, number, ArrayBuffer).");throw new TypeError("5th input argument '"+f+"' in function 'createWithDashPattern' is of type '"+typeof f+"'. Expected type 'ArrayBuffer'. Function Signature: createWithDashPattern(number, number, number, number, ArrayBuffer).");}return b.messageHandler.sendWithPromise("annotBorderStyleCreateWithDashPattern",{s:a,b_width:c,b_hr:d,b_vr:e,buffer:f.buffer},this.userPriority).then(function(a){if("0"==
a)return null;a=new b.AnnotBorderStyle(a);createdObjects.push({name:a.name,id:a.id});return a})};b.AnnotBorderStyle.prototype.copy=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'copy'. Expected 0 arguments. Function Signature: copy()");return b.messageHandler.sendWithPromise("AnnotBorderStyle.copy",{bs:this.id},this.userPriority).then(function(a){if("0"==a)return null;a=new b.AnnotBorderStyle(a);createdObjects.push({name:a.name,id:a.id});
return a})};b.AnnotBorderStyle.prototype.getStyle=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getStyle'. Expected 0 arguments. Function Signature: getStyle()");return b.messageHandler.sendWithPromise("AnnotBorderStyle.getStyle",{bs:this.id},this.userPriority)};b.AnnotBorderStyle.prototype.setStyle=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setStyle'. Expected 1 argument. Function Signature: setStyle(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setStyle' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setStyle' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setStyle(number).");return b.messageHandler.sendWithPromise("AnnotBorderStyle.setStyle",{bs:this.id,style:a},this.userPriority)};b.AnnotBorderStyle.prototype.destroy=function(){if(0!=
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");
return b.messageHandler.sendWithPromise("AnnotBorderStyle.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.Annot.prototype.getAppearance=function(a,c){"undefined"===typeof a&&(a=b.Annot.State.e_normal);"undefined"===typeof c&&(c=null);if(2<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getAppearance'. Expected at most 2 arguments. Function Signature: getAppearance(number, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getAppearance' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getAppearance' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getAppearance(number, string).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'getAppearance' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof c&&null!==c)throw new TypeError("2nd input argument '"+c+"' in function 'getAppearance' is of type '"+typeof c+
"'. Expected type 'string'. Function Signature: getAppearance(number, string).");return b.messageHandler.sendWithPromise("Annot.getAppearance",{annot:this.id,annot_state:a,app_state:c},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Annot.prototype.setAppearance=function(a,c,d){"undefined"===typeof c&&(c=b.Annot.State.e_normal);"undefined"===typeof d&&(d=null);if(1>arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setAppearance'. Expected 1 to 3 arguments. Function Signature: setAppearance(Obj, number, string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setAppearance' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'setAppearance' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: setAppearance(Obj, number, string).");throw new TypeError("1st input argument '"+a+"' in function 'setAppearance' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: setAppearance(Obj, number, string).");
}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setAppearance' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setAppearance' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: setAppearance(Obj, number, string).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'setAppearance' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof d&&null!==d)throw new TypeError("3rd input argument '"+d+"' in function 'setAppearance' is of type '"+typeof d+"'. Expected type 'string'. Function Signature: setAppearance(Obj, number, string).");return b.messageHandler.sendWithPromise("Annot.setAppearance",{annot:this.id,app_stream:a.id,annot_state:c,app_state:d},this.userPriority)};b.Annot.prototype.removeAppearance=function(a,c){"undefined"===typeof a&&(a=b.Annot.State.e_normal);"undefined"===typeof c&&(c=null);if(2<arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'removeAppearance'. Expected at most 2 arguments. Function Signature: removeAppearance(number, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'removeAppearance' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'removeAppearance' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: removeAppearance(number, string).");
if(c instanceof Promise)throw new TypeError("2nd input argument in function 'removeAppearance' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof c&&null!==c)throw new TypeError("2nd input argument '"+c+"' in function 'removeAppearance' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: removeAppearance(number, string).");return b.messageHandler.sendWithPromise("Annot.removeAppearance",{annot:this.id,annot_state:a,app_state:c},
this.userPriority)};b.Annot.prototype.flatten=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'flatten'. Expected 1 argument. Function Signature: flatten(Page)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'flatten' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Page)){if("object"==typeof a)throw new TypeError("1st input argument in function 'flatten' is of type '"+
a.name+"'. Expected type 'Page'. Function Signature: flatten(Page).");throw new TypeError("1st input argument '"+a+"' in function 'flatten' is of type '"+typeof a+"'. Expected type 'Page'. Function Signature: flatten(Page).");}return b.messageHandler.sendWithPromise("Annot.flatten",{annot:this.id,page:a.id},this.userPriority)};b.Annot.prototype.getActiveAppearanceState=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getActiveAppearanceState'. Expected 0 arguments. Function Signature: getActiveAppearanceState()");
return b.messageHandler.sendWithPromise("Annot.getActiveAppearanceState",{annot:this.id},this.userPriority)};b.Annot.prototype.setActiveAppearanceState=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setActiveAppearanceState'. Expected 1 argument. Function Signature: setActiveAppearanceState(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setActiveAppearanceState' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setActiveAppearanceState' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setActiveAppearanceState(string).");return b.messageHandler.sendWithPromise("Annot.setActiveAppearanceState",{annot:this.id,astate:a},this.userPriority)};b.Annot.prototype.getColor=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getColor'. Expected 0 arguments. Function Signature: getColor()");
return b.messageHandler.sendWithPromise("Annot.getColor",{annot:this.id},this.userPriority).then(function(a){if("0"==a)return null;a=new b.ColorPt(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Annot.prototype.getColorAsRGB=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getColorAsRGB'. Expected 0 arguments. Function Signature: getColorAsRGB()");return b.messageHandler.sendWithPromise("Annot.getColorAsRGB",{annot:this.id},this.userPriority).then(function(a){if("0"==
a)return null;a=new b.ColorPt(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Annot.prototype.getColorAsCMYK=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getColorAsCMYK'. Expected 0 arguments. Function Signature: getColorAsCMYK()");return b.messageHandler.sendWithPromise("Annot.getColorAsCMYK",{annot:this.id},this.userPriority).then(function(a){if("0"==a)return null;a=new b.ColorPt(a);createdObjects.push({name:a.name,id:a.id});
return a})};b.Annot.prototype.getColorAsGray=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getColorAsGray'. Expected 0 arguments. Function Signature: getColorAsGray()");return b.messageHandler.sendWithPromise("Annot.getColorAsGray",{annot:this.id},this.userPriority).then(function(a){if("0"==a)return null;a=new b.ColorPt(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Annot.prototype.getColorCompNum=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getColorCompNum'. Expected 0 arguments. Function Signature: getColorCompNum()");return b.messageHandler.sendWithPromise("Annot.getColorCompNum",{annot:this.id},this.userPriority)};b.Annot.prototype.setColorDefault=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setColorDefault'. Expected 1 argument. Function Signature: setColorDefault(ColorPt)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setColorDefault' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.ColorPt)&&"ColorPt"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'setColorDefault' is of type '"+a.name+"'. Expected type 'ColorPt'. Function Signature: setColorDefault(ColorPt).");throw new TypeError("1st input argument '"+a+"' in function 'setColorDefault' is of type '"+typeof a+"'. Expected type 'ColorPt'. Function Signature: setColorDefault(ColorPt).");}if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setColorDefault'. Perhaps a yield statement is required for '"+
a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("Annot.setColorDefault",{annot:this.id,col:a.id},this.userPriority)};b.Annot.prototype.setColor=function(a,c){"undefined"===typeof c&&(c=3);if(1>arguments.length||2<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setColor'. Expected 1 to 2 arguments. Function Signature: setColor(ColorPt, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setColor' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.ColorPt)&&"ColorPt"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'setColor' is of type '"+a.name+"'. Expected type 'ColorPt'. Function Signature: setColor(ColorPt, number).");throw new TypeError("1st input argument '"+a+"' in function 'setColor' is of type '"+typeof a+"'. Expected type 'ColorPt'. Function Signature: setColor(ColorPt, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setColor' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setColor' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: setColor(ColorPt, number).");if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setColor'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("Annot.setColor",
{annot:this.id,col:a.id,numcomp:c},this.userPriority)};b.Annot.prototype.getStructParent=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getStructParent'. Expected 0 arguments. Function Signature: getStructParent()");return b.messageHandler.sendWithPromise("Annot.getStructParent",{annot:this.id},this.userPriority)};b.Annot.prototype.setStructParent=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setStructParent'. Expected 1 argument. Function Signature: setStructParent(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setStructParent' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setStructParent' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setStructParent(number).");return b.messageHandler.sendWithPromise("Annot.setStructParent",{annot:this.id,parkeyval:a},this.userPriority)};b.Annot.prototype.getOptionalContent=
function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getOptionalContent'. Expected 0 arguments. Function Signature: getOptionalContent()");return b.messageHandler.sendWithPromise("Annot.getOptionalContent",{annot:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Annot.prototype.setOptionalContent=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setOptionalContent'. Expected 1 argument. Function Signature: setOptionalContent(Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setOptionalContent' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'setOptionalContent' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: setOptionalContent(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'setOptionalContent' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: setOptionalContent(Obj).");
}return b.messageHandler.sendWithPromise("Annot.setOptionalContent",{annot:this.id,content:a.id},this.userPriority)};b.Annot.prototype.refreshAppearance=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'refreshAppearance'. Expected 0 arguments. Function Signature: refreshAppearance()");return b.messageHandler.sendWithPromise("Annot.refreshAppearance",{annot:this.id},this.userPriority)};b.Annot.prototype.getRotation=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getRotation'. Expected 0 arguments. Function Signature: getRotation()");return b.messageHandler.sendWithPromise("Annot.getRotation",{annot:this.id},this.userPriority)};b.Annot.prototype.setRotation=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setRotation'. Expected 1 argument. Function Signature: setRotation(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setRotation' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setRotation' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setRotation(number).");return b.messageHandler.sendWithPromise("Annot.setRotation",{annot:this.id,angle:a},this.userPriority)};b.AnnotBorderStyle.prototype.getWidth=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getWidth'. Expected 0 arguments. Function Signature: getWidth()");
return b.messageHandler.sendWithPromise("AnnotBorderStyle.getWidth",{bs:this.id},this.userPriority)};b.AnnotBorderStyle.prototype.setWidth=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setWidth'. Expected 1 argument. Function Signature: setWidth(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setWidth' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'setWidth' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setWidth(number).");return b.messageHandler.sendWithPromise("AnnotBorderStyle.setWidth",{bs:this.id,width:a},this.userPriority)};b.AnnotBorderStyle.prototype.getHR=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getHR'. Expected 0 arguments. Function Signature: getHR()");return b.messageHandler.sendWithPromise("AnnotBorderStyle.getHR",{bs:this.id},
this.userPriority)};b.AnnotBorderStyle.prototype.setHR=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setHR'. Expected 1 argument. Function Signature: setHR(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setHR' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setHR' is of type '"+typeof a+
"'. Expected type 'number'. Function Signature: setHR(number).");return b.messageHandler.sendWithPromise("AnnotBorderStyle.setHR",{bs:this.id,horizontal_radius:a},this.userPriority)};b.AnnotBorderStyle.prototype.getVR=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getVR'. Expected 0 arguments. Function Signature: getVR()");return b.messageHandler.sendWithPromise("AnnotBorderStyle.getVR",{bs:this.id},this.userPriority)};b.AnnotBorderStyle.prototype.setVR=
function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setVR'. Expected 1 argument. Function Signature: setVR(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setVR' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setVR' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setVR(number).");
return b.messageHandler.sendWithPromise("AnnotBorderStyle.setVR",{bs:this.id,vertical_radius:a},this.userPriority)};b.AnnotBorderStyle.prototype.getDashPattern=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getDashPattern'. Expected 0 arguments. Function Signature: getDashPattern()");return b.messageHandler.sendWithPromise("AnnotBorderStyle.getDashPattern",{bs:this.id},this.userPriority).then(function(a){return new Float64Array(a)})};b.Annot.prototype.getBorderStyle=
function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getBorderStyle'. Expected 0 arguments. Function Signature: getBorderStyle()");return b.messageHandler.sendWithPromise("Annot.getBorderStyle",{annot:this.id},this.userPriority).then(function(a){if("0"==a)return null;a=new b.AnnotBorderStyle(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Annot.prototype.setBorderStyle=function(a,c){"undefined"===typeof c&&(c=!1);if(1>arguments.length||
2<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setBorderStyle'. Expected 1 to 2 arguments. Function Signature: setBorderStyle(AnnotBorderStyle, boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setBorderStyle' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.AnnotBorderStyle)){if("object"==typeof a)throw new TypeError("1st input argument in function 'setBorderStyle' is of type '"+
a.name+"'. Expected type 'AnnotBorderStyle'. Function Signature: setBorderStyle(AnnotBorderStyle, boolean).");throw new TypeError("1st input argument '"+a+"' in function 'setBorderStyle' is of type '"+typeof a+"'. Expected type 'AnnotBorderStyle'. Function Signature: setBorderStyle(AnnotBorderStyle, boolean).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setBorderStyle' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=
typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setBorderStyle' is of type '"+typeof c+"'. Expected type 'boolean'. Function Signature: setBorderStyle(AnnotBorderStyle, boolean).");return b.messageHandler.sendWithPromise("Annot.setBorderStyle",{annot:this.id,bs:a.id,oldStyleOnly:c},this.userPriority)};b.Annot.getBorderStyleStyle=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getBorderStyleStyle'. Expected 1 argument. Function Signature: getBorderStyleStyle(AnnotBorderStyle)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'getBorderStyleStyle' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.AnnotBorderStyle)){if("object"==typeof a)throw new TypeError("1st input argument in function 'getBorderStyleStyle' is of type '"+a.name+"'. Expected type 'AnnotBorderStyle'. Function Signature: getBorderStyleStyle(AnnotBorderStyle).");throw new TypeError("1st input argument '"+a+"' in function 'getBorderStyleStyle' is of type '"+
typeof a+"'. Expected type 'AnnotBorderStyle'. Function Signature: getBorderStyleStyle(AnnotBorderStyle).");}return b.messageHandler.sendWithPromise("annotGetBorderStyleStyle",{bs:a.id},this.userPriority)};b.Annot.setBorderStyleStyle=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setBorderStyleStyle'. Expected 2 arguments. Function Signature: setBorderStyleStyle(AnnotBorderStyle, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setBorderStyleStyle' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.AnnotBorderStyle)){if("object"==typeof a)throw new TypeError("1st input argument in function 'setBorderStyleStyle' is of type '"+a.name+"'. Expected type 'AnnotBorderStyle'. Function Signature: setBorderStyleStyle(AnnotBorderStyle, number).");throw new TypeError("1st input argument '"+a+"' in function 'setBorderStyleStyle' is of type '"+typeof a+"'. Expected type 'AnnotBorderStyle'. Function Signature: setBorderStyleStyle(AnnotBorderStyle, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setBorderStyleStyle' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setBorderStyleStyle' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: setBorderStyleStyle(AnnotBorderStyle, number).");return b.messageHandler.sendWithPromise("annotSetBorderStyleStyle",{bs:a.id,bst:c},this.userPriority)};b.AnnotBorderStyle.prototype.assign=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'assign'. Expected 1 argument. Function Signature: assign(AnnotBorderStyle)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'assign' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.AnnotBorderStyle)){if("object"==typeof a)throw new TypeError("1st input argument in function 'assign' is of type '"+a.name+"'. Expected type 'AnnotBorderStyle'. Function Signature: assign(AnnotBorderStyle).");throw new TypeError("1st input argument '"+a+"' in function 'assign' is of type '"+typeof a+"'. Expected type 'AnnotBorderStyle'. Function Signature: assign(AnnotBorderStyle).");
}return b.messageHandler.sendWithPromise("AnnotBorderStyle.assign",{from:this.id,to:a.id},this.userPriority)};b.AnnotBorderStyle.prototype.compare=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'compare'. Expected 1 argument. Function Signature: compare(AnnotBorderStyle)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'compare' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.AnnotBorderStyle)){if("object"==typeof a)throw new TypeError("1st input argument in function 'compare' is of type '"+a.name+"'. Expected type 'AnnotBorderStyle'. Function Signature: compare(AnnotBorderStyle).");throw new TypeError("1st input argument '"+a+"' in function 'compare' is of type '"+typeof a+"'. Expected type 'AnnotBorderStyle'. Function Signature: compare(AnnotBorderStyle).");}return b.messageHandler.sendWithPromise("AnnotBorderStyle.compare",{a:this.id,b:a.id},this.userPriority)};
b.CaretAnnot.createFromObj=function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected at most 1 arguments. Function Signature: createFromObj(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+
a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");}return b.messageHandler.sendWithPromise("caretAnnotCreateFromObj",{d:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.CaretAnnot(a)})};b.CaretAnnot.createFromAnnot=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromAnnot'. Expected 1 argument. Function Signature: createFromAnnot(Annot)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Annot)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromAnnot' is of type '"+a.name+"'. Expected type 'Annot'. Function Signature: createFromAnnot(Annot).");throw new TypeError("1st input argument '"+a+"' in function 'createFromAnnot' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: createFromAnnot(Annot).");
}return b.messageHandler.sendWithPromise("caretAnnotCreateFromAnnot",{ann:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.CaretAnnot(a)})};b.CaretAnnot.create=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 2 arguments. Function Signature: create(SDFDoc, Rect)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: create(SDFDoc, Rect).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: create(SDFDoc, Rect).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.Rect)&&"Rect"!=c.name){if("object"==typeof c)throw new TypeError("2nd input argument in function 'create' is of type '"+c.name+"'. Expected type 'Rect'. Function Signature: create(SDFDoc, Rect).");throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: create(SDFDoc, Rect).");}if("undefined"!=typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'create'. Perhaps a yield statement is required for '"+
c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("caretAnnotCreate",{doc:a.id,pos:c},this.userPriority).then(function(a){return"0"==a?null:new b.CaretAnnot(a)})};b.CaretAnnot.prototype.getSymbol=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSymbol'. Expected 0 arguments. Function Signature: getSymbol()");return b.messageHandler.sendWithPromise("CaretAnnot.getSymbol",{caret:this.id},this.userPriority)};b.CaretAnnot.prototype.setSymbol=
function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setSymbol'. Expected 1 argument. Function Signature: setSymbol(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setSymbol' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setSymbol' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setSymbol(string).");
return b.messageHandler.sendWithPromise("CaretAnnot.setSymbol",{caret:this.id,symbol:a},this.userPriority)};b.LineAnnot.createFromObj=function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected at most 1 arguments. Function Signature: createFromObj(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");}return b.messageHandler.sendWithPromise("lineAnnotCreateFromObj",{d:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.LineAnnot(a)})};
b.LineAnnot.createFromAnnot=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromAnnot'. Expected 1 argument. Function Signature: createFromAnnot(Annot)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Annot)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromAnnot' is of type '"+
a.name+"'. Expected type 'Annot'. Function Signature: createFromAnnot(Annot).");throw new TypeError("1st input argument '"+a+"' in function 'createFromAnnot' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: createFromAnnot(Annot).");}return b.messageHandler.sendWithPromise("lineAnnotCreateFromAnnot",{ann:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.LineAnnot(a)})};b.LineAnnot.create=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'create'. Expected 2 arguments. Function Signature: create(SDFDoc, Rect)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: create(SDFDoc, Rect).");
throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: create(SDFDoc, Rect).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Rect)&&"Rect"!=c.name){if("object"==typeof c)throw new TypeError("2nd input argument in function 'create' is of type '"+c.name+"'. Expected type 'Rect'. Function Signature: create(SDFDoc, Rect).");
throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: create(SDFDoc, Rect).");}if("undefined"!=typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'create'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("lineAnnotCreate",
{doc:a.id,pos:c},this.userPriority).then(function(a){return"0"==a?null:new b.LineAnnot(a)})};b.LineAnnot.prototype.getStartPoint=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getStartPoint'. Expected 0 arguments. Function Signature: getStartPoint()");return b.messageHandler.sendWithPromise("LineAnnot.getStartPoint",{line:this.id},this.userPriority)};b.LineAnnot.prototype.setStartPoint=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'setStartPoint'. Expected 1 argument. Function Signature: setStartPoint(Point)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setStartPoint' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Point)&&"Point"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'setStartPoint' is of type '"+a.name+"'. Expected type 'Point'. Function Signature: setStartPoint(Point).");
throw new TypeError("1st input argument '"+a+"' in function 'setStartPoint' is of type '"+typeof a+"'. Expected type 'Point'. Function Signature: setStartPoint(Point).");}if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setStartPoint'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("LineAnnot.setStartPoint",
{line:this.id,sp:a},this.userPriority)};b.LineAnnot.prototype.getEndPoint=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getEndPoint'. Expected 0 arguments. Function Signature: getEndPoint()");return b.messageHandler.sendWithPromise("LineAnnot.getEndPoint",{line:this.id},this.userPriority)};b.LineAnnot.prototype.setEndPoint=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setEndPoint'. Expected 1 argument. Function Signature: setEndPoint(Point)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setEndPoint' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Point)&&"Point"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'setEndPoint' is of type '"+a.name+"'. Expected type 'Point'. Function Signature: setEndPoint(Point).");throw new TypeError("1st input argument '"+a+"' in function 'setEndPoint' is of type '"+typeof a+"'. Expected type 'Point'. Function Signature: setEndPoint(Point).");
}if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setEndPoint'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("LineAnnot.setEndPoint",{line:this.id,ep:a},this.userPriority)};b.LineAnnot.prototype.getStartStyle=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getStartStyle'. Expected 0 arguments. Function Signature: getStartStyle()");return b.messageHandler.sendWithPromise("LineAnnot.getStartStyle",{line:this.id},this.userPriority)};b.LineAnnot.prototype.setStartStyle=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setStartStyle'. Expected 1 argument. Function Signature: setStartStyle(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setStartStyle' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setStartStyle' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setStartStyle(number).");return b.messageHandler.sendWithPromise("LineAnnot.setStartStyle",{line:this.id,ss:a},this.userPriority)};b.LineAnnot.prototype.getEndStyle=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getEndStyle'. Expected 0 arguments. Function Signature: getEndStyle()");
return b.messageHandler.sendWithPromise("LineAnnot.getEndStyle",{line:this.id},this.userPriority)};b.LineAnnot.prototype.setEndStyle=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setEndStyle'. Expected 1 argument. Function Signature: setEndStyle(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setEndStyle' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=
typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setEndStyle' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setEndStyle(number).");return b.messageHandler.sendWithPromise("LineAnnot.setEndStyle",{line:this.id,es:a},this.userPriority)};b.LineAnnot.prototype.getLeaderLineLength=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getLeaderLineLength'. Expected 0 arguments. Function Signature: getLeaderLineLength()");
return b.messageHandler.sendWithPromise("LineAnnot.getLeaderLineLength",{line:this.id},this.userPriority)};b.LineAnnot.prototype.setLeaderLineLength=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setLeaderLineLength'. Expected 1 argument. Function Signature: setLeaderLineLength(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setLeaderLineLength' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setLeaderLineLength' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setLeaderLineLength(number).");return b.messageHandler.sendWithPromise("LineAnnot.setLeaderLineLength",{line:this.id,length:a},this.userPriority)};b.LineAnnot.prototype.getLeaderLineExtensionLength=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getLeaderLineExtensionLength'. Expected 0 arguments. Function Signature: getLeaderLineExtensionLength()");
return b.messageHandler.sendWithPromise("LineAnnot.getLeaderLineExtensionLength",{line:this.id},this.userPriority)};b.LineAnnot.prototype.setLeaderLineExtensionLength=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setLeaderLineExtensionLength'. Expected 1 argument. Function Signature: setLeaderLineExtensionLength(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setLeaderLineExtensionLength' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setLeaderLineExtensionLength' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setLeaderLineExtensionLength(number).");return b.messageHandler.sendWithPromise("LineAnnot.setLeaderLineExtensionLength",{line:this.id,length:a},this.userPriority)};b.LineAnnot.prototype.getShowCaption=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getShowCaption'. Expected 0 arguments. Function Signature: getShowCaption()");
return b.messageHandler.sendWithPromise("LineAnnot.getShowCaption",{line:this.id},this.userPriority)};b.LineAnnot.prototype.setShowCaption=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setShowCaption'. Expected 1 argument. Function Signature: setShowCaption(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setShowCaption' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setShowCaption' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setShowCaption(boolean).");return b.messageHandler.sendWithPromise("LineAnnot.setShowCaption",{line:this.id,showCaption:a},this.userPriority)};b.LineAnnot.prototype.getIntentType=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getIntentType'. Expected 0 arguments. Function Signature: getIntentType()");
return b.messageHandler.sendWithPromise("LineAnnot.getIntentType",{line:this.id},this.userPriority)};b.LineAnnot.prototype.setIntentType=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setIntentType'. Expected 1 argument. Function Signature: setIntentType(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setIntentType' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=
typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setIntentType' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setIntentType(number).");return b.messageHandler.sendWithPromise("LineAnnot.setIntentType",{line:this.id,it:a},this.userPriority)};b.LineAnnot.prototype.getCapPos=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getCapPos'. Expected 0 arguments. Function Signature: getCapPos()");return b.messageHandler.sendWithPromise("LineAnnot.getCapPos",
{line:this.id},this.userPriority)};b.LineAnnot.prototype.setCapPos=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setCapPos'. Expected 1 argument. Function Signature: setCapPos(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setCapPos' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setCapPos' is of type '"+
typeof a+"'. Expected type 'number'. Function Signature: setCapPos(number).");return b.messageHandler.sendWithPromise("LineAnnot.setCapPos",{line:this.id,it:a},this.userPriority)};b.LineAnnot.prototype.getLeaderLineOffset=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getLeaderLineOffset'. Expected 0 arguments. Function Signature: getLeaderLineOffset()");return b.messageHandler.sendWithPromise("LineAnnot.getLeaderLineOffset",{line:this.id},
this.userPriority)};b.LineAnnot.prototype.setLeaderLineOffset=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setLeaderLineOffset'. Expected 1 argument. Function Signature: setLeaderLineOffset(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setLeaderLineOffset' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'setLeaderLineOffset' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setLeaderLineOffset(number).");return b.messageHandler.sendWithPromise("LineAnnot.setLeaderLineOffset",{line:this.id,length:a},this.userPriority)};b.LineAnnot.prototype.getTextHOffset=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTextHOffset'. Expected 0 arguments. Function Signature: getTextHOffset()");return b.messageHandler.sendWithPromise("LineAnnot.getTextHOffset",
{line:this.id},this.userPriority)};b.LineAnnot.prototype.setTextHOffset=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setTextHOffset'. Expected 1 argument. Function Signature: setTextHOffset(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setTextHOffset' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'setTextHOffset' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setTextHOffset(number).");return b.messageHandler.sendWithPromise("LineAnnot.setTextHOffset",{line:this.id,offset:a},this.userPriority)};b.LineAnnot.prototype.getTextVOffset=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTextVOffset'. Expected 0 arguments. Function Signature: getTextVOffset()");return b.messageHandler.sendWithPromise("LineAnnot.getTextVOffset",
{line:this.id},this.userPriority)};b.LineAnnot.prototype.setTextVOffset=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setTextVOffset'. Expected 1 argument. Function Signature: setTextVOffset(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setTextVOffset' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'setTextVOffset' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setTextVOffset(number).");return b.messageHandler.sendWithPromise("LineAnnot.setTextVOffset",{line:this.id,offset:a},this.userPriority)};b.CircleAnnot.createFromObj=function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected at most 1 arguments. Function Signature: createFromObj(Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");
}return b.messageHandler.sendWithPromise("circleAnnotCreateFromObj",{d:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.CircleAnnot(a)})};b.CircleAnnot.createFromAnnot=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromAnnot'. Expected 1 argument. Function Signature: createFromAnnot(Annot)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Annot)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromAnnot' is of type '"+a.name+"'. Expected type 'Annot'. Function Signature: createFromAnnot(Annot).");throw new TypeError("1st input argument '"+a+"' in function 'createFromAnnot' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: createFromAnnot(Annot).");}return b.messageHandler.sendWithPromise("circleAnnotCreateFromAnnot",{circle:a.id},this.userPriority).then(function(a){return"0"==
a?null:new b.CircleAnnot(a)})};b.CircleAnnot.create=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 2 arguments. Function Signature: create(SDFDoc, Rect)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'create' is of type '"+
a.name+"'. Expected type 'SDFDoc'. Function Signature: create(SDFDoc, Rect).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: create(SDFDoc, Rect).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Rect)&&"Rect"!=c.name){if("object"==typeof c)throw new TypeError("2nd input argument in function 'create' is of type '"+
c.name+"'. Expected type 'Rect'. Function Signature: create(SDFDoc, Rect).");throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: create(SDFDoc, Rect).");}if("undefined"!=typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'create'. Perhaps a yield statement is required for '"+
c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("circleAnnotCreate",{doc:a.id,pos:c},this.userPriority).then(function(a){return"0"==a?null:new b.CircleAnnot(a)})};b.CircleAnnot.prototype.getInteriorColor=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getInteriorColor'. Expected 0 arguments. Function Signature: getInteriorColor()");return b.messageHandler.sendWithPromise("CircleAnnot.getInteriorColor",{circle:this.id},this.userPriority).then(function(a){if("0"==
a)return null;a=new b.ColorPt(a);createdObjects.push({name:a.name,id:a.id});return a})};b.CircleAnnot.prototype.getInteriorColorCompNum=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getInteriorColorCompNum'. Expected 0 arguments. Function Signature: getInteriorColorCompNum()");return b.messageHandler.sendWithPromise("CircleAnnot.getInteriorColorCompNum",{circle:this.id},this.userPriority)};b.CircleAnnot.prototype.setInteriorColorDefault=
function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setInteriorColorDefault'. Expected 1 argument. Function Signature: setInteriorColorDefault(ColorPt)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setInteriorColorDefault' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.ColorPt)&&"ColorPt"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'setInteriorColorDefault' is of type '"+
a.name+"'. Expected type 'ColorPt'. Function Signature: setInteriorColorDefault(ColorPt).");throw new TypeError("1st input argument '"+a+"' in function 'setInteriorColorDefault' is of type '"+typeof a+"'. Expected type 'ColorPt'. Function Signature: setInteriorColorDefault(ColorPt).");}if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setInteriorColorDefault'. Perhaps a yield statement is required for '"+
a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("CircleAnnot.setInteriorColorDefault",{circle:this.id,col:a.id},this.userPriority)};b.CircleAnnot.prototype.setInteriorColor=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setInteriorColor'. Expected 2 arguments. Function Signature: setInteriorColor(ColorPt, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setInteriorColor' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.ColorPt)&&"ColorPt"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'setInteriorColor' is of type '"+a.name+"'. Expected type 'ColorPt'. Function Signature: setInteriorColor(ColorPt, number).");throw new TypeError("1st input argument '"+a+"' in function 'setInteriorColor' is of type '"+typeof a+"'. Expected type 'ColorPt'. Function Signature: setInteriorColor(ColorPt, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setInteriorColor' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setInteriorColor' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: setInteriorColor(ColorPt, number).");if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setInteriorColor'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");
return b.messageHandler.sendWithPromise("CircleAnnot.setInteriorColor",{circle:this.id,col:a.id,numcomp:c},this.userPriority)};b.CircleAnnot.prototype.getContentRect=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getContentRect'. Expected 0 arguments. Function Signature: getContentRect()");return b.messageHandler.sendWithPromise("CircleAnnot.getContentRect",{circle:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Rect(a)})};
b.CircleAnnot.prototype.setContentRect=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setContentRect'. Expected 1 argument. Function Signature: setContentRect(Rect)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setContentRect' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Rect)&&"Rect"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'setContentRect' is of type '"+
a.name+"'. Expected type 'Rect'. Function Signature: setContentRect(Rect).");throw new TypeError("1st input argument '"+a+"' in function 'setContentRect' is of type '"+typeof a+"'. Expected type 'Rect'. Function Signature: setContentRect(Rect).");}if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setContentRect'. Perhaps a yield statement is required for '"+
a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("CircleAnnot.setContentRect",{circle:this.id,cr:a},this.userPriority)};b.CircleAnnot.prototype.getPadding=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPadding'. Expected 0 arguments. Function Signature: getPadding()");return b.messageHandler.sendWithPromise("CircleAnnot.getPadding",{circle:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Rect(a)})};b.CircleAnnot.prototype.setPadding=
function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPadding'. Expected 1 argument. Function Signature: setPadding(Rect)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPadding' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Rect)&&"Rect"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'setPadding' is of type '"+a.name+
"'. Expected type 'Rect'. Function Signature: setPadding(Rect).");throw new TypeError("1st input argument '"+a+"' in function 'setPadding' is of type '"+typeof a+"'. Expected type 'Rect'. Function Signature: setPadding(Rect).");}if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setPadding'. Perhaps a yield statement is required for '"+a.yieldFunction+
"'?");return b.messageHandler.sendWithPromise("CircleAnnot.setPadding",{circle:this.id,cr:a},this.userPriority)};b.FileAttachmentAnnot.createFromObj=function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected at most 1 arguments. Function Signature: createFromObj(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");}return b.messageHandler.sendWithPromise("fileAttachmentAnnotCreateFromObj",{d:a.id},this.userPriority).then(function(a){return"0"==
a?null:new b.FileAttachmentAnnot(a)})};b.FileAttachmentAnnot.prototype["export"]=function(a){"undefined"===typeof a&&(a="");if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'export'. Expected at most 1 arguments. Function Signature: export(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'export' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'export' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: export(string).");return b.messageHandler.sendWithPromise("FileAttachmentAnnot.export",{fileatt:this.id,save_as:a},this.userPriority)};b.FileAttachmentAnnot.prototype.createFromAnnot=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromAnnot'. Expected 0 arguments. Function Signature: createFromAnnot()");return b.messageHandler.sendWithPromise("FileAttachmentAnnot.createFromAnnot",
{fileatt:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Annot(a)})};b.FileAttachmentAnnot.createWithFileSpec=function(a,c,d,e){"undefined"===typeof e&&(e=b.FileAttachmentAnnot.Icon.e_PushPin);if(3>arguments.length||4<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createWithFileSpec'. Expected 3 to 4 arguments. Function Signature: createWithFileSpec(SDFDoc, Rect, FileSpec, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createWithFileSpec' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createWithFileSpec' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: createWithFileSpec(SDFDoc, Rect, FileSpec, number).");throw new TypeError("1st input argument '"+a+"' in function 'createWithFileSpec' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: createWithFileSpec(SDFDoc, Rect, FileSpec, number).");}if(c instanceof
Promise)throw new TypeError("2nd input argument in function 'createWithFileSpec' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Rect)&&"Rect"!=c.name){if("object"==typeof c)throw new TypeError("2nd input argument in function 'createWithFileSpec' is of type '"+c.name+"'. Expected type 'Rect'. Function Signature: createWithFileSpec(SDFDoc, Rect, FileSpec, number).");throw new TypeError("2nd input argument '"+c+"' in function 'createWithFileSpec' is of type '"+
typeof c+"'. Expected type 'Rect'. Function Signature: createWithFileSpec(SDFDoc, Rect, FileSpec, number).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createWithFileSpec' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(d instanceof b.FileSpec)){if("object"==typeof d)throw new TypeError("3rd input argument in function 'createWithFileSpec' is of type '"+d.name+"'. Expected type 'FileSpec'. Function Signature: createWithFileSpec(SDFDoc, Rect, FileSpec, number).");
throw new TypeError("3rd input argument '"+d+"' in function 'createWithFileSpec' is of type '"+typeof d+"'. Expected type 'FileSpec'. Function Signature: createWithFileSpec(SDFDoc, Rect, FileSpec, number).");}if(e instanceof Promise)throw new TypeError("4th input argument in function 'createWithFileSpec' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof e)throw new TypeError("4th input argument '"+e+"' in function 'createWithFileSpec' is of type '"+
typeof e+"'. Expected type 'number'. Function Signature: createWithFileSpec(SDFDoc, Rect, FileSpec, number).");if("undefined"!=typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'createWithFileSpec'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("fileAttachmentAnnotCreateWithFileSpec",{doc:a.id,pos:c,
fs:d.id,icon_name:e},this.userPriority).then(function(a){return"0"==a?null:new b.FileAttachmentAnnot(a)})};b.FileAttachmentAnnot.createDefault=function(a,c,d){if(3!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createDefault'. Expected 3 arguments. Function Signature: createDefault(SDFDoc, Rect, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createDefault' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createDefault' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: createDefault(SDFDoc, Rect, string).");throw new TypeError("1st input argument '"+a+"' in function 'createDefault' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: createDefault(SDFDoc, Rect, string).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createDefault' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.Rect)&&"Rect"!=c.name){if("object"==typeof c)throw new TypeError("2nd input argument in function 'createDefault' is of type '"+c.name+"'. Expected type 'Rect'. Function Signature: createDefault(SDFDoc, Rect, string).");throw new TypeError("2nd input argument '"+c+"' in function 'createDefault' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: createDefault(SDFDoc, Rect, string).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createDefault' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'createDefault' is of type '"+typeof d+"'. Expected type 'string'. Function Signature: createDefault(SDFDoc, Rect, string).");if("undefined"!=typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'createDefault'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("fileAttachmentAnnotCreateDefault",
{doc:a.id,pos:c,path:d},this.userPriority).then(function(a){return"0"==a?null:new b.FileAttachmentAnnot(a)})};b.FileAttachmentAnnot.prototype.getFileSpec=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFileSpec'. Expected 0 arguments. Function Signature: getFileSpec()");return b.messageHandler.sendWithPromise("FileAttachmentAnnot.getFileSpec",{fileatt:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.FileSpec(a)})};b.FileAttachmentAnnot.prototype.setFileSpec=
function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setFileSpec'. Expected 1 argument. Function Signature: setFileSpec(FileSpec)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setFileSpec' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.FileSpec)){if("object"==typeof a)throw new TypeError("1st input argument in function 'setFileSpec' is of type '"+a.name+"'. Expected type 'FileSpec'. Function Signature: setFileSpec(FileSpec).");
throw new TypeError("1st input argument '"+a+"' in function 'setFileSpec' is of type '"+typeof a+"'. Expected type 'FileSpec'. Function Signature: setFileSpec(FileSpec).");}return b.messageHandler.sendWithPromise("FileAttachmentAnnot.setFileSpec",{fileatt:this.id,file:a.id},this.userPriority)};b.FileAttachmentAnnot.prototype.getIcon=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getIcon'. Expected 0 arguments. Function Signature: getIcon()");
return b.messageHandler.sendWithPromise("FileAttachmentAnnot.getIcon",{fileatt:this.id},this.userPriority)};b.FileAttachmentAnnot.prototype.setIcon=function(a){"undefined"===typeof a&&(a=b.FileAttachmentAnnot.Icon.e_PushPin);if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setIcon'. Expected at most 1 arguments. Function Signature: setIcon(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setIcon' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setIcon' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setIcon(number).");return b.messageHandler.sendWithPromise("FileAttachmentAnnot.setIcon",{fileatt:this.id,type:a},this.userPriority)};b.FileAttachmentAnnot.prototype.getIconName=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getIconName'. Expected 0 arguments. Function Signature: getIconName()");
return b.messageHandler.sendWithPromise("FileAttachmentAnnot.getIconName",{fileatt:this.id},this.userPriority)};b.FileAttachmentAnnot.prototype.setIconName=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setIconName'. Expected 1 argument. Function Signature: setIconName(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setIconName' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setIconName' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setIconName(string).");return b.messageHandler.sendWithPromise("FileAttachmentAnnot.setIconName",{fileatt:this.id,iname:a},this.userPriority)};b.FreeTextAnnot.createFromObj=function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected at most 1 arguments. Function Signature: createFromObj(Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");
}return b.messageHandler.sendWithPromise("freeTextAnnotCreateFromObj",{d:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.FreeTextAnnot(a)})};b.FreeTextAnnot.createFromAnnot=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromAnnot'. Expected 1 argument. Function Signature: createFromAnnot(Annot)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Annot)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromAnnot' is of type '"+a.name+"'. Expected type 'Annot'. Function Signature: createFromAnnot(Annot).");throw new TypeError("1st input argument '"+a+"' in function 'createFromAnnot' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: createFromAnnot(Annot).");}return b.messageHandler.sendWithPromise("freeTextAnnotCreateFromAnnot",{ann:a.id},this.userPriority).then(function(a){return"0"==
a?null:new b.FreeTextAnnot(a)})};b.FreeTextAnnot.create=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 2 arguments. Function Signature: create(SDFDoc, Rect)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'create' is of type '"+
a.name+"'. Expected type 'SDFDoc'. Function Signature: create(SDFDoc, Rect).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: create(SDFDoc, Rect).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Rect)&&"Rect"!=c.name){if("object"==typeof c)throw new TypeError("2nd input argument in function 'create' is of type '"+
c.name+"'. Expected type 'Rect'. Function Signature: create(SDFDoc, Rect).");throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: create(SDFDoc, Rect).");}if("undefined"!=typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'create'. Perhaps a yield statement is required for '"+
c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("freeTextAnnotCreate",{doc:a.id,pos:c},this.userPriority).then(function(a){return"0"==a?null:new b.FreeTextAnnot(a)})};b.FreeTextAnnot.prototype.getDefaultAppearance=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getDefaultAppearance'. Expected 0 arguments. Function Signature: getDefaultAppearance()");return b.messageHandler.sendWithPromise("FreeTextAnnot.getDefaultAppearance",
{ft:this.id},this.userPriority)};b.FreeTextAnnot.prototype.setDefaultAppearance=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setDefaultAppearance'. Expected 1 argument. Function Signature: setDefaultAppearance(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setDefaultAppearance' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'setDefaultAppearance' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setDefaultAppearance(string).");return b.messageHandler.sendWithPromise("FreeTextAnnot.setDefaultAppearance",{ft:this.id,app_str:a},this.userPriority)};b.FreeTextAnnot.prototype.getQuaddingFormat=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getQuaddingFormat'. Expected 0 arguments. Function Signature: getQuaddingFormat()");return b.messageHandler.sendWithPromise("FreeTextAnnot.getQuaddingFormat",
{ft:this.id},this.userPriority)};b.FreeTextAnnot.prototype.setQuaddingFormat=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setQuaddingFormat'. Expected 1 argument. Function Signature: setQuaddingFormat(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setQuaddingFormat' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'setQuaddingFormat' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setQuaddingFormat(number).");return b.messageHandler.sendWithPromise("FreeTextAnnot.setQuaddingFormat",{ft:this.id,format:a},this.userPriority)};b.FreeTextAnnot.prototype.getCalloutLinePoints=function(a,c,d){if(3!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getCalloutLinePoints'. Expected 3 arguments. Function Signature: getCalloutLinePoints(Point, Point, Point)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'getCalloutLinePoints' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Point)&&"Point"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'getCalloutLinePoints' is of type '"+a.name+"'. Expected type 'Point'. Function Signature: getCalloutLinePoints(Point, Point, Point).");throw new TypeError("1st input argument '"+a+"' in function 'getCalloutLinePoints' is of type '"+
typeof a+"'. Expected type 'Point'. Function Signature: getCalloutLinePoints(Point, Point, Point).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'getCalloutLinePoints' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Point)&&"Point"!=c.name){if("object"==typeof c)throw new TypeError("2nd input argument in function 'getCalloutLinePoints' is of type '"+c.name+"'. Expected type 'Point'. Function Signature: getCalloutLinePoints(Point, Point, Point).");
throw new TypeError("2nd input argument '"+c+"' in function 'getCalloutLinePoints' is of type '"+typeof c+"'. Expected type 'Point'. Function Signature: getCalloutLinePoints(Point, Point, Point).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'getCalloutLinePoints' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(d instanceof b.Point)&&"Point"!=d.name){if("object"==typeof d)throw new TypeError("3rd input argument in function 'getCalloutLinePoints' is of type '"+
d.name+"'. Expected type 'Point'. Function Signature: getCalloutLinePoints(Point, Point, Point).");throw new TypeError("3rd input argument '"+d+"' in function 'getCalloutLinePoints' is of type '"+typeof d+"'. Expected type 'Point'. Function Signature: getCalloutLinePoints(Point, Point, Point).");}if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'getCalloutLinePoints'. Perhaps a yield statement is required for '"+
a.yieldFunction+"'?");if("undefined"!=typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'getCalloutLinePoints'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");if("undefined"!=typeof d.yieldFunction)throw Error("Function '"+d.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 3rd input argument in function 'getCalloutLinePoints'. Perhaps a yield statement is required for '"+
d.yieldFunction+"'?");return b.messageHandler.sendWithPromise("FreeTextAnnot.getCalloutLinePoints",{ft:this.id,p1:a,p2:c,p3:d},this.userPriority)};b.FreeTextAnnot.prototype.setCalloutLinePoints=function(a,c,d){if(3!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setCalloutLinePoints'. Expected 3 arguments. Function Signature: setCalloutLinePoints(Point, Point, Point)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setCalloutLinePoints' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Point)&&"Point"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'setCalloutLinePoints' is of type '"+a.name+"'. Expected type 'Point'. Function Signature: setCalloutLinePoints(Point, Point, Point).");throw new TypeError("1st input argument '"+a+"' in function 'setCalloutLinePoints' is of type '"+typeof a+"'. Expected type 'Point'. Function Signature: setCalloutLinePoints(Point, Point, Point).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setCalloutLinePoints' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.Point)&&"Point"!=c.name){if("object"==typeof c)throw new TypeError("2nd input argument in function 'setCalloutLinePoints' is of type '"+c.name+"'. Expected type 'Point'. Function Signature: setCalloutLinePoints(Point, Point, Point).");throw new TypeError("2nd input argument '"+c+"' in function 'setCalloutLinePoints' is of type '"+typeof c+"'. Expected type 'Point'. Function Signature: setCalloutLinePoints(Point, Point, Point).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'setCalloutLinePoints' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(d instanceof b.Point)&&"Point"!=d.name){if("object"==typeof d)throw new TypeError("3rd input argument in function 'setCalloutLinePoints' is of type '"+d.name+"'. Expected type 'Point'. Function Signature: setCalloutLinePoints(Point, Point, Point).");throw new TypeError("3rd input argument '"+d+"' in function 'setCalloutLinePoints' is of type '"+typeof d+"'. Expected type 'Point'. Function Signature: setCalloutLinePoints(Point, Point, Point).");}if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+
a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setCalloutLinePoints'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");if("undefined"!=typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'setCalloutLinePoints'. Perhaps a yield statement is required for '"+
c.yieldFunction+"'?");if("undefined"!=typeof d.yieldFunction)throw Error("Function '"+d.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 3rd input argument in function 'setCalloutLinePoints'. Perhaps a yield statement is required for '"+d.yieldFunction+"'?");return b.messageHandler.sendWithPromise("FreeTextAnnot.setCalloutLinePoints",{ft:this.id,p1:a,p2:c,p3:d},this.userPriority)};b.FreeTextAnnot.prototype.setCalloutLinePointsTwo=function(a,
c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setCalloutLinePointsTwo'. Expected 2 arguments. Function Signature: setCalloutLinePointsTwo(Point, Point)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setCalloutLinePointsTwo' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Point)&&"Point"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'setCalloutLinePointsTwo' is of type '"+
a.name+"'. Expected type 'Point'. Function Signature: setCalloutLinePointsTwo(Point, Point).");throw new TypeError("1st input argument '"+a+"' in function 'setCalloutLinePointsTwo' is of type '"+typeof a+"'. Expected type 'Point'. Function Signature: setCalloutLinePointsTwo(Point, Point).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setCalloutLinePointsTwo' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Point)&&
"Point"!=c.name){if("object"==typeof c)throw new TypeError("2nd input argument in function 'setCalloutLinePointsTwo' is of type '"+c.name+"'. Expected type 'Point'. Function Signature: setCalloutLinePointsTwo(Point, Point).");throw new TypeError("2nd input argument '"+c+"' in function 'setCalloutLinePointsTwo' is of type '"+typeof c+"'. Expected type 'Point'. Function Signature: setCalloutLinePointsTwo(Point, Point).");}if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+
"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setCalloutLinePointsTwo'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");if("undefined"!=typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'setCalloutLinePointsTwo'. Perhaps a yield statement is required for '"+c.yieldFunction+
"'?");return b.messageHandler.sendWithPromise("FreeTextAnnot.setCalloutLinePointsTwo",{ft:this.id,p1:a,p2:c},this.userPriority)};b.FreeTextAnnot.prototype.getIntentName=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getIntentName'. Expected 0 arguments. Function Signature: getIntentName()");return b.messageHandler.sendWithPromise("FreeTextAnnot.getIntentName",{ft:this.id},this.userPriority)};b.FreeTextAnnot.prototype.setIntentName=function(a){"undefined"===
typeof a&&(a=b.FreeTextAnnot.IntentName.e_FreeText);if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setIntentName'. Expected at most 1 arguments. Function Signature: setIntentName(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setIntentName' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setIntentName' is of type '"+
typeof a+"'. Expected type 'number'. Function Signature: setIntentName(number).");return b.messageHandler.sendWithPromise("FreeTextAnnot.setIntentName",{ft:this.id,mode:a},this.userPriority)};b.FreeTextAnnot.prototype.setIntentNameDefault=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setIntentNameDefault'. Expected 0 arguments. Function Signature: setIntentNameDefault()");return b.messageHandler.sendWithPromise("FreeTextAnnot.setIntentNameDefault",
{ft:this.id},this.userPriority)};b.FreeTextAnnot.prototype.getEndingStyle=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getEndingStyle'. Expected 0 arguments. Function Signature: getEndingStyle()");return b.messageHandler.sendWithPromise("FreeTextAnnot.getEndingStyle",{ft:this.id},this.userPriority)};b.FreeTextAnnot.prototype.setEndingStyle=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setEndingStyle'. Expected 1 argument. Function Signature: setEndingStyle(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setEndingStyle' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setEndingStyle' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setEndingStyle(number).");return b.messageHandler.sendWithPromise("FreeTextAnnot.setEndingStyle",{ft:this.id,style:a},this.userPriority)};b.FreeTextAnnot.prototype.setEndingStyleName=
function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setEndingStyleName'. Expected 1 argument. Function Signature: setEndingStyleName(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setEndingStyleName' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setEndingStyleName' is of type '"+typeof a+
"'. Expected type 'string'. Function Signature: setEndingStyleName(string).");return b.messageHandler.sendWithPromise("FreeTextAnnot.setEndingStyleName",{ft:this.id,est:a},this.userPriority)};b.FreeTextAnnot.prototype.setTextColor=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setTextColor'. Expected 2 arguments. Function Signature: setTextColor(ColorPt, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setTextColor' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.ColorPt)&&"ColorPt"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'setTextColor' is of type '"+a.name+"'. Expected type 'ColorPt'. Function Signature: setTextColor(ColorPt, number).");throw new TypeError("1st input argument '"+a+"' in function 'setTextColor' is of type '"+typeof a+"'. Expected type 'ColorPt'. Function Signature: setTextColor(ColorPt, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setTextColor' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setTextColor' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: setTextColor(ColorPt, number).");if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setTextColor'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("FreeTextAnnot.setTextColor",
{ft:this.id,color:a.id,col_comp:c},this.userPriority)};b.FreeTextAnnot.prototype.getTextColor=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTextColor'. Expected 1 argument. Function Signature: getTextColor(number)");if(a instanceof Promise)throw new TypeError("2nd input argument in function 'getTextColor' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("2nd input argument '"+
a+"' in function 'getTextColor' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getTextColor(number).");var c=this;this.yieldFunction="FreeTextAnnot.getTextColor";return b.messageHandler.sendWithPromise("FreeTextAnnot.getTextColor",{ft:this.id,col_comp:a},this.userPriority).then(function(a){c.yieldFunction=void 0;copyFunc(a.out_color,c)})};b.FreeTextAnnot.prototype.setLineColor=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setLineColor'. Expected 2 arguments. Function Signature: setLineColor(ColorPt, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setLineColor' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.ColorPt)&&"ColorPt"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'setLineColor' is of type '"+a.name+"'. Expected type 'ColorPt'. Function Signature: setLineColor(ColorPt, number).");throw new TypeError("1st input argument '"+a+"' in function 'setLineColor' is of type '"+
typeof a+"'. Expected type 'ColorPt'. Function Signature: setLineColor(ColorPt, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setLineColor' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setLineColor' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: setLineColor(ColorPt, number).");if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+
a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setLineColor'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("FreeTextAnnot.setLineColor",{ft:this.id,color:a.id,col_comp:c},this.userPriority)};b.FreeTextAnnot.prototype.getLineColor=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getLineColor'. Expected 1 argument. Function Signature: getLineColor(number)");
if(a instanceof Promise)throw new TypeError("2nd input argument in function 'getLineColor' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("2nd input argument '"+a+"' in function 'getLineColor' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getLineColor(number).");var c=this;this.yieldFunction="FreeTextAnnot.getLineColor";return b.messageHandler.sendWithPromise("FreeTextAnnot.getLineColor",{ft:this.id,
col_comp:a},this.userPriority).then(function(a){c.yieldFunction=void 0;copyFunc(a.out_color,c)})};b.FreeTextAnnot.prototype.setFontSize=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setFontSize'. Expected 1 argument. Function Signature: setFontSize(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setFontSize' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=
typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setFontSize' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setFontSize(number).");return b.messageHandler.sendWithPromise("FreeTextAnnot.setFontSize",{ft:this.id,font_size:a},this.userPriority)};b.FreeTextAnnot.prototype.getFontSize=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFontSize'. Expected 0 arguments. Function Signature: getFontSize()");
return b.messageHandler.sendWithPromise("FreeTextAnnot.getFontSize",{ft:this.id},this.userPriority)};b.HighlightAnnot.createFromObj=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected 1 argument. Function Signature: createFromObj(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof
b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");}return b.messageHandler.sendWithPromise("highlightAnnotCreateFromObj",{d:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.HighlightAnnot(a)})};
b.HighlightAnnot.createFromAnnot=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromAnnot'. Expected 1 argument. Function Signature: createFromAnnot(Annot)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Annot)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromAnnot' is of type '"+
a.name+"'. Expected type 'Annot'. Function Signature: createFromAnnot(Annot).");throw new TypeError("1st input argument '"+a+"' in function 'createFromAnnot' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: createFromAnnot(Annot).");}return b.messageHandler.sendWithPromise("highlightAnnotCreateFromAnnot",{ann:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.HighlightAnnot(a)})};b.HighlightAnnot.create=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'create'. Expected 2 arguments. Function Signature: create(SDFDoc, Rect)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: create(SDFDoc, Rect).");
throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: create(SDFDoc, Rect).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Rect)&&"Rect"!=c.name){if("object"==typeof c)throw new TypeError("2nd input argument in function 'create' is of type '"+c.name+"'. Expected type 'Rect'. Function Signature: create(SDFDoc, Rect).");
throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: create(SDFDoc, Rect).");}if("undefined"!=typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'create'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("highlightAnnotCreate",
{doc:a.id,pos:c},this.userPriority).then(function(a){return"0"==a?null:new b.HighlightAnnot(a)})};b.InkAnnot.createFromObj=function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected at most 1 arguments. Function Signature: createFromObj(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");}return b.messageHandler.sendWithPromise("inkAnnotCreateFromObj",{d:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.InkAnnot(a)})};
b.InkAnnot.createFromAnnot=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromAnnot'. Expected 1 argument. Function Signature: createFromAnnot(Annot)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Annot)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromAnnot' is of type '"+
a.name+"'. Expected type 'Annot'. Function Signature: createFromAnnot(Annot).");throw new TypeError("1st input argument '"+a+"' in function 'createFromAnnot' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: createFromAnnot(Annot).");}return b.messageHandler.sendWithPromise("inkAnnotCreateFromAnnot",{ann:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.InkAnnot(a)})};b.InkAnnot.create=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 2 arguments. Function Signature: create(SDFDoc, Rect)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: create(SDFDoc, Rect).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+
typeof a+"'. Expected type 'SDFDoc'. Function Signature: create(SDFDoc, Rect).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Rect)&&"Rect"!=c.name){if("object"==typeof c)throw new TypeError("2nd input argument in function 'create' is of type '"+c.name+"'. Expected type 'Rect'. Function Signature: create(SDFDoc, Rect).");throw new TypeError("2nd input argument '"+
c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: create(SDFDoc, Rect).");}if("undefined"!=typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'create'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("inkAnnotCreate",{doc:a.id,pos:c},this.userPriority).then(function(a){return"0"==
a?null:new b.InkAnnot(a)})};b.InkAnnot.prototype.getPathCount=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPathCount'. Expected 0 arguments. Function Signature: getPathCount()");return b.messageHandler.sendWithPromise("InkAnnot.getPathCount",{ink:this.id},this.userPriority)};b.InkAnnot.prototype.getPointCount=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPointCount'. Expected 1 argument. Function Signature: getPointCount(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'getPointCount' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getPointCount' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getPointCount(number).");return b.messageHandler.sendWithPromise("InkAnnot.getPointCount",{ink:this.id,pathindex:a},this.userPriority)};b.InkAnnot.prototype.getPoint=
function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPoint'. Expected 2 arguments. Function Signature: getPoint(number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getPoint' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getPoint' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getPoint(number, number).");
if(c instanceof Promise)throw new TypeError("2nd input argument in function 'getPoint' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'getPoint' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: getPoint(number, number).");return b.messageHandler.sendWithPromise("InkAnnot.getPoint",{ink:this.id,pathindex:a,pointindex:c},this.userPriority)};b.InkAnnot.prototype.setPoint=
function(a,c,d){if(3!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPoint'. Expected 3 arguments. Function Signature: setPoint(number, number, Point)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPoint' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setPoint' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setPoint(number, number, Point).");
if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setPoint' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setPoint' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: setPoint(number, number, Point).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'setPoint' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(d instanceof b.Point)&&"Point"!=d.name){if("object"==typeof d)throw new TypeError("3rd input argument in function 'setPoint' is of type '"+d.name+"'. Expected type 'Point'. Function Signature: setPoint(number, number, Point).");throw new TypeError("3rd input argument '"+d+"' in function 'setPoint' is of type '"+typeof d+"'. Expected type 'Point'. Function Signature: setPoint(number, number, Point).");}if("undefined"!=typeof d.yieldFunction)throw Error("Function '"+d.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 3rd input argument in function 'setPoint'. Perhaps a yield statement is required for '"+
d.yieldFunction+"'?");return b.messageHandler.sendWithPromise("InkAnnot.setPoint",{ink:this.id,pathindex:a,pointindex:c,pt:d},this.userPriority)};b.InkAnnot.prototype.erase=function(a,c,d){if(3!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'erase'. Expected 3 arguments. Function Signature: erase(Point, Point, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'erase' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Point)&&"Point"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'erase' is of type '"+a.name+"'. Expected type 'Point'. Function Signature: erase(Point, Point, number).");throw new TypeError("1st input argument '"+a+"' in function 'erase' is of type '"+typeof a+"'. Expected type 'Point'. Function Signature: erase(Point, Point, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'erase' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.Point)&&"Point"!=c.name){if("object"==typeof c)throw new TypeError("2nd input argument in function 'erase' is of type '"+c.name+"'. Expected type 'Point'. Function Signature: erase(Point, Point, number).");throw new TypeError("2nd input argument '"+c+"' in function 'erase' is of type '"+typeof c+"'. Expected type 'Point'. Function Signature: erase(Point, Point, number).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'erase' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'erase' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: erase(Point, Point, number).");if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'erase'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");if("undefined"!=typeof c.yieldFunction)throw Error("Function '"+
c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'erase'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("InkAnnot.erase",{ink:this.id,pt1:a,pt2:c,width:d},this.userPriority)};b.LinkAnnot.createFromObj=function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected at most 1 arguments. Function Signature: createFromObj(Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");
}return b.messageHandler.sendWithPromise("linkAnnotCreateFromObj",{d:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.LinkAnnot(a)})};b.LinkAnnot.createFromAnnot=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromAnnot'. Expected 1 argument. Function Signature: createFromAnnot(Annot)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Annot)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromAnnot' is of type '"+a.name+"'. Expected type 'Annot'. Function Signature: createFromAnnot(Annot).");throw new TypeError("1st input argument '"+a+"' in function 'createFromAnnot' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: createFromAnnot(Annot).");}return b.messageHandler.sendWithPromise("linkAnnotCreateFromAnnot",{ann:a.id},this.userPriority).then(function(a){return"0"==
a?null:new b.LinkAnnot(a)})};b.LinkAnnot.create=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 2 arguments. Function Signature: create(SDFDoc, Rect)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'create' is of type '"+
a.name+"'. Expected type 'SDFDoc'. Function Signature: create(SDFDoc, Rect).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: create(SDFDoc, Rect).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Rect)&&"Rect"!=c.name){if("object"==typeof c)throw new TypeError("2nd input argument in function 'create' is of type '"+
c.name+"'. Expected type 'Rect'. Function Signature: create(SDFDoc, Rect).");throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: create(SDFDoc, Rect).");}if("undefined"!=typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'create'. Perhaps a yield statement is required for '"+
c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("linkAnnotCreate",{doc:a.id,pos:c},this.userPriority).then(function(a){return"0"==a?null:new b.LinkAnnot(a)})};b.LinkAnnot.prototype.removeAction=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'removeAction'. Expected 0 arguments. Function Signature: removeAction()");return b.messageHandler.sendWithPromise("LinkAnnot.removeAction",{link:this.id},this.userPriority)};b.LinkAnnot.prototype.getAction=
function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getAction'. Expected 0 arguments. Function Signature: getAction()");return b.messageHandler.sendWithPromise("LinkAnnot.getAction",{link:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Action(a)})};b.LinkAnnot.prototype.setAction=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setAction'. Expected 1 argument. Function Signature: setAction(Action)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setAction' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Action)){if("object"==typeof a)throw new TypeError("1st input argument in function 'setAction' is of type '"+a.name+"'. Expected type 'Action'. Function Signature: setAction(Action).");throw new TypeError("1st input argument '"+a+"' in function 'setAction' is of type '"+typeof a+"'. Expected type 'Action'. Function Signature: setAction(Action).");
}return b.messageHandler.sendWithPromise("LinkAnnot.setAction",{link:this.id,action:a.id},this.userPriority)};b.LinkAnnot.prototype.getHighlightingMode=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getHighlightingMode'. Expected 0 arguments. Function Signature: getHighlightingMode()");return b.messageHandler.sendWithPromise("LinkAnnot.getHighlightingMode",{link:this.id},this.userPriority)};b.LinkAnnot.prototype.setHighlightingMode=function(a){if(1!=
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setHighlightingMode'. Expected 1 argument. Function Signature: setHighlightingMode(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setHighlightingMode' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setHighlightingMode' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setHighlightingMode(number).");
return b.messageHandler.sendWithPromise("LinkAnnot.setHighlightingMode",{link:this.id,value:a},this.userPriority)};b.LinkAnnot.prototype.getQuadPointCount=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getQuadPointCount'. Expected 0 arguments. Function Signature: getQuadPointCount()");return b.messageHandler.sendWithPromise("LinkAnnot.getQuadPointCount",{link:this.id},this.userPriority)};b.LinkAnnot.prototype.getQuadPoint=function(a){if(1!=
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getQuadPoint'. Expected 1 argument. Function Signature: getQuadPoint(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getQuadPoint' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getQuadPoint' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getQuadPoint(number).");
return b.messageHandler.sendWithPromise("LinkAnnot.getQuadPoint",{link:this.id,idx:a},this.userPriority)};b.LinkAnnot.prototype.setQuadPoint=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setQuadPoint'. Expected 2 arguments. Function Signature: setQuadPoint(number, QuadPoint)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setQuadPoint' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setQuadPoint' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setQuadPoint(number, QuadPoint).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setQuadPoint' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.QuadPoint)&&"QuadPoint"!=c.name){if("object"==typeof c)throw new TypeError("2nd input argument in function 'setQuadPoint' is of type '"+
c.name+"'. Expected type 'QuadPoint'. Function Signature: setQuadPoint(number, QuadPoint).");throw new TypeError("2nd input argument '"+c+"' in function 'setQuadPoint' is of type '"+typeof c+"'. Expected type 'QuadPoint'. Function Signature: setQuadPoint(number, QuadPoint).");}if("undefined"!=typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'setQuadPoint'. Perhaps a yield statement is required for '"+
c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("LinkAnnot.setQuadPoint",{link:this.id,idx:a,qp:c},this.userPriority)};b.getNormalizedUrl=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getNormalizedUrl'. Expected 1 argument. Function Signature: getNormalizedUrl(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getNormalizedUrl' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getNormalizedUrl' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: getNormalizedUrl(string).");return b.messageHandler.sendWithPromise("getNormalizedUrl",{url:a},this.userPriority)};b.MarkupAnnot.createFromObj=function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected at most 1 arguments. Function Signature: createFromObj(Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");
}return b.messageHandler.sendWithPromise("markupAnnotCreateFromObj",{d:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.MarkupAnnot(a)})};b.MarkupAnnot.createFromAnnot=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromAnnot'. Expected 1 argument. Function Signature: createFromAnnot(Annot)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Annot)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromAnnot' is of type '"+a.name+"'. Expected type 'Annot'. Function Signature: createFromAnnot(Annot).");throw new TypeError("1st input argument '"+a+"' in function 'createFromAnnot' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: createFromAnnot(Annot).");}return b.messageHandler.sendWithPromise("markupAnnotCreateFromAnnot",{ann:a.id},this.userPriority).then(function(a){return"0"==
a?null:new b.MarkupAnnot(a)})};b.MarkupAnnot.prototype.getTitle=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTitle'. Expected 0 arguments. Function Signature: getTitle()");return b.messageHandler.sendWithPromise("MarkupAnnot.getTitle",{markup:this.id},this.userPriority)};b.MarkupAnnot.prototype.setTitle=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setTitle'. Expected 1 argument. Function Signature: setTitle(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setTitle' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setTitle' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setTitle(string).");return b.messageHandler.sendWithPromise("MarkupAnnot.setTitle",{markup:this.id,title:a},this.userPriority)};b.MarkupAnnot.prototype.setTitleUString=
function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setTitleUString'. Expected 1 argument. Function Signature: setTitleUString(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setTitleUString' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setTitleUString' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setTitleUString(string).");
return b.messageHandler.sendWithPromise("MarkupAnnot.setTitleUString",{markup:this.id,title:a},this.userPriority)};b.MarkupAnnot.prototype.getPopup=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPopup'. Expected 0 arguments. Function Signature: getPopup()");return b.messageHandler.sendWithPromise("MarkupAnnot.getPopup",{markup:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Annot(a)})};b.MarkupAnnot.prototype.setPopup=
function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPopup'. Expected 1 argument. Function Signature: setPopup(Annot)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPopup' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Annot)){if("object"==typeof a)throw new TypeError("1st input argument in function 'setPopup' is of type '"+a.name+"'. Expected type 'Annot'. Function Signature: setPopup(Annot).");
throw new TypeError("1st input argument '"+a+"' in function 'setPopup' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: setPopup(Annot).");}return b.messageHandler.sendWithPromise("MarkupAnnot.setPopup",{markup:this.id,ppup:a.id},this.userPriority)};b.MarkupAnnot.prototype.getOpacity=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getOpacity'. Expected 0 arguments. Function Signature: getOpacity()");return b.messageHandler.sendWithPromise("MarkupAnnot.getOpacity",
{markup:this.id},this.userPriority)};b.MarkupAnnot.prototype.setOpacity=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setOpacity'. Expected 1 argument. Function Signature: setOpacity(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setOpacity' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setOpacity' is of type '"+
typeof a+"'. Expected type 'number'. Function Signature: setOpacity(number).");return b.messageHandler.sendWithPromise("MarkupAnnot.setOpacity",{markup:this.id,op:a},this.userPriority)};b.MarkupAnnot.prototype.getSubject=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSubject'. Expected 0 arguments. Function Signature: getSubject()");return b.messageHandler.sendWithPromise("MarkupAnnot.getSubject",{markup:this.id},this.userPriority)};b.MarkupAnnot.prototype.setSubject=
function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setSubject'. Expected 1 argument. Function Signature: setSubject(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setSubject' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setSubject' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setSubject(string).");
return b.messageHandler.sendWithPromise("MarkupAnnot.setSubject",{markup:this.id,contents:a},this.userPriority)};b.MarkupAnnot.prototype.getCreationDates=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getCreationDates'. Expected 0 arguments. Function Signature: getCreationDates()");return b.messageHandler.sendWithPromise("MarkupAnnot.getCreationDates",{markup:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Date(a)})};
b.MarkupAnnot.prototype.getBorderEffect=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getBorderEffect'. Expected 0 arguments. Function Signature: getBorderEffect()");return b.messageHandler.sendWithPromise("MarkupAnnot.getBorderEffect",{markup:this.id},this.userPriority)};b.MarkupAnnot.prototype.setBorderEffect=function(a){"undefined"===typeof a&&(a=b.MarkupAnnot.BorderEffect.e_None);if(1<arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'setBorderEffect'. Expected at most 1 arguments. Function Signature: setBorderEffect(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setBorderEffect' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setBorderEffect' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setBorderEffect(number).");
return b.messageHandler.sendWithPromise("MarkupAnnot.setBorderEffect",{markup:this.id,effect:a},this.userPriority)};b.MarkupAnnot.prototype.getBorderEffectIntensity=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getBorderEffectIntensity'. Expected 0 arguments. Function Signature: getBorderEffectIntensity()");return b.messageHandler.sendWithPromise("MarkupAnnot.getBorderEffectIntensity",{markup:this.id},this.userPriority)};b.MarkupAnnot.prototype.setBorderEffectIntensity=
function(a){"undefined"===typeof a&&(a=0);if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setBorderEffectIntensity'. Expected at most 1 arguments. Function Signature: setBorderEffectIntensity(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setBorderEffectIntensity' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+
"' in function 'setBorderEffectIntensity' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setBorderEffectIntensity(number).");return b.messageHandler.sendWithPromise("MarkupAnnot.setBorderEffectIntensity",{markup:this.id,intensity:a},this.userPriority)};b.MarkupAnnot.prototype.setCreationDates=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setCreationDates'. Expected 1 argument. Function Signature: setCreationDates(Date)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setCreationDates' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Date)&&"Date"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'setCreationDates' is of type '"+a.name+"'. Expected type 'Date'. Function Signature: setCreationDates(Date).");throw new TypeError("1st input argument '"+a+"' in function 'setCreationDates' is of type '"+typeof a+
"'. Expected type 'Date'. Function Signature: setCreationDates(Date).");}if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setCreationDates'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("MarkupAnnot.setCreationDates",{markup:this.id,dt:a},this.userPriority)};b.MarkupAnnot.prototype.getInteriorColor=
function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getInteriorColor'. Expected 0 arguments. Function Signature: getInteriorColor()");return b.messageHandler.sendWithPromise("MarkupAnnot.getInteriorColor",{markup:this.id},this.userPriority).then(function(a){if("0"==a)return null;a=new b.ColorPt(a);createdObjects.push({name:a.name,id:a.id});return a})};b.MarkupAnnot.prototype.getInteriorColorCompNum=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getInteriorColorCompNum'. Expected 0 arguments. Function Signature: getInteriorColorCompNum()");return b.messageHandler.sendWithPromise("MarkupAnnot.getInteriorColorCompNum",{markup:this.id},this.userPriority)};b.MarkupAnnot.prototype.setInteriorColorRGB=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setInteriorColorRGB'. Expected 1 argument. Function Signature: setInteriorColorRGB(ColorPt)");if(a instanceof
Promise)throw new TypeError("1st input argument in function 'setInteriorColorRGB' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.ColorPt)&&"ColorPt"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'setInteriorColorRGB' is of type '"+a.name+"'. Expected type 'ColorPt'. Function Signature: setInteriorColorRGB(ColorPt).");throw new TypeError("1st input argument '"+a+"' in function 'setInteriorColorRGB' is of type '"+
typeof a+"'. Expected type 'ColorPt'. Function Signature: setInteriorColorRGB(ColorPt).");}if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setInteriorColorRGB'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("MarkupAnnot.setInteriorColorRGB",{markup:this.id,col:a.id},this.userPriority)};
b.MarkupAnnot.prototype.setInteriorColor=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setInteriorColor'. Expected 2 arguments. Function Signature: setInteriorColor(ColorPt, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setInteriorColor' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.ColorPt)&&"ColorPt"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'setInteriorColor' is of type '"+
a.name+"'. Expected type 'ColorPt'. Function Signature: setInteriorColor(ColorPt, number).");throw new TypeError("1st input argument '"+a+"' in function 'setInteriorColor' is of type '"+typeof a+"'. Expected type 'ColorPt'. Function Signature: setInteriorColor(ColorPt, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setInteriorColor' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+
c+"' in function 'setInteriorColor' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: setInteriorColor(ColorPt, number).");if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setInteriorColor'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("MarkupAnnot.setInteriorColor",
{markup:this.id,c:a.id,compnum:c},this.userPriority)};b.MarkupAnnot.prototype.getContentRect=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getContentRect'. Expected 0 arguments. Function Signature: getContentRect()");return b.messageHandler.sendWithPromise("MarkupAnnot.getContentRect",{markup:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Rect(a)})};b.MarkupAnnot.prototype.setContentRect=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'setContentRect'. Expected 1 argument. Function Signature: setContentRect(Rect)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setContentRect' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Rect)&&"Rect"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'setContentRect' is of type '"+a.name+"'. Expected type 'Rect'. Function Signature: setContentRect(Rect).");
throw new TypeError("1st input argument '"+a+"' in function 'setContentRect' is of type '"+typeof a+"'. Expected type 'Rect'. Function Signature: setContentRect(Rect).");}if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setContentRect'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("MarkupAnnot.setContentRect",
{markup:this.id,cr:a},this.userPriority)};b.MarkupAnnot.prototype.getPadding=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPadding'. Expected 0 arguments. Function Signature: getPadding()");return b.messageHandler.sendWithPromise("MarkupAnnot.getPadding",{markup:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Rect(a)})};b.MarkupAnnot.prototype.setPadding=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'setPadding'. Expected 1 argument. Function Signature: setPadding(Rect)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPadding' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Rect)&&"Rect"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'setPadding' is of type '"+a.name+"'. Expected type 'Rect'. Function Signature: setPadding(Rect).");throw new TypeError("1st input argument '"+
a+"' in function 'setPadding' is of type '"+typeof a+"'. Expected type 'Rect'. Function Signature: setPadding(Rect).");}if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setPadding'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("MarkupAnnot.setPadding",{markup:this.id,rd:a},this.userPriority)};
b.MovieAnnot.createFromObj=function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected at most 1 arguments. Function Signature: createFromObj(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+
a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");}return b.messageHandler.sendWithPromise("movieAnnotCreateFromObj",{d:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.MovieAnnot(a)})};b.MovieAnnot.createFromAnnot=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromAnnot'. Expected 1 argument. Function Signature: createFromAnnot(Annot)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Annot)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromAnnot' is of type '"+a.name+"'. Expected type 'Annot'. Function Signature: createFromAnnot(Annot).");throw new TypeError("1st input argument '"+a+"' in function 'createFromAnnot' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: createFromAnnot(Annot).");
}return b.messageHandler.sendWithPromise("movieAnnotCreateFromAnnot",{ann:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.MovieAnnot(a)})};b.MovieAnnot.create=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 2 arguments. Function Signature: create(SDFDoc, Rect)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: create(SDFDoc, Rect).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: create(SDFDoc, Rect).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.Rect)&&"Rect"!=c.name){if("object"==typeof c)throw new TypeError("2nd input argument in function 'create' is of type '"+c.name+"'. Expected type 'Rect'. Function Signature: create(SDFDoc, Rect).");throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: create(SDFDoc, Rect).");}if("undefined"!=typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'create'. Perhaps a yield statement is required for '"+
c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("movieAnnotCreate",{doc:a.id,pos:c},this.userPriority).then(function(a){return"0"==a?null:new b.MovieAnnot(a)})};b.MovieAnnot.prototype.getTitle=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTitle'. Expected 0 arguments. Function Signature: getTitle()");return b.messageHandler.sendWithPromise("MovieAnnot.getTitle",{movie:this.id},this.userPriority)};b.MovieAnnot.prototype.setTitle=
function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setTitle'. Expected 1 argument. Function Signature: setTitle(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setTitle' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setTitle' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setTitle(string).");
return b.messageHandler.sendWithPromise("MovieAnnot.setTitle",{movie:this.id,title:a},this.userPriority)};b.MovieAnnot.prototype.isToBePlayed=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isToBePlayed'. Expected 0 arguments. Function Signature: isToBePlayed()");return b.messageHandler.sendWithPromise("MovieAnnot.isToBePlayed",{movie:this.id},this.userPriority)};b.MovieAnnot.prototype.setToBePlayed=function(a){"undefined"===typeof a&&(a=!0);
if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setToBePlayed'. Expected at most 1 arguments. Function Signature: setToBePlayed(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setToBePlayed' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setToBePlayed' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setToBePlayed(boolean).");
return b.messageHandler.sendWithPromise("MovieAnnot.setToBePlayed",{movie:this.id,isplay:a},this.userPriority)};b.PolyLineAnnot.createFromObj=function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected at most 1 arguments. Function Signature: createFromObj(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");}return b.messageHandler.sendWithPromise("polyLineAnnotCreateFromObj",{d:a.id},this.userPriority).then(function(a){return"0"==a?null:
new b.PolyLineAnnot(a)})};b.PolyLineAnnot.createFromAnnot=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromAnnot'. Expected 1 argument. Function Signature: createFromAnnot(Annot)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Annot)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromAnnot' is of type '"+
a.name+"'. Expected type 'Annot'. Function Signature: createFromAnnot(Annot).");throw new TypeError("1st input argument '"+a+"' in function 'createFromAnnot' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: createFromAnnot(Annot).");}return b.messageHandler.sendWithPromise("polyLineAnnotCreateFromAnnot",{ann:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.PolyLineAnnot(a)})};b.PolyLineAnnot.create=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'create'. Expected 2 arguments. Function Signature: create(SDFDoc, Rect)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: create(SDFDoc, Rect).");
throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: create(SDFDoc, Rect).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Rect)&&"Rect"!=c.name){if("object"==typeof c)throw new TypeError("2nd input argument in function 'create' is of type '"+c.name+"'. Expected type 'Rect'. Function Signature: create(SDFDoc, Rect).");
throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: create(SDFDoc, Rect).");}if("undefined"!=typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'create'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("polyLineAnnotCreate",
{doc:a.id,pos:c},this.userPriority).then(function(a){return"0"==a?null:new b.PolyLineAnnot(a)})};b.PolyLineAnnot.prototype.getVertexCount=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getVertexCount'. Expected 0 arguments. Function Signature: getVertexCount()");return b.messageHandler.sendWithPromise("PolyLineAnnot.getVertexCount",{polyline:this.id},this.userPriority)};b.PolyLineAnnot.prototype.getVertex=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getVertex'. Expected 1 argument. Function Signature: getVertex(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getVertex' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getVertex' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getVertex(number).");return b.messageHandler.sendWithPromise("PolyLineAnnot.getVertex",
{polyline:this.id,idx:a},this.userPriority)};b.PolyLineAnnot.prototype.setVertex=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setVertex'. Expected 2 arguments. Function Signature: setVertex(number, Point)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setVertex' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'setVertex' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setVertex(number, Point).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setVertex' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Point)&&"Point"!=c.name){if("object"==typeof c)throw new TypeError("2nd input argument in function 'setVertex' is of type '"+c.name+"'. Expected type 'Point'. Function Signature: setVertex(number, Point).");
throw new TypeError("2nd input argument '"+c+"' in function 'setVertex' is of type '"+typeof c+"'. Expected type 'Point'. Function Signature: setVertex(number, Point).");}if("undefined"!=typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'setVertex'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("PolyLineAnnot.setVertex",
{polyline:this.id,idx:a,pt:c},this.userPriority)};b.PolyLineAnnot.prototype.getStartStyle=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getStartStyle'. Expected 0 arguments. Function Signature: getStartStyle()");return b.messageHandler.sendWithPromise("PolyLineAnnot.getStartStyle",{polyline:this.id},this.userPriority)};b.PolyLineAnnot.prototype.setStartStyle=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setStartStyle'. Expected 1 argument. Function Signature: setStartStyle(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setStartStyle' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setStartStyle' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setStartStyle(number).");return b.messageHandler.sendWithPromise("PolyLineAnnot.setStartStyle",{polyline:this.id,style:a},this.userPriority)};b.PolyLineAnnot.prototype.getEndStyle=
function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getEndStyle'. Expected 0 arguments. Function Signature: getEndStyle()");return b.messageHandler.sendWithPromise("PolyLineAnnot.getEndStyle",{polyline:this.id},this.userPriority)};b.PolyLineAnnot.prototype.setEndStyle=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setEndStyle'. Expected 1 argument. Function Signature: setEndStyle(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setEndStyle' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setEndStyle' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setEndStyle(number).");return b.messageHandler.sendWithPromise("PolyLineAnnot.setEndStyle",{polyline:this.id,style:a},this.userPriority)};b.PolyLineAnnot.prototype.getIntentName=
function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getIntentName'. Expected 0 arguments. Function Signature: getIntentName()");return b.messageHandler.sendWithPromise("PolyLineAnnot.getIntentName",{polyline:this.id},this.userPriority)};b.PolyLineAnnot.prototype.setIntentName=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setIntentName'. Expected 1 argument. Function Signature: setIntentName(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setIntentName' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setIntentName' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setIntentName(number).");return b.messageHandler.sendWithPromise("PolyLineAnnot.setIntentName",{polyline:this.id,mode:a},this.userPriority)};b.PolygonAnnot.createFromObj=
function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected at most 1 arguments. Function Signature: createFromObj(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+
a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");}return b.messageHandler.sendWithPromise("polygonAnnotCreateFromObj",{d:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.PolygonAnnot(a)})};b.PolygonAnnot.createFromAnnot=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'createFromAnnot'. Expected 1 argument. Function Signature: createFromAnnot(Annot)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Annot)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromAnnot' is of type '"+a.name+"'. Expected type 'Annot'. Function Signature: createFromAnnot(Annot).");
throw new TypeError("1st input argument '"+a+"' in function 'createFromAnnot' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: createFromAnnot(Annot).");}return b.messageHandler.sendWithPromise("polygonAnnotCreateFromAnnot",{ann:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.PolygonAnnot(a)})};b.PolygonAnnot.create=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 2 arguments. Function Signature: create(SDFDoc, Rect)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: create(SDFDoc, Rect).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+
typeof a+"'. Expected type 'SDFDoc'. Function Signature: create(SDFDoc, Rect).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Rect)&&"Rect"!=c.name){if("object"==typeof c)throw new TypeError("2nd input argument in function 'create' is of type '"+c.name+"'. Expected type 'Rect'. Function Signature: create(SDFDoc, Rect).");throw new TypeError("2nd input argument '"+
c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: create(SDFDoc, Rect).");}if("undefined"!=typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'create'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("polygonAnnotCreate",{doc:a.id,pos:c},this.userPriority).then(function(a){return"0"==
a?null:new b.PolygonAnnot(a)})};b.PopupAnnot.createFromObj=function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected at most 1 arguments. Function Signature: createFromObj(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==
typeof a)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");}return b.messageHandler.sendWithPromise("popupAnnotCreateFromObj",{d:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.PopupAnnot(a)})};b.PopupAnnot.createFromAnnot=
function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromAnnot'. Expected 1 argument. Function Signature: createFromAnnot(Annot)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Annot)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromAnnot' is of type '"+
a.name+"'. Expected type 'Annot'. Function Signature: createFromAnnot(Annot).");throw new TypeError("1st input argument '"+a+"' in function 'createFromAnnot' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: createFromAnnot(Annot).");}return b.messageHandler.sendWithPromise("popupAnnotCreateFromAnnot",{ann:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.PopupAnnot(a)})};b.PopupAnnot.create=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'create'. Expected 2 arguments. Function Signature: create(SDFDoc, Rect)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: create(SDFDoc, Rect).");
throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: create(SDFDoc, Rect).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Rect)&&"Rect"!=c.name){if("object"==typeof c)throw new TypeError("2nd input argument in function 'create' is of type '"+c.name+"'. Expected type 'Rect'. Function Signature: create(SDFDoc, Rect).");
throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: create(SDFDoc, Rect).");}if("undefined"!=typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'create'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("popupAnnotCreate",
{doc:a.id,pos:c},this.userPriority).then(function(a){return"0"==a?null:new b.PopupAnnot(a)})};b.PopupAnnot.prototype.getParent=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getParent'. Expected 0 arguments. Function Signature: getParent()");return b.messageHandler.sendWithPromise("PopupAnnot.getParent",{popup:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Annot(a)})};b.PopupAnnot.prototype.setParent=function(a){if(1!=
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setParent'. Expected 1 argument. Function Signature: setParent(Annot)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setParent' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Annot)){if("object"==typeof a)throw new TypeError("1st input argument in function 'setParent' is of type '"+a.name+"'. Expected type 'Annot'. Function Signature: setParent(Annot).");
throw new TypeError("1st input argument '"+a+"' in function 'setParent' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: setParent(Annot).");}return b.messageHandler.sendWithPromise("PopupAnnot.setParent",{popup:this.id,parent:a.id},this.userPriority)};b.PopupAnnot.prototype.isOpen=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isOpen'. Expected 0 arguments. Function Signature: isOpen()");return b.messageHandler.sendWithPromise("PopupAnnot.isOpen",
{popup:this.id},this.userPriority)};b.PopupAnnot.prototype.setOpen=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setOpen'. Expected 1 argument. Function Signature: setOpen(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setOpen' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setOpen' is of type '"+
typeof a+"'. Expected type 'boolean'. Function Signature: setOpen(boolean).");return b.messageHandler.sendWithPromise("PopupAnnot.setOpen",{popup:this.id,isopen:a},this.userPriority)};b.RedactionAnnot.createFromObj=function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected at most 1 arguments. Function Signature: createFromObj(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");}return b.messageHandler.sendWithPromise("redactionAnnotCreateFromObj",{d:a.id},this.userPriority).then(function(a){return"0"==a?null:
new b.RedactionAnnot(a)})};b.RedactionAnnot.createFromAnnot=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromAnnot'. Expected 1 argument. Function Signature: createFromAnnot(Annot)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Annot)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromAnnot' is of type '"+
a.name+"'. Expected type 'Annot'. Function Signature: createFromAnnot(Annot).");throw new TypeError("1st input argument '"+a+"' in function 'createFromAnnot' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: createFromAnnot(Annot).");}return b.messageHandler.sendWithPromise("redactionAnnotCreateFromAnnot",{ann:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.RedactionAnnot(a)})};b.RedactionAnnot.create=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'create'. Expected 2 arguments. Function Signature: create(SDFDoc, Rect)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: create(SDFDoc, Rect).");
throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: create(SDFDoc, Rect).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Rect)&&"Rect"!=c.name){if("object"==typeof c)throw new TypeError("2nd input argument in function 'create' is of type '"+c.name+"'. Expected type 'Rect'. Function Signature: create(SDFDoc, Rect).");
throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: create(SDFDoc, Rect).");}if("undefined"!=typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'create'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("redactionAnnotCreate",
{doc:a.id,pos:c},this.userPriority).then(function(a){return"0"==a?null:new b.RedactionAnnot(a)})};b.RedactionAnnot.prototype.getQuadPointCount=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getQuadPointCount'. Expected 0 arguments. Function Signature: getQuadPointCount()");return b.messageHandler.sendWithPromise("RedactionAnnot.getQuadPointCount",{redaction:this.id},this.userPriority)};b.RedactionAnnot.prototype.getQuadPoint=function(a){if(1!=
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getQuadPoint'. Expected 1 argument. Function Signature: getQuadPoint(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getQuadPoint' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getQuadPoint' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getQuadPoint(number).");
return b.messageHandler.sendWithPromise("RedactionAnnot.getQuadPoint",{redaction:this.id,idx:a},this.userPriority)};b.RedactionAnnot.prototype.setQuadPoint=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setQuadPoint'. Expected 2 arguments. Function Signature: setQuadPoint(number, QuadPoint)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setQuadPoint' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setQuadPoint' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setQuadPoint(number, QuadPoint).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setQuadPoint' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.QuadPoint)&&"QuadPoint"!=c.name){if("object"==typeof c)throw new TypeError("2nd input argument in function 'setQuadPoint' is of type '"+
c.name+"'. Expected type 'QuadPoint'. Function Signature: setQuadPoint(number, QuadPoint).");throw new TypeError("2nd input argument '"+c+"' in function 'setQuadPoint' is of type '"+typeof c+"'. Expected type 'QuadPoint'. Function Signature: setQuadPoint(number, QuadPoint).");}if("undefined"!=typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'setQuadPoint'. Perhaps a yield statement is required for '"+
c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("RedactionAnnot.setQuadPoint",{redaction:this.id,idx:a,qp:c},this.userPriority)};b.RedactionAnnot.prototype.setAppFormXO=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setAppFormXO'. Expected 1 argument. Function Signature: setAppFormXO(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setAppFormXO' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'setAppFormXO' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: setAppFormXO(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'setAppFormXO' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: setAppFormXO(Obj).");}return b.messageHandler.sendWithPromise("RedactionAnnot.setAppFormXO",{redaction:this.id,formxo:a.id},this.userPriority)};b.RedactionAnnot.prototype.getOverlayText=
function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getOverlayText'. Expected 0 arguments. Function Signature: getOverlayText()");return b.messageHandler.sendWithPromise("RedactionAnnot.getOverlayText",{redaction:this.id},this.userPriority)};b.RedactionAnnot.prototype.setOverlayText=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setOverlayText'. Expected 1 argument. Function Signature: setOverlayText(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setOverlayText' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setOverlayText' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setOverlayText(string).");return b.messageHandler.sendWithPromise("RedactionAnnot.setOverlayText",{redaction:this.id,title:a},this.userPriority)};b.RedactionAnnot.prototype.getUseRepeat=
function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getUseRepeat'. Expected 0 arguments. Function Signature: getUseRepeat()");return b.messageHandler.sendWithPromise("RedactionAnnot.getUseRepeat",{redaction:this.id},this.userPriority)};b.RedactionAnnot.prototype.setUseRepeat=function(a){"undefined"===typeof a&&(a=!1);if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setUseRepeat'. Expected at most 1 arguments. Function Signature: setUseRepeat(boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setUseRepeat' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setUseRepeat' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setUseRepeat(boolean).");return b.messageHandler.sendWithPromise("RedactionAnnot.setUseRepeat",{redaction:this.id,userepeat:a},this.userPriority)};b.RedactionAnnot.prototype.getOverlayTextAppearance=
function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getOverlayTextAppearance'. Expected 0 arguments. Function Signature: getOverlayTextAppearance()");return b.messageHandler.sendWithPromise("RedactionAnnot.getOverlayTextAppearance",{redaction:this.id},this.userPriority)};b.RedactionAnnot.prototype.setOverlayTextAppearance=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setOverlayTextAppearance'. Expected 1 argument. Function Signature: setOverlayTextAppearance(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setOverlayTextAppearance' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setOverlayTextAppearance' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setOverlayTextAppearance(string).");return b.messageHandler.sendWithPromise("RedactionAnnot.setOverlayTextAppearance",{redaction:this.id,
app:a},this.userPriority)};b.RedactionAnnot.prototype.getQuadForm=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getQuadForm'. Expected 0 arguments. Function Signature: getQuadForm()");return b.messageHandler.sendWithPromise("RedactionAnnot.getQuadForm",{redaction:this.id},this.userPriority)};b.RedactionAnnot.prototype.setQuadForm=function(a){"undefined"===typeof a&&(a=b.RedactionAnnot.QuadForm.e_LeftJustified);if(1<arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'setQuadForm'. Expected at most 1 arguments. Function Signature: setQuadForm(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setQuadForm' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setQuadForm' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setQuadForm(number).");return b.messageHandler.sendWithPromise("RedactionAnnot.setQuadForm",
{redaction:this.id,form:a},this.userPriority)};b.RedactionAnnot.prototype.getAppFormXO=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getAppFormXO'. Expected 0 arguments. Function Signature: getAppFormXO()");return b.messageHandler.sendWithPromise("RedactionAnnot.getAppFormXO",{redaction:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.RubberStampAnnot.createFromObj=function(a){"undefined"===typeof a&&(a=new b.Obj("0"));
if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected at most 1 arguments. Function Signature: createFromObj(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");
throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");}return b.messageHandler.sendWithPromise("rubberStampAnnotCreateFromObj",{d:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.RubberStampAnnot(a)})};b.RubberStampAnnot.createFromAnnot=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromAnnot'. Expected 1 argument. Function Signature: createFromAnnot(Annot)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Annot)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromAnnot' is of type '"+a.name+"'. Expected type 'Annot'. Function Signature: createFromAnnot(Annot).");throw new TypeError("1st input argument '"+a+"' in function 'createFromAnnot' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: createFromAnnot(Annot).");
}return b.messageHandler.sendWithPromise("rubberStampAnnotCreateFromAnnot",{ann:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.RubberStampAnnot(a)})};b.RubberStampAnnot.create=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 2 arguments. Function Signature: create(SDFDoc, Rect)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: create(SDFDoc, Rect).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: create(SDFDoc, Rect).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.Rect)&&"Rect"!=c.name){if("object"==typeof c)throw new TypeError("2nd input argument in function 'create' is of type '"+c.name+"'. Expected type 'Rect'. Function Signature: create(SDFDoc, Rect).");throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: create(SDFDoc, Rect).");}if("undefined"!=typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'create'. Perhaps a yield statement is required for '"+
c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("rubberStampAnnotCreate",{doc:a.id,pos:c},this.userPriority).then(function(a){return"0"==a?null:new b.RubberStampAnnot(a)})};b.RubberStampAnnot.prototype.getIcon=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getIcon'. Expected 0 arguments. Function Signature: getIcon()");return b.messageHandler.sendWithPromise("RubberStampAnnot.getIcon",{stamp:this.id},this.userPriority)};b.RubberStampAnnot.prototype.setIcon=
function(a){"undefined"===typeof a&&(a=b.RubberStampAnnot.Icon.e_Draft);if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setIcon'. Expected at most 1 arguments. Function Signature: setIcon(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setIcon' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setIcon' is of type '"+
typeof a+"'. Expected type 'number'. Function Signature: setIcon(number).");return b.messageHandler.sendWithPromise("RubberStampAnnot.setIcon",{stamp:this.id,type:a},this.userPriority)};b.RubberStampAnnot.prototype.setIconDefault=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setIconDefault'. Expected 0 arguments. Function Signature: setIconDefault()");return b.messageHandler.sendWithPromise("RubberStampAnnot.setIconDefault",{stamp:this.id},
this.userPriority)};b.RubberStampAnnot.prototype.getIconName=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getIconName'. Expected 0 arguments. Function Signature: getIconName()");return b.messageHandler.sendWithPromise("RubberStampAnnot.getIconName",{stamp:this.id},this.userPriority)};b.RubberStampAnnot.prototype.setIconName=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setIconName'. Expected 1 argument. Function Signature: setIconName(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setIconName' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setIconName' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setIconName(string).");return b.messageHandler.sendWithPromise("RubberStampAnnot.setIconName",{stamp:this.id,iconstring:a},this.userPriority)};b.ScreenAnnot.createFromObj=
function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected at most 1 arguments. Function Signature: createFromObj(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+
a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");}return b.messageHandler.sendWithPromise("screenAnnotCreateFromObj",{d:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.ScreenAnnot(a)})};b.ScreenAnnot.createFromAnnot=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromAnnot'. Expected 1 argument. Function Signature: createFromAnnot(Annot)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Annot)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromAnnot' is of type '"+a.name+"'. Expected type 'Annot'. Function Signature: createFromAnnot(Annot).");throw new TypeError("1st input argument '"+a+"' in function 'createFromAnnot' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: createFromAnnot(Annot).");
}return b.messageHandler.sendWithPromise("screenAnnotCreateFromAnnot",{ann:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.ScreenAnnot(a)})};b.ScreenAnnot.prototype.getTitle=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTitle'. Expected 0 arguments. Function Signature: getTitle()");return b.messageHandler.sendWithPromise("ScreenAnnot.getTitle",{s:this.id},this.userPriority)};b.ScreenAnnot.prototype.setTitle=function(a){if(1!=
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setTitle'. Expected 1 argument. Function Signature: setTitle(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setTitle' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setTitle' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setTitle(string).");
return b.messageHandler.sendWithPromise("ScreenAnnot.setTitle",{s:this.id,title:a},this.userPriority)};b.ScreenAnnot.create=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 2 arguments. Function Signature: create(SDFDoc, Rect)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||
a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: create(SDFDoc, Rect).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: create(SDFDoc, Rect).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.Rect)&&"Rect"!=c.name){if("object"==typeof c)throw new TypeError("2nd input argument in function 'create' is of type '"+c.name+"'. Expected type 'Rect'. Function Signature: create(SDFDoc, Rect).");throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: create(SDFDoc, Rect).");}if("undefined"!=typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'create'. Perhaps a yield statement is required for '"+
c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("screenAnnotCreate",{doc:a.id,pos:c},this.userPriority).then(function(a){return"0"==a?null:new b.ScreenAnnot(a)})};b.ScreenAnnot.prototype.getAction=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getAction'. Expected 0 arguments. Function Signature: getAction()");return b.messageHandler.sendWithPromise("ScreenAnnot.getAction",{s:this.id},this.userPriority).then(function(a){return"0"==
a?null:new b.Action(a)})};b.ScreenAnnot.prototype.setAction=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setAction'. Expected 1 argument. Function Signature: setAction(Action)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setAction' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Action)){if("object"==typeof a)throw new TypeError("1st input argument in function 'setAction' is of type '"+
a.name+"'. Expected type 'Action'. Function Signature: setAction(Action).");throw new TypeError("1st input argument '"+a+"' in function 'setAction' is of type '"+typeof a+"'. Expected type 'Action'. Function Signature: setAction(Action).");}return b.messageHandler.sendWithPromise("ScreenAnnot.setAction",{s:this.id,action:a.id},this.userPriority)};b.ScreenAnnot.prototype.getBorderColor=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getBorderColor'. Expected 0 arguments. Function Signature: getBorderColor()");
return b.messageHandler.sendWithPromise("ScreenAnnot.getBorderColor",{s:this.id},this.userPriority).then(function(a){if("0"==a)return null;a=new b.ColorPt(a);createdObjects.push({name:a.name,id:a.id});return a})};b.ScreenAnnot.prototype.setBorderColor=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setBorderColor'. Expected 2 arguments. Function Signature: setBorderColor(ColorPt, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setBorderColor' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.ColorPt)&&"ColorPt"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'setBorderColor' is of type '"+a.name+"'. Expected type 'ColorPt'. Function Signature: setBorderColor(ColorPt, number).");throw new TypeError("1st input argument '"+a+"' in function 'setBorderColor' is of type '"+typeof a+"'. Expected type 'ColorPt'. Function Signature: setBorderColor(ColorPt, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setBorderColor' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setBorderColor' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: setBorderColor(ColorPt, number).");if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setBorderColor'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("ScreenAnnot.setBorderColor",
{s:this.id,col:a.id,numcomp:c},this.userPriority)};b.ScreenAnnot.prototype.getBorderColorCompNum=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getBorderColorCompNum'. Expected 0 arguments. Function Signature: getBorderColorCompNum()");return b.messageHandler.sendWithPromise("ScreenAnnot.getBorderColorCompNum",{s:this.id},this.userPriority)};b.ScreenAnnot.prototype.getBackgroundColorCompNum=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getBackgroundColorCompNum'. Expected 0 arguments. Function Signature: getBackgroundColorCompNum()");return b.messageHandler.sendWithPromise("ScreenAnnot.getBackgroundColorCompNum",{s:this.id},this.userPriority)};b.ScreenAnnot.prototype.getBackgroundColor=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getBackgroundColor'. Expected 0 arguments. Function Signature: getBackgroundColor()");return b.messageHandler.sendWithPromise("ScreenAnnot.getBackgroundColor",
{s:this.id},this.userPriority).then(function(a){if("0"==a)return null;a=new b.ColorPt(a);createdObjects.push({name:a.name,id:a.id});return a})};b.ScreenAnnot.prototype.setBackgroundColor=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setBackgroundColor'. Expected 2 arguments. Function Signature: setBackgroundColor(ColorPt, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setBackgroundColor' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.ColorPt)&&"ColorPt"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'setBackgroundColor' is of type '"+a.name+"'. Expected type 'ColorPt'. Function Signature: setBackgroundColor(ColorPt, number).");throw new TypeError("1st input argument '"+a+"' in function 'setBackgroundColor' is of type '"+typeof a+"'. Expected type 'ColorPt'. Function Signature: setBackgroundColor(ColorPt, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setBackgroundColor' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setBackgroundColor' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: setBackgroundColor(ColorPt, number).");if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setBackgroundColor'. Perhaps a yield statement is required for '"+a.yieldFunction+
"'?");return b.messageHandler.sendWithPromise("ScreenAnnot.setBackgroundColor",{s:this.id,col:a.id,numcomp:c},this.userPriority)};b.ScreenAnnot.prototype.getStaticCaptionText=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getStaticCaptionText'. Expected 0 arguments. Function Signature: getStaticCaptionText()");return b.messageHandler.sendWithPromise("ScreenAnnot.getStaticCaptionText",{s:this.id},this.userPriority)};b.ScreenAnnot.prototype.setStaticCaptionText=
function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setStaticCaptionText'. Expected 1 argument. Function Signature: setStaticCaptionText(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setStaticCaptionText' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setStaticCaptionText' is of type '"+
typeof a+"'. Expected type 'string'. Function Signature: setStaticCaptionText(string).");return b.messageHandler.sendWithPromise("ScreenAnnot.setStaticCaptionText",{s:this.id,contents:a},this.userPriority)};b.ScreenAnnot.prototype.getRolloverCaptionText=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getRolloverCaptionText'. Expected 0 arguments. Function Signature: getRolloverCaptionText()");return b.messageHandler.sendWithPromise("ScreenAnnot.getRolloverCaptionText",
{s:this.id},this.userPriority)};b.ScreenAnnot.prototype.setRolloverCaptionText=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setRolloverCaptionText'. Expected 1 argument. Function Signature: setRolloverCaptionText(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setRolloverCaptionText' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'setRolloverCaptionText' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setRolloverCaptionText(string).");return b.messageHandler.sendWithPromise("ScreenAnnot.setRolloverCaptionText",{s:this.id,contents:a},this.userPriority)};b.ScreenAnnot.prototype.getMouseDownCaptionText=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getMouseDownCaptionText'. Expected 0 arguments. Function Signature: getMouseDownCaptionText()");
return b.messageHandler.sendWithPromise("ScreenAnnot.getMouseDownCaptionText",{s:this.id},this.userPriority)};b.ScreenAnnot.prototype.setMouseDownCaptionText=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setMouseDownCaptionText'. Expected 1 argument. Function Signature: setMouseDownCaptionText(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setMouseDownCaptionText' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setMouseDownCaptionText' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setMouseDownCaptionText(string).");return b.messageHandler.sendWithPromise("ScreenAnnot.setMouseDownCaptionText",{s:this.id,contents:a},this.userPriority)};b.ScreenAnnot.prototype.getStaticIcon=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getStaticIcon'. Expected 0 arguments. Function Signature: getStaticIcon()");
return b.messageHandler.sendWithPromise("ScreenAnnot.getStaticIcon",{s:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.ScreenAnnot.prototype.setStaticIcon=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setStaticIcon'. Expected 1 argument. Function Signature: setStaticIcon(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setStaticIcon' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'setStaticIcon' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: setStaticIcon(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'setStaticIcon' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: setStaticIcon(Obj).");}return b.messageHandler.sendWithPromise("ScreenAnnot.setStaticIcon",{s:this.id,icon:a.id},this.userPriority)};b.ScreenAnnot.prototype.getRolloverIcon=
function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getRolloverIcon'. Expected 0 arguments. Function Signature: getRolloverIcon()");return b.messageHandler.sendWithPromise("ScreenAnnot.getRolloverIcon",{s:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.ScreenAnnot.prototype.setRolloverIcon=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setRolloverIcon'. Expected 1 argument. Function Signature: setRolloverIcon(Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setRolloverIcon' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'setRolloverIcon' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: setRolloverIcon(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'setRolloverIcon' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: setRolloverIcon(Obj).");
}return b.messageHandler.sendWithPromise("ScreenAnnot.setRolloverIcon",{s:this.id,icon:a.id},this.userPriority)};b.ScreenAnnot.prototype.getMouseDownIcon=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getMouseDownIcon'. Expected 0 arguments. Function Signature: getMouseDownIcon()");return b.messageHandler.sendWithPromise("ScreenAnnot.getMouseDownIcon",{s:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.ScreenAnnot.prototype.setMouseDownIcon=
function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setMouseDownIcon'. Expected 1 argument. Function Signature: setMouseDownIcon(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setMouseDownIcon' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'setMouseDownIcon' is of type '"+
a.name+"'. Expected type 'Obj'. Function Signature: setMouseDownIcon(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'setMouseDownIcon' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: setMouseDownIcon(Obj).");}return b.messageHandler.sendWithPromise("ScreenAnnot.setMouseDownIcon",{s:this.id,icon:a.id},this.userPriority)};b.ScreenAnnot.prototype.getScaleType=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getScaleType'. Expected 0 arguments. Function Signature: getScaleType()");
return b.messageHandler.sendWithPromise("ScreenAnnot.getScaleType",{s:this.id},this.userPriority)};b.ScreenAnnot.prototype.setScaleType=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setScaleType'. Expected 1 argument. Function Signature: setScaleType(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setScaleType' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=
typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setScaleType' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setScaleType(number).");return b.messageHandler.sendWithPromise("ScreenAnnot.setScaleType",{s:this.id,st:a},this.userPriority)};b.ScreenAnnot.prototype.getIconCaptionRelation=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getIconCaptionRelation'. Expected 0 arguments. Function Signature: getIconCaptionRelation()");
return b.messageHandler.sendWithPromise("ScreenAnnot.getIconCaptionRelation",{s:this.id},this.userPriority)};b.ScreenAnnot.prototype.setIconCaptionRelation=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setIconCaptionRelation'. Expected 1 argument. Function Signature: setIconCaptionRelation(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setIconCaptionRelation' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setIconCaptionRelation' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setIconCaptionRelation(number).");return b.messageHandler.sendWithPromise("ScreenAnnot.setIconCaptionRelation",{s:this.id,icr:a},this.userPriority)};b.ScreenAnnot.prototype.getScaleCondition=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getScaleCondition'. Expected 0 arguments. Function Signature: getScaleCondition()");
return b.messageHandler.sendWithPromise("ScreenAnnot.getScaleCondition",{s:this.id},this.userPriority)};b.ScreenAnnot.prototype.setScaleCondition=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setScaleCondition'. Expected 1 argument. Function Signature: setScaleCondition(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setScaleCondition' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setScaleCondition' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setScaleCondition(number).");return b.messageHandler.sendWithPromise("ScreenAnnot.setScaleCondition",{s:this.id,sc:a},this.userPriority)};b.ScreenAnnot.prototype.getFitFull=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFitFull'. Expected 0 arguments. Function Signature: getFitFull()");
return b.messageHandler.sendWithPromise("ScreenAnnot.getFitFull",{s:this.id},this.userPriority)};b.ScreenAnnot.prototype.setFitFull=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setFitFull'. Expected 1 argument. Function Signature: setFitFull(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setFitFull' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=
typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setFitFull' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setFitFull(boolean).");return b.messageHandler.sendWithPromise("ScreenAnnot.setFitFull",{s:this.id,ff:a},this.userPriority)};b.ScreenAnnot.prototype.getHIconLeftOver=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getHIconLeftOver'. Expected 0 arguments. Function Signature: getHIconLeftOver()");
return b.messageHandler.sendWithPromise("ScreenAnnot.getHIconLeftOver",{s:this.id},this.userPriority)};b.ScreenAnnot.prototype.setHIconLeftOver=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setHIconLeftOver'. Expected 1 argument. Function Signature: setHIconLeftOver(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setHIconLeftOver' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setHIconLeftOver' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setHIconLeftOver(number).");return b.messageHandler.sendWithPromise("ScreenAnnot.setHIconLeftOver",{s:this.id,hl:a},this.userPriority)};b.ScreenAnnot.prototype.getVIconLeftOver=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getVIconLeftOver'. Expected 0 arguments. Function Signature: getVIconLeftOver()");
return b.messageHandler.sendWithPromise("ScreenAnnot.getVIconLeftOver",{s:this.id},this.userPriority)};b.ScreenAnnot.prototype.setVIconLeftOver=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setVIconLeftOver'. Expected 1 argument. Function Signature: setVIconLeftOver(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setVIconLeftOver' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setVIconLeftOver' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setVIconLeftOver(number).");return b.messageHandler.sendWithPromise("ScreenAnnot.setVIconLeftOver",{s:this.id,vl:a},this.userPriority)};b.SoundAnnot.createFromObj=function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected at most 1 arguments. Function Signature: createFromObj(Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");
}return b.messageHandler.sendWithPromise("soundAnnotCreateFromObj",{d:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.SoundAnnot(a)})};b.SoundAnnot.createFromAnnot=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromAnnot'. Expected 1 argument. Function Signature: createFromAnnot(Annot)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Annot)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromAnnot' is of type '"+a.name+"'. Expected type 'Annot'. Function Signature: createFromAnnot(Annot).");throw new TypeError("1st input argument '"+a+"' in function 'createFromAnnot' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: createFromAnnot(Annot).");}return b.messageHandler.sendWithPromise("soundAnnotCreateFromAnnot",{ann:a.id},this.userPriority).then(function(a){return"0"==
a?null:new b.SoundAnnot(a)})};b.SoundAnnot.create=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 2 arguments. Function Signature: create(SDFDoc, Rect)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'create' is of type '"+
a.name+"'. Expected type 'SDFDoc'. Function Signature: create(SDFDoc, Rect).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: create(SDFDoc, Rect).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Rect)&&"Rect"!=c.name){if("object"==typeof c)throw new TypeError("2nd input argument in function 'create' is of type '"+
c.name+"'. Expected type 'Rect'. Function Signature: create(SDFDoc, Rect).");throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: create(SDFDoc, Rect).");}if("undefined"!=typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'create'. Perhaps a yield statement is required for '"+
c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("soundAnnotCreate",{doc:a.id,pos:c},this.userPriority).then(function(a){return"0"==a?null:new b.SoundAnnot(a)})};b.SoundAnnot.createAtPoint=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createAtPoint'. Expected 2 arguments. Function Signature: createAtPoint(SDFDoc, Point)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createAtPoint' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createAtPoint' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: createAtPoint(SDFDoc, Point).");throw new TypeError("1st input argument '"+a+"' in function 'createAtPoint' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: createAtPoint(SDFDoc, Point).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createAtPoint' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.Point)&&"Point"!=c.name){if("object"==typeof c)throw new TypeError("2nd input argument in function 'createAtPoint' is of type '"+c.name+"'. Expected type 'Point'. Function Signature: createAtPoint(SDFDoc, Point).");throw new TypeError("2nd input argument '"+c+"' in function 'createAtPoint' is of type '"+typeof c+"'. Expected type 'Point'. Function Signature: createAtPoint(SDFDoc, Point).");}if("undefined"!=typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'createAtPoint'. Perhaps a yield statement is required for '"+
c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("soundAnnotCreateAtPoint",{doc:a.id,pos:c},this.userPriority).then(function(a){return"0"==a?null:new b.SoundAnnot(a)})};b.SoundAnnot.prototype.getSoundStream=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSoundStream'. Expected 0 arguments. Function Signature: getSoundStream()");return b.messageHandler.sendWithPromise("SoundAnnot.getSoundStream",{sound:this.id},this.userPriority).then(function(a){return"0"==
a?null:new b.Obj(a)})};b.SoundAnnot.prototype.setSoundStream=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setSoundStream'. Expected 1 argument. Function Signature: setSoundStream(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setSoundStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'setSoundStream' is of type '"+
a.name+"'. Expected type 'Obj'. Function Signature: setSoundStream(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'setSoundStream' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: setSoundStream(Obj).");}return b.messageHandler.sendWithPromise("SoundAnnot.setSoundStream",{sound:this.id,icon:a.id},this.userPriority)};b.SoundAnnot.prototype.getIcon=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getIcon'. Expected 0 arguments. Function Signature: getIcon()");
return b.messageHandler.sendWithPromise("SoundAnnot.getIcon",{sound:this.id},this.userPriority)};b.SoundAnnot.prototype.setIcon=function(a){"undefined"===typeof a&&(a=b.SoundAnnot.Icon.e_Speaker);if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setIcon'. Expected at most 1 arguments. Function Signature: setIcon(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setIcon' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setIcon' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setIcon(number).");return b.messageHandler.sendWithPromise("SoundAnnot.setIcon",{sound:this.id,type:a},this.userPriority)};b.SoundAnnot.prototype.getIconName=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getIconName'. Expected 0 arguments. Function Signature: getIconName()");return b.messageHandler.sendWithPromise("SoundAnnot.getIconName",
{sound:this.id},this.userPriority)};b.SoundAnnot.prototype.setIconName=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setIconName'. Expected 1 argument. Function Signature: setIconName(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setIconName' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setIconName' is of type '"+
typeof a+"'. Expected type 'string'. Function Signature: setIconName(string).");return b.messageHandler.sendWithPromise("SoundAnnot.setIconName",{sound:this.id,type:a},this.userPriority)};b.SquareAnnot.createFromObj=function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected at most 1 arguments. Function Signature: createFromObj(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");}return b.messageHandler.sendWithPromise("squareAnnotCreateFromObj",{d:a.id},this.userPriority).then(function(a){return"0"==a?null:
new b.SquareAnnot(a)})};b.SquareAnnot.createFromAnnot=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromAnnot'. Expected 1 argument. Function Signature: createFromAnnot(Annot)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Annot)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromAnnot' is of type '"+
a.name+"'. Expected type 'Annot'. Function Signature: createFromAnnot(Annot).");throw new TypeError("1st input argument '"+a+"' in function 'createFromAnnot' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: createFromAnnot(Annot).");}return b.messageHandler.sendWithPromise("squareAnnotCreateFromAnnot",{ann:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.SquareAnnot(a)})};b.SquareAnnot.create=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'create'. Expected 2 arguments. Function Signature: create(SDFDoc, Rect)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: create(SDFDoc, Rect).");
throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: create(SDFDoc, Rect).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Rect)&&"Rect"!=c.name){if("object"==typeof c)throw new TypeError("2nd input argument in function 'create' is of type '"+c.name+"'. Expected type 'Rect'. Function Signature: create(SDFDoc, Rect).");
throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: create(SDFDoc, Rect).");}if("undefined"!=typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'create'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("squareAnnotCreate",
{doc:a.id,pos:c},this.userPriority).then(function(a){return"0"==a?null:new b.SquareAnnot(a)})};b.SquareAnnot.prototype.getInteriorColor=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getInteriorColor'. Expected 0 arguments. Function Signature: getInteriorColor()");return b.messageHandler.sendWithPromise("SquareAnnot.getInteriorColor",{square:this.id},this.userPriority).then(function(a){if("0"==a)return null;a=new b.ColorPt(a);createdObjects.push({name:a.name,
id:a.id});return a})};b.SquareAnnot.prototype.getInteriorColorCompNum=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getInteriorColorCompNum'. Expected 0 arguments. Function Signature: getInteriorColorCompNum()");return b.messageHandler.sendWithPromise("SquareAnnot.getInteriorColorCompNum",{square:this.id},this.userPriority)};b.SquareAnnot.prototype.setInteriorColorDefault=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'setInteriorColorDefault'. Expected 1 argument. Function Signature: setInteriorColorDefault(ColorPt)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setInteriorColorDefault' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.ColorPt)&&"ColorPt"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'setInteriorColorDefault' is of type '"+a.name+"'. Expected type 'ColorPt'. Function Signature: setInteriorColorDefault(ColorPt).");
throw new TypeError("1st input argument '"+a+"' in function 'setInteriorColorDefault' is of type '"+typeof a+"'. Expected type 'ColorPt'. Function Signature: setInteriorColorDefault(ColorPt).");}if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setInteriorColorDefault'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("SquareAnnot.setInteriorColorDefault",
{square:this.id,col:a.id},this.userPriority)};b.SquareAnnot.prototype.setInteriorColor=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setInteriorColor'. Expected 2 arguments. Function Signature: setInteriorColor(ColorPt, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setInteriorColor' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.ColorPt)&&
"ColorPt"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'setInteriorColor' is of type '"+a.name+"'. Expected type 'ColorPt'. Function Signature: setInteriorColor(ColorPt, number).");throw new TypeError("1st input argument '"+a+"' in function 'setInteriorColor' is of type '"+typeof a+"'. Expected type 'ColorPt'. Function Signature: setInteriorColor(ColorPt, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setInteriorColor' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setInteriorColor' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: setInteriorColor(ColorPt, number).");if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setInteriorColor'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");
return b.messageHandler.sendWithPromise("SquareAnnot.setInteriorColor",{square:this.id,col:a.id,numcomp:c},this.userPriority)};b.SquareAnnot.prototype.getContentRect=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getContentRect'. Expected 0 arguments. Function Signature: getContentRect()");return b.messageHandler.sendWithPromise("SquareAnnot.getContentRect",{square:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Rect(a)})};
b.SquareAnnot.prototype.setContentRect=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setContentRect'. Expected 1 argument. Function Signature: setContentRect(Rect)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setContentRect' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Rect)&&"Rect"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'setContentRect' is of type '"+
a.name+"'. Expected type 'Rect'. Function Signature: setContentRect(Rect).");throw new TypeError("1st input argument '"+a+"' in function 'setContentRect' is of type '"+typeof a+"'. Expected type 'Rect'. Function Signature: setContentRect(Rect).");}if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setContentRect'. Perhaps a yield statement is required for '"+
a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("SquareAnnot.setContentRect",{square:this.id,cr:a},this.userPriority)};b.SquareAnnot.prototype.getPadding=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPadding'. Expected 0 arguments. Function Signature: getPadding()");return b.messageHandler.sendWithPromise("SquareAnnot.getPadding",{square:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Rect(a)})};b.SquareAnnot.prototype.setPadding=
function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPadding'. Expected 1 argument. Function Signature: setPadding(Rect)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPadding' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Rect)&&"Rect"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'setPadding' is of type '"+a.name+
"'. Expected type 'Rect'. Function Signature: setPadding(Rect).");throw new TypeError("1st input argument '"+a+"' in function 'setPadding' is of type '"+typeof a+"'. Expected type 'Rect'. Function Signature: setPadding(Rect).");}if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setPadding'. Perhaps a yield statement is required for '"+a.yieldFunction+
"'?");return b.messageHandler.sendWithPromise("SquareAnnot.setPadding",{square:this.id,cr:a},this.userPriority)};b.SquigglyAnnot.createFromObj=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected 1 argument. Function Signature: createFromObj(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");}return b.messageHandler.sendWithPromise("squigglyAnnotCreateFromObj",{d:a.id},this.userPriority).then(function(a){return"0"==a?null:
new b.SquigglyAnnot(a)})};b.SquigglyAnnot.createFromAnnot=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromAnnot'. Expected 1 argument. Function Signature: createFromAnnot(Annot)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Annot)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromAnnot' is of type '"+
a.name+"'. Expected type 'Annot'. Function Signature: createFromAnnot(Annot).");throw new TypeError("1st input argument '"+a+"' in function 'createFromAnnot' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: createFromAnnot(Annot).");}return b.messageHandler.sendWithPromise("squigglyAnnotCreateFromAnnot",{ann:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.SquigglyAnnot(a)})};b.SquigglyAnnot.create=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'create'. Expected 2 arguments. Function Signature: create(SDFDoc, Rect)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: create(SDFDoc, Rect).");
throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: create(SDFDoc, Rect).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Rect)&&"Rect"!=c.name){if("object"==typeof c)throw new TypeError("2nd input argument in function 'create' is of type '"+c.name+"'. Expected type 'Rect'. Function Signature: create(SDFDoc, Rect).");
throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: create(SDFDoc, Rect).");}if("undefined"!=typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'create'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("squigglyAnnotCreate",
{doc:a.id,pos:c},this.userPriority).then(function(a){return"0"==a?null:new b.SquigglyAnnot(a)})};b.StrikeOutAnnot.createFromObj=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected 1 argument. Function Signature: createFromObj(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof
b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");}return b.messageHandler.sendWithPromise("strikeOutAnnotCreateFromObj",{d:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.StrikeOutAnnot(a)})};
b.StrikeOutAnnot.createFromAnnot=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromAnnot'. Expected 1 argument. Function Signature: createFromAnnot(Annot)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Annot)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromAnnot' is of type '"+
a.name+"'. Expected type 'Annot'. Function Signature: createFromAnnot(Annot).");throw new TypeError("1st input argument '"+a+"' in function 'createFromAnnot' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: createFromAnnot(Annot).");}return b.messageHandler.sendWithPromise("strikeOutAnnotCreateFromAnnot",{ann:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.StrikeOutAnnot(a)})};b.StrikeOutAnnot.create=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'create'. Expected 2 arguments. Function Signature: create(SDFDoc, Rect)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: create(SDFDoc, Rect).");
throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: create(SDFDoc, Rect).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Rect)&&"Rect"!=c.name){if("object"==typeof c)throw new TypeError("2nd input argument in function 'create' is of type '"+c.name+"'. Expected type 'Rect'. Function Signature: create(SDFDoc, Rect).");
throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: create(SDFDoc, Rect).");}if("undefined"!=typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'create'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("strikeOutAnnotCreate",
{doc:a.id,pos:c},this.userPriority).then(function(a){return"0"==a?null:new b.StrikeOutAnnot(a)})};b.TextAnnot.createFromObj=function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected at most 1 arguments. Function Signature: createFromObj(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");}return b.messageHandler.sendWithPromise("textAnnotCreateFromObj",{d:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.TextAnnot(a)})};
b.TextAnnot.createFromAnnot=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromAnnot'. Expected 1 argument. Function Signature: createFromAnnot(Annot)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Annot)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromAnnot' is of type '"+
a.name+"'. Expected type 'Annot'. Function Signature: createFromAnnot(Annot).");throw new TypeError("1st input argument '"+a+"' in function 'createFromAnnot' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: createFromAnnot(Annot).");}return b.messageHandler.sendWithPromise("textAnnotCreateFromAnnot",{ann:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.TextAnnot(a)})};b.TextAnnot.createAtPoint=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'createAtPoint'. Expected 2 arguments. Function Signature: createAtPoint(SDFDoc, Point)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createAtPoint' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createAtPoint' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: createAtPoint(SDFDoc, Point).");
throw new TypeError("1st input argument '"+a+"' in function 'createAtPoint' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: createAtPoint(SDFDoc, Point).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createAtPoint' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Point)&&"Point"!=c.name){if("object"==typeof c)throw new TypeError("2nd input argument in function 'createAtPoint' is of type '"+
c.name+"'. Expected type 'Point'. Function Signature: createAtPoint(SDFDoc, Point).");throw new TypeError("2nd input argument '"+c+"' in function 'createAtPoint' is of type '"+typeof c+"'. Expected type 'Point'. Function Signature: createAtPoint(SDFDoc, Point).");}if("undefined"!=typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'createAtPoint'. Perhaps a yield statement is required for '"+
c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("textAnnotCreateAtPoint",{doc:a.id,pos:c},this.userPriority).then(function(a){return"0"==a?null:new b.TextAnnot(a)})};b.TextAnnot.create=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 2 arguments. Function Signature: create(SDFDoc, Rect)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: create(SDFDoc, Rect).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: create(SDFDoc, Rect).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.Rect)&&"Rect"!=c.name){if("object"==typeof c)throw new TypeError("2nd input argument in function 'create' is of type '"+c.name+"'. Expected type 'Rect'. Function Signature: create(SDFDoc, Rect).");throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: create(SDFDoc, Rect).");}if("undefined"!=typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'create'. Perhaps a yield statement is required for '"+
c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("textAnnotCreate",{doc:a.id,pos:c},this.userPriority).then(function(a){return"0"==a?null:new b.TextAnnot(a)})};b.TextAnnot.prototype.isOpen=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isOpen'. Expected 0 arguments. Function Signature: isOpen()");return b.messageHandler.sendWithPromise("TextAnnot.isOpen",{text:this.id},this.userPriority)};b.TextAnnot.prototype.setOpen=function(a){if(1!=
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setOpen'. Expected 1 argument. Function Signature: setOpen(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setOpen' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setOpen' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setOpen(boolean).");
return b.messageHandler.sendWithPromise("TextAnnot.setOpen",{text:this.id,isopen:a},this.userPriority)};b.TextAnnot.prototype.getIcon=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getIcon'. Expected 0 arguments. Function Signature: getIcon()");return b.messageHandler.sendWithPromise("TextAnnot.getIcon",{text:this.id},this.userPriority)};b.TextAnnot.prototype.setIcon=function(a){"undefined"===typeof a&&(a=b.TextAnnot.Icon.e_Note);if(1<arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'setIcon'. Expected at most 1 arguments. Function Signature: setIcon(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setIcon' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setIcon' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setIcon(number).");return b.messageHandler.sendWithPromise("TextAnnot.setIcon",
{text:this.id,icon:a},this.userPriority)};b.TextAnnot.prototype.setIconDefault=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setIconDefault'. Expected 0 arguments. Function Signature: setIconDefault()");return b.messageHandler.sendWithPromise("TextAnnot.setIconDefault",{text:this.id},this.userPriority)};b.TextAnnot.prototype.getIconName=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getIconName'. Expected 0 arguments. Function Signature: getIconName()");
return b.messageHandler.sendWithPromise("TextAnnot.getIconName",{text:this.id},this.userPriority)};b.TextAnnot.prototype.setIconName=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setIconName'. Expected 1 argument. Function Signature: setIconName(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setIconName' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=
typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setIconName' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setIconName(string).");return b.messageHandler.sendWithPromise("TextAnnot.setIconName",{text:this.id,icon:a},this.userPriority)};b.TextAnnot.prototype.getState=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getState'. Expected 0 arguments. Function Signature: getState()");return b.messageHandler.sendWithPromise("TextAnnot.getState",
{text:this.id},this.userPriority)};b.TextAnnot.prototype.setState=function(a){"undefined"===typeof a&&(a="");if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setState'. Expected at most 1 arguments. Function Signature: setState(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setState' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'setState' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setState(string).");return b.messageHandler.sendWithPromise("TextAnnot.setState",{text:this.id,state:a},this.userPriority)};b.TextAnnot.prototype.getStateModel=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getStateModel'. Expected 0 arguments. Function Signature: getStateModel()");return b.messageHandler.sendWithPromise("TextAnnot.getStateModel",
{text:this.id},this.userPriority)};b.TextAnnot.prototype.setStateModel=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setStateModel'. Expected 1 argument. Function Signature: setStateModel(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setStateModel' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+
"' in function 'setStateModel' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setStateModel(string).");return b.messageHandler.sendWithPromise("TextAnnot.setStateModel",{text:this.id,sm:a},this.userPriority)};b.UnderlineAnnot.createFromObj=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected 1 argument. Function Signature: createFromObj(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");}return b.messageHandler.sendWithPromise("underlineAnnotCreateFromObj",{d:a.id},this.userPriority).then(function(a){return"0"==a?null:
new b.UnderlineAnnot(a)})};b.UnderlineAnnot.createFromAnnot=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromAnnot'. Expected 1 argument. Function Signature: createFromAnnot(Annot)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Annot)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromAnnot' is of type '"+
a.name+"'. Expected type 'Annot'. Function Signature: createFromAnnot(Annot).");throw new TypeError("1st input argument '"+a+"' in function 'createFromAnnot' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: createFromAnnot(Annot).");}return b.messageHandler.sendWithPromise("underlineAnnotCreateFromAnnot",{ann:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.UnderlineAnnot(a)})};b.UnderlineAnnot.create=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'create'. Expected 2 arguments. Function Signature: create(SDFDoc, Rect)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: create(SDFDoc, Rect).");
throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: create(SDFDoc, Rect).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Rect)&&"Rect"!=c.name){if("object"==typeof c)throw new TypeError("2nd input argument in function 'create' is of type '"+c.name+"'. Expected type 'Rect'. Function Signature: create(SDFDoc, Rect).");
throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: create(SDFDoc, Rect).");}if("undefined"!=typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'create'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("underlineAnnotCreate",
{doc:a.id,pos:c},this.userPriority).then(function(a){return"0"==a?null:new b.UnderlineAnnot(a)})};b.WatermarkAnnot.createFromObj=function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected at most 1 arguments. Function Signature: createFromObj(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");}return b.messageHandler.sendWithPromise("watermarkAnnotCreateFromObj",{d:a.id},this.userPriority).then(function(a){return"0"==a?null:
new b.WatermarkAnnot(a)})};b.WatermarkAnnot.createFromAnnot=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromAnnot'. Expected 1 argument. Function Signature: createFromAnnot(Annot)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Annot)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromAnnot' is of type '"+
a.name+"'. Expected type 'Annot'. Function Signature: createFromAnnot(Annot).");throw new TypeError("1st input argument '"+a+"' in function 'createFromAnnot' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: createFromAnnot(Annot).");}return b.messageHandler.sendWithPromise("watermarkAnnotCreateFromAnnot",{ann:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.WatermarkAnnot(a)})};b.WatermarkAnnot.create=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'create'. Expected 2 arguments. Function Signature: create(SDFDoc, Rect)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: create(SDFDoc, Rect).");
throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: create(SDFDoc, Rect).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Rect)&&"Rect"!=c.name){if("object"==typeof c)throw new TypeError("2nd input argument in function 'create' is of type '"+c.name+"'. Expected type 'Rect'. Function Signature: create(SDFDoc, Rect).");
throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: create(SDFDoc, Rect).");}if("undefined"!=typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'create'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("watermarkAnnotCreate",
{doc:a.id,pos:c},this.userPriority).then(function(a){return"0"==a?null:new b.WatermarkAnnot(a)})};b.TextMarkupAnnot.createFromObj=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected 1 argument. Function Signature: createFromObj(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof
b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");}return b.messageHandler.sendWithPromise("textMarkupAnnotCreateFromObj",{d:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.TextMarkupAnnot(a)})};
b.TextMarkupAnnot.createFromAnnot=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromAnnot'. Expected 1 argument. Function Signature: createFromAnnot(Annot)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Annot)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromAnnot' is of type '"+
a.name+"'. Expected type 'Annot'. Function Signature: createFromAnnot(Annot).");throw new TypeError("1st input argument '"+a+"' in function 'createFromAnnot' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: createFromAnnot(Annot).");}return b.messageHandler.sendWithPromise("textMarkupAnnotCreateFromAnnot",{ann:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.TextMarkupAnnot(a)})};b.TextMarkupAnnot.prototype.getQuadPointCount=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getQuadPointCount'. Expected 0 arguments. Function Signature: getQuadPointCount()");return b.messageHandler.sendWithPromise("TextMarkupAnnot.getQuadPointCount",{textmarkup:this.id},this.userPriority)};b.TextMarkupAnnot.prototype.getQuadPoint=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getQuadPoint'. Expected 1 argument. Function Signature: getQuadPoint(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getQuadPoint' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getQuadPoint' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getQuadPoint(number).");return b.messageHandler.sendWithPromise("TextMarkupAnnot.getQuadPoint",{textmarkup:this.id,idx:a},this.userPriority)};b.TextMarkupAnnot.prototype.setQuadPoint=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setQuadPoint'. Expected 2 arguments. Function Signature: setQuadPoint(number, QuadPoint)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setQuadPoint' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setQuadPoint' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setQuadPoint(number, QuadPoint).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setQuadPoint' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.QuadPoint)&&"QuadPoint"!=c.name){if("object"==typeof c)throw new TypeError("2nd input argument in function 'setQuadPoint' is of type '"+c.name+"'. Expected type 'QuadPoint'. Function Signature: setQuadPoint(number, QuadPoint).");throw new TypeError("2nd input argument '"+c+"' in function 'setQuadPoint' is of type '"+typeof c+"'. Expected type 'QuadPoint'. Function Signature: setQuadPoint(number, QuadPoint).");}if("undefined"!=typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+
"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'setQuadPoint'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("TextMarkupAnnot.setQuadPoint",{textmarkup:this.id,idx:a,qp:c},this.userPriority)};b.WidgetAnnot.create=function(a,c,d){if(3!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 3 arguments. Function Signature: create(SDFDoc, Rect, Field)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: create(SDFDoc, Rect, Field).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+
typeof a+"'. Expected type 'SDFDoc'. Function Signature: create(SDFDoc, Rect, Field).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Rect)&&"Rect"!=c.name){if("object"==typeof c)throw new TypeError("2nd input argument in function 'create' is of type '"+c.name+"'. Expected type 'Rect'. Function Signature: create(SDFDoc, Rect, Field).");throw new TypeError("2nd input argument '"+
c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: create(SDFDoc, Rect, Field).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(d instanceof b.Field)&&"Field"!=d.name){if("object"==typeof d)throw new TypeError("3rd input argument in function 'create' is of type '"+d.name+"'. Expected type 'Field'. Function Signature: create(SDFDoc, Rect, Field).");
throw new TypeError("3rd input argument '"+d+"' in function 'create' is of type '"+typeof d+"'. Expected type 'Field'. Function Signature: create(SDFDoc, Rect, Field).");}if("undefined"!=typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'create'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");if("undefined"!=typeof d.yieldFunction)throw Error("Function '"+
d.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 3rd input argument in function 'create'. Perhaps a yield statement is required for '"+d.yieldFunction+"'?");var e=this;this.yieldFunction="WidgetAnnot.create";return b.messageHandler.sendWithPromise("widgetAnnotCreate",{doc:a.id,pos:c,field:d},this.userPriority).then(function(a){e.yieldFunction=void 0;if("0"==a)return null;copyFunc(a.field,e);return new b.WidgetAnnot(a.result)})};b.WidgetAnnot.createFromObj=
function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected at most 1 arguments. Function Signature: createFromObj(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+
a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");}return b.messageHandler.sendWithPromise("widgetAnnotCreateFromObj",{d:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.WidgetAnnot(a)})};b.WidgetAnnot.createFromAnnot=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromAnnot'. Expected 1 argument. Function Signature: createFromAnnot(Annot)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Annot)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromAnnot' is of type '"+a.name+"'. Expected type 'Annot'. Function Signature: createFromAnnot(Annot).");throw new TypeError("1st input argument '"+a+"' in function 'createFromAnnot' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: createFromAnnot(Annot).");
}return b.messageHandler.sendWithPromise("widgetAnnotCreateFromAnnot",{ann:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.WidgetAnnot(a)})};b.WidgetAnnot.prototype.getField=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getField'. Expected 0 arguments. Function Signature: getField()");return b.messageHandler.sendWithPromise("WidgetAnnot.getField",{widget:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Field(a)})};
b.WidgetAnnot.prototype.getHighlightingMode=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getHighlightingMode'. Expected 0 arguments. Function Signature: getHighlightingMode()");return b.messageHandler.sendWithPromise("WidgetAnnot.getHighlightingMode",{widget:this.id},this.userPriority)};b.WidgetAnnot.prototype.setHighlightingMode=function(a){"undefined"===typeof a&&(a=b.WidgetAnnot.HighlightingMode.e_invert);if(1<arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'setHighlightingMode'. Expected at most 1 arguments. Function Signature: setHighlightingMode(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setHighlightingMode' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setHighlightingMode' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setHighlightingMode(number).");
return b.messageHandler.sendWithPromise("WidgetAnnot.setHighlightingMode",{widget:this.id,value:a},this.userPriority)};b.WidgetAnnot.prototype.getAction=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getAction'. Expected 0 arguments. Function Signature: getAction()");return b.messageHandler.sendWithPromise("WidgetAnnot.getAction",{widget:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Action(a)})};b.WidgetAnnot.prototype.setAction=
function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setAction'. Expected 1 argument. Function Signature: setAction(Action)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setAction' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Action)){if("object"==typeof a)throw new TypeError("1st input argument in function 'setAction' is of type '"+a.name+"'. Expected type 'Action'. Function Signature: setAction(Action).");
throw new TypeError("1st input argument '"+a+"' in function 'setAction' is of type '"+typeof a+"'. Expected type 'Action'. Function Signature: setAction(Action).");}return b.messageHandler.sendWithPromise("WidgetAnnot.setAction",{widget:this.id,action:a.id},this.userPriority)};b.WidgetAnnot.prototype.getBorderColor=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getBorderColor'. Expected 0 arguments. Function Signature: getBorderColor()");
return b.messageHandler.sendWithPromise("WidgetAnnot.getBorderColor",{widget:this.id},this.userPriority).then(function(a){if("0"==a)return null;a=new b.ColorPt(a);createdObjects.push({name:a.name,id:a.id});return a})};b.WidgetAnnot.prototype.setBorderColor=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setBorderColor'. Expected 2 arguments. Function Signature: setBorderColor(ColorPt, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setBorderColor' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.ColorPt)&&"ColorPt"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'setBorderColor' is of type '"+a.name+"'. Expected type 'ColorPt'. Function Signature: setBorderColor(ColorPt, number).");throw new TypeError("1st input argument '"+a+"' in function 'setBorderColor' is of type '"+typeof a+"'. Expected type 'ColorPt'. Function Signature: setBorderColor(ColorPt, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setBorderColor' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setBorderColor' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: setBorderColor(ColorPt, number).");if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setBorderColor'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("WidgetAnnot.setBorderColor",
{widget:this.id,col:a.id,compnum:c},this.userPriority)};b.WidgetAnnot.prototype.getBorderColorCompNum=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getBorderColorCompNum'. Expected 0 arguments. Function Signature: getBorderColorCompNum()");return b.messageHandler.sendWithPromise("WidgetAnnot.getBorderColorCompNum",{widget:this.id},this.userPriority)};b.WidgetAnnot.prototype.getBackgroundColorCompNum=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getBackgroundColorCompNum'. Expected 0 arguments. Function Signature: getBackgroundColorCompNum()");return b.messageHandler.sendWithPromise("WidgetAnnot.getBackgroundColorCompNum",{widget:this.id},this.userPriority)};b.WidgetAnnot.prototype.getBackgroundColor=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getBackgroundColor'. Expected 0 arguments. Function Signature: getBackgroundColor()");return b.messageHandler.sendWithPromise("WidgetAnnot.getBackgroundColor",
{widget:this.id},this.userPriority).then(function(a){if("0"==a)return null;a=new b.ColorPt(a);createdObjects.push({name:a.name,id:a.id});return a})};b.WidgetAnnot.prototype.setBackgroundColor=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setBackgroundColor'. Expected 2 arguments. Function Signature: setBackgroundColor(ColorPt, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setBackgroundColor' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.ColorPt)&&"ColorPt"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'setBackgroundColor' is of type '"+a.name+"'. Expected type 'ColorPt'. Function Signature: setBackgroundColor(ColorPt, number).");throw new TypeError("1st input argument '"+a+"' in function 'setBackgroundColor' is of type '"+typeof a+"'. Expected type 'ColorPt'. Function Signature: setBackgroundColor(ColorPt, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setBackgroundColor' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setBackgroundColor' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: setBackgroundColor(ColorPt, number).");if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setBackgroundColor'. Perhaps a yield statement is required for '"+a.yieldFunction+
"'?");return b.messageHandler.sendWithPromise("WidgetAnnot.setBackgroundColor",{widget:this.id,col:a.id,compnum:c},this.userPriority)};b.WidgetAnnot.prototype.getStaticCaptionText=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getStaticCaptionText'. Expected 0 arguments. Function Signature: getStaticCaptionText()");return b.messageHandler.sendWithPromise("WidgetAnnot.getStaticCaptionText",{widget:this.id},this.userPriority)};b.WidgetAnnot.prototype.setStaticCaptionText=
function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setStaticCaptionText'. Expected 1 argument. Function Signature: setStaticCaptionText(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setStaticCaptionText' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setStaticCaptionText' is of type '"+
typeof a+"'. Expected type 'string'. Function Signature: setStaticCaptionText(string).");return b.messageHandler.sendWithPromise("WidgetAnnot.setStaticCaptionText",{widget:this.id,contents:a},this.userPriority)};b.WidgetAnnot.prototype.getRolloverCaptionText=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getRolloverCaptionText'. Expected 0 arguments. Function Signature: getRolloverCaptionText()");return b.messageHandler.sendWithPromise("WidgetAnnot.getRolloverCaptionText",
{widget:this.id},this.userPriority)};b.WidgetAnnot.prototype.setRolloverCaptionText=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setRolloverCaptionText'. Expected 1 argument. Function Signature: setRolloverCaptionText(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setRolloverCaptionText' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'setRolloverCaptionText' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setRolloverCaptionText(string).");return b.messageHandler.sendWithPromise("WidgetAnnot.setRolloverCaptionText",{widget:this.id,contents:a},this.userPriority)};b.WidgetAnnot.prototype.getMouseDownCaptionText=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getMouseDownCaptionText'. Expected 0 arguments. Function Signature: getMouseDownCaptionText()");
return b.messageHandler.sendWithPromise("WidgetAnnot.getMouseDownCaptionText",{widget:this.id},this.userPriority)};b.WidgetAnnot.prototype.setMouseDownCaptionText=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setMouseDownCaptionText'. Expected 1 argument. Function Signature: setMouseDownCaptionText(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setMouseDownCaptionText' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setMouseDownCaptionText' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setMouseDownCaptionText(string).");return b.messageHandler.sendWithPromise("WidgetAnnot.setMouseDownCaptionText",{widget:this.id,contents:a},this.userPriority)};b.WidgetAnnot.prototype.getStaticIcon=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getStaticIcon'. Expected 0 arguments. Function Signature: getStaticIcon()");
return b.messageHandler.sendWithPromise("WidgetAnnot.getStaticIcon",{widget:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.WidgetAnnot.prototype.setStaticIcon=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setStaticIcon'. Expected 1 argument. Function Signature: setStaticIcon(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setStaticIcon' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'setStaticIcon' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: setStaticIcon(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'setStaticIcon' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: setStaticIcon(Obj).");}return b.messageHandler.sendWithPromise("WidgetAnnot.setStaticIcon",{widget:this.id,icon:a.id},this.userPriority)};b.WidgetAnnot.prototype.getRolloverIcon=
function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getRolloverIcon'. Expected 0 arguments. Function Signature: getRolloverIcon()");return b.messageHandler.sendWithPromise("WidgetAnnot.getRolloverIcon",{widget:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.WidgetAnnot.prototype.setRolloverIcon=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setRolloverIcon'. Expected 1 argument. Function Signature: setRolloverIcon(Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setRolloverIcon' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'setRolloverIcon' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: setRolloverIcon(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'setRolloverIcon' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: setRolloverIcon(Obj).");
}return b.messageHandler.sendWithPromise("WidgetAnnot.setRolloverIcon",{widget:this.id,icon:a.id},this.userPriority)};b.WidgetAnnot.prototype.getMouseDownIcon=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getMouseDownIcon'. Expected 0 arguments. Function Signature: getMouseDownIcon()");return b.messageHandler.sendWithPromise("WidgetAnnot.getMouseDownIcon",{widget:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};
b.WidgetAnnot.prototype.setMouseDownIcon=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setMouseDownIcon'. Expected 1 argument. Function Signature: setMouseDownIcon(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setMouseDownIcon' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'setMouseDownIcon' is of type '"+
a.name+"'. Expected type 'Obj'. Function Signature: setMouseDownIcon(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'setMouseDownIcon' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: setMouseDownIcon(Obj).");}return b.messageHandler.sendWithPromise("WidgetAnnot.setMouseDownIcon",{widget:this.id,icon:a.id},this.userPriority)};b.WidgetAnnot.prototype.getScaleType=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getScaleType'. Expected 0 arguments. Function Signature: getScaleType()");
return b.messageHandler.sendWithPromise("WidgetAnnot.getScaleType",{widget:this.id},this.userPriority)};b.WidgetAnnot.prototype.setScaleType=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setScaleType'. Expected 1 argument. Function Signature: setScaleType(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setScaleType' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setScaleType' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setScaleType(number).");return b.messageHandler.sendWithPromise("WidgetAnnot.setScaleType",{widget:this.id,st:a},this.userPriority)};b.WidgetAnnot.prototype.getIconCaptionRelation=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getIconCaptionRelation'. Expected 0 arguments. Function Signature: getIconCaptionRelation()");
return b.messageHandler.sendWithPromise("WidgetAnnot.getIconCaptionRelation",{widget:this.id},this.userPriority)};b.WidgetAnnot.prototype.setIconCaptionRelation=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setIconCaptionRelation'. Expected 1 argument. Function Signature: setIconCaptionRelation(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setIconCaptionRelation' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setIconCaptionRelation' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setIconCaptionRelation(number).");return b.messageHandler.sendWithPromise("WidgetAnnot.setIconCaptionRelation",{widget:this.id,icr:a},this.userPriority)};b.WidgetAnnot.prototype.getScaleCondition=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getScaleCondition'. Expected 0 arguments. Function Signature: getScaleCondition()");
return b.messageHandler.sendWithPromise("WidgetAnnot.getScaleCondition",{widget:this.id},this.userPriority)};b.WidgetAnnot.prototype.setScaleCondition=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setScaleCondition'. Expected 1 argument. Function Signature: setScaleCondition(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setScaleCondition' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setScaleCondition' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setScaleCondition(number).");return b.messageHandler.sendWithPromise("WidgetAnnot.setScaleCondition",{widget:this.id,sd:a},this.userPriority)};b.WidgetAnnot.prototype.getFitFull=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFitFull'. Expected 0 arguments. Function Signature: getFitFull()");
return b.messageHandler.sendWithPromise("WidgetAnnot.getFitFull",{widget:this.id},this.userPriority)};b.WidgetAnnot.prototype.setFitFull=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setFitFull'. Expected 1 argument. Function Signature: setFitFull(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setFitFull' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=
typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setFitFull' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setFitFull(boolean).");return b.messageHandler.sendWithPromise("WidgetAnnot.setFitFull",{widget:this.id,ff:a},this.userPriority)};b.WidgetAnnot.prototype.getHIconLeftOver=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getHIconLeftOver'. Expected 0 arguments. Function Signature: getHIconLeftOver()");
return b.messageHandler.sendWithPromise("WidgetAnnot.getHIconLeftOver",{widget:this.id},this.userPriority)};b.WidgetAnnot.prototype.setHIconLeftOver=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setHIconLeftOver'. Expected 1 argument. Function Signature: setHIconLeftOver(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setHIconLeftOver' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setHIconLeftOver' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setHIconLeftOver(number).");return b.messageHandler.sendWithPromise("WidgetAnnot.setHIconLeftOver",{widget:this.id,hl:a},this.userPriority)};b.WidgetAnnot.prototype.getVIconLeftOver=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getVIconLeftOver'. Expected 0 arguments. Function Signature: getVIconLeftOver()");
return b.messageHandler.sendWithPromise("WidgetAnnot.getVIconLeftOver",{widget:this.id},this.userPriority)};b.WidgetAnnot.prototype.setVIconLeftOver=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setVIconLeftOver'. Expected 1 argument. Function Signature: setVIconLeftOver(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setVIconLeftOver' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setVIconLeftOver' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setVIconLeftOver(number).");return b.messageHandler.sendWithPromise("WidgetAnnot.setVIconLeftOver",{widget:this.id,vl:a},this.userPriority)};b.Bookmark.create=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 2 arguments. Function Signature: create(PDFDoc, string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: create(PDFDoc, string).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+
typeof a+"'. Expected type 'PDFDoc'. Function Signature: create(PDFDoc, string).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: create(PDFDoc, string).");return b.messageHandler.sendWithPromise("bookmarkCreate",{in_doc:a.id,
in_title:c},this.userPriority).then(function(a){return"0"==a?null:new b.Bookmark(a)})};b.Bookmark.createFromObj=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected 1 argument. Function Signature: createFromObj(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==
typeof a)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");}return b.messageHandler.sendWithPromise("bookmarkCreateFromObj",{in_bookmark_dict:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.Bookmark(a)})};b.Bookmark.prototype.copy=
function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'copy'. Expected 0 arguments. Function Signature: copy()");return b.messageHandler.sendWithPromise("Bookmark.copy",{in_bookmark:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Bookmark(a)})};b.Bookmark.prototype.compare=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'compare'. Expected 1 argument. Function Signature: compare(Bookmark)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'compare' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Bookmark)){if("object"==typeof a)throw new TypeError("1st input argument in function 'compare' is of type '"+a.name+"'. Expected type 'Bookmark'. Function Signature: compare(Bookmark).");throw new TypeError("1st input argument '"+a+"' in function 'compare' is of type '"+typeof a+"'. Expected type 'Bookmark'. Function Signature: compare(Bookmark).");
}return b.messageHandler.sendWithPromise("Bookmark.compare",{bm:this.id,in_bookmark:a.id},this.userPriority)};b.Bookmark.prototype.isValid=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isValid'. Expected 0 arguments. Function Signature: isValid()");return b.messageHandler.sendWithPromise("Bookmark.isValid",{bm:this.id},this.userPriority)};b.Bookmark.prototype.hasChildren=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'hasChildren'. Expected 0 arguments. Function Signature: hasChildren()");return b.messageHandler.sendWithPromise("Bookmark.hasChildren",{bm:this.id},this.userPriority)};b.Bookmark.prototype.getNext=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getNext'. Expected 0 arguments. Function Signature: getNext()");return b.messageHandler.sendWithPromise("Bookmark.getNext",{bm:this.id},this.userPriority).then(function(a){return"0"==
a?null:new b.Bookmark(a)})};b.Bookmark.prototype.getPrev=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPrev'. Expected 0 arguments. Function Signature: getPrev()");return b.messageHandler.sendWithPromise("Bookmark.getPrev",{bm:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Bookmark(a)})};b.Bookmark.prototype.getFirstChild=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFirstChild'. Expected 0 arguments. Function Signature: getFirstChild()");
return b.messageHandler.sendWithPromise("Bookmark.getFirstChild",{bm:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Bookmark(a)})};b.Bookmark.prototype.getLastChild=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getLastChild'. Expected 0 arguments. Function Signature: getLastChild()");return b.messageHandler.sendWithPromise("Bookmark.getLastChild",{bm:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Bookmark(a)})};
b.Bookmark.prototype.getParent=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getParent'. Expected 0 arguments. Function Signature: getParent()");return b.messageHandler.sendWithPromise("Bookmark.getParent",{bm:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Bookmark(a)})};b.Bookmark.prototype.find=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'find'. Expected 1 argument. Function Signature: find(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'find' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'find' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: find(string).");return b.messageHandler.sendWithPromise("Bookmark.find",{bm:this.id,in_title:a},this.userPriority).then(function(a){return"0"==a?null:new b.Bookmark(a)})};b.Bookmark.prototype.addNewChild=
function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'addNewChild'. Expected 1 argument. Function Signature: addNewChild(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'addNewChild' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'addNewChild' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: addNewChild(string).");
return b.messageHandler.sendWithPromise("Bookmark.addNewChild",{bm:this.id,in_title:a},this.userPriority).then(function(a){return"0"==a?null:new b.Bookmark(a)})};b.Bookmark.prototype.addChild=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'addChild'. Expected 1 argument. Function Signature: addChild(Bookmark)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'addChild' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Bookmark)){if("object"==typeof a)throw new TypeError("1st input argument in function 'addChild' is of type '"+a.name+"'. Expected type 'Bookmark'. Function Signature: addChild(Bookmark).");throw new TypeError("1st input argument '"+a+"' in function 'addChild' is of type '"+typeof a+"'. Expected type 'Bookmark'. Function Signature: addChild(Bookmark).");}return b.messageHandler.sendWithPromise("Bookmark.addChild",{bm:this.id,in_bookmark:a.id},this.userPriority)};b.Bookmark.prototype.addNewNext=
function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'addNewNext'. Expected 1 argument. Function Signature: addNewNext(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'addNewNext' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'addNewNext' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: addNewNext(string).");
return b.messageHandler.sendWithPromise("Bookmark.addNewNext",{bm:this.id,in_title:a},this.userPriority).then(function(a){return"0"==a?null:new b.Bookmark(a)})};b.Bookmark.prototype.addNext=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'addNext'. Expected 1 argument. Function Signature: addNext(Bookmark)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'addNext' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Bookmark)){if("object"==typeof a)throw new TypeError("1st input argument in function 'addNext' is of type '"+a.name+"'. Expected type 'Bookmark'. Function Signature: addNext(Bookmark).");throw new TypeError("1st input argument '"+a+"' in function 'addNext' is of type '"+typeof a+"'. Expected type 'Bookmark'. Function Signature: addNext(Bookmark).");}return b.messageHandler.sendWithPromise("Bookmark.addNext",{bm:this.id,in_bookmark:a.id},this.userPriority)};b.Bookmark.prototype.addNewPrev=
function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'addNewPrev'. Expected 1 argument. Function Signature: addNewPrev(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'addNewPrev' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'addNewPrev' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: addNewPrev(string).");
return b.messageHandler.sendWithPromise("Bookmark.addNewPrev",{bm:this.id,in_title:a},this.userPriority).then(function(a){return"0"==a?null:new b.Bookmark(a)})};b.Bookmark.prototype.addPrev=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'addPrev'. Expected 1 argument. Function Signature: addPrev(Bookmark)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'addPrev' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Bookmark)){if("object"==typeof a)throw new TypeError("1st input argument in function 'addPrev' is of type '"+a.name+"'. Expected type 'Bookmark'. Function Signature: addPrev(Bookmark).");throw new TypeError("1st input argument '"+a+"' in function 'addPrev' is of type '"+typeof a+"'. Expected type 'Bookmark'. Function Signature: addPrev(Bookmark).");}return b.messageHandler.sendWithPromise("Bookmark.addPrev",{bm:this.id,in_bookmark:a.id},this.userPriority)};b.Bookmark.prototype["delete"]=
function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'delete'. Expected 0 arguments. Function Signature: delete()");return b.messageHandler.sendWithPromise("Bookmark.delete",{bm:this.id},this.userPriority)};b.Bookmark.prototype.unlink=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'unlink'. Expected 0 arguments. Function Signature: unlink()");return b.messageHandler.sendWithPromise("Bookmark.unlink",
{bm:this.id},this.userPriority)};b.Bookmark.prototype.getIndent=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getIndent'. Expected 0 arguments. Function Signature: getIndent()");return b.messageHandler.sendWithPromise("Bookmark.getIndent",{bm:this.id},this.userPriority)};b.Bookmark.prototype.isOpen=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isOpen'. Expected 0 arguments. Function Signature: isOpen()");
return b.messageHandler.sendWithPromise("Bookmark.isOpen",{bm:this.id},this.userPriority)};b.Bookmark.prototype.setOpen=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setOpen'. Expected 1 argument. Function Signature: setOpen(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setOpen' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'setOpen' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setOpen(boolean).");return b.messageHandler.sendWithPromise("Bookmark.setOpen",{bm:this.id,in_open:a},this.userPriority)};b.Bookmark.prototype.getOpenCount=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getOpenCount'. Expected 0 arguments. Function Signature: getOpenCount()");return b.messageHandler.sendWithPromise("Bookmark.getOpenCount",{bm:this.id},
this.userPriority)};b.Bookmark.prototype.getTitle=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTitle'. Expected 0 arguments. Function Signature: getTitle()");return b.messageHandler.sendWithPromise("Bookmark.getTitle",{bm:this.id},this.userPriority)};b.Bookmark.prototype.getTitleObj=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTitleObj'. Expected 0 arguments. Function Signature: getTitleObj()");
return b.messageHandler.sendWithPromise("Bookmark.getTitleObj",{bm:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Bookmark.prototype.setTitle=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setTitle'. Expected 1 argument. Function Signature: setTitle(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setTitle' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setTitle' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setTitle(string).");return b.messageHandler.sendWithPromise("Bookmark.setTitle",{bm:this.id,title:a},this.userPriority)};b.Bookmark.prototype.getAction=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getAction'. Expected 0 arguments. Function Signature: getAction()");return b.messageHandler.sendWithPromise("Bookmark.getAction",
{bm:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Action(a)})};b.Bookmark.prototype.setAction=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setAction'. Expected 1 argument. Function Signature: setAction(Action)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setAction' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Action)){if("object"==
typeof a)throw new TypeError("1st input argument in function 'setAction' is of type '"+a.name+"'. Expected type 'Action'. Function Signature: setAction(Action).");throw new TypeError("1st input argument '"+a+"' in function 'setAction' is of type '"+typeof a+"'. Expected type 'Action'. Function Signature: setAction(Action).");}return b.messageHandler.sendWithPromise("Bookmark.setAction",{bm:this.id,in_action:a.id},this.userPriority)};b.Bookmark.prototype.removeAction=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'removeAction'. Expected 0 arguments. Function Signature: removeAction()");return b.messageHandler.sendWithPromise("Bookmark.removeAction",{bm:this.id},this.userPriority)};b.Bookmark.prototype.getFlags=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFlags'. Expected 0 arguments. Function Signature: getFlags()");return b.messageHandler.sendWithPromise("Bookmark.getFlags",{bm:this.id},this.userPriority)};b.Bookmark.prototype.setFlags=
function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setFlags'. Expected 1 argument. Function Signature: setFlags(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setFlags' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setFlags' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setFlags(number).");
return b.messageHandler.sendWithPromise("Bookmark.setFlags",{bm:this.id,in_flags:a},this.userPriority)};b.Bookmark.prototype.getColor=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getColor'. Expected 0 arguments. Function Signature: getColor()");return b.messageHandler.sendWithPromise("Bookmark.getColor",{bm:this.id},this.userPriority)};b.Bookmark.prototype.setColor=function(a,c,d){"undefined"===typeof a&&(a=0);"undefined"===typeof c&&(c=
0);"undefined"===typeof d&&(d=0);if(3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setColor'. Expected at most 3 arguments. Function Signature: setColor(number, number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setColor' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setColor' is of type '"+typeof a+
"'. Expected type 'number'. Function Signature: setColor(number, number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setColor' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setColor' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: setColor(number, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'setColor' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'setColor' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: setColor(number, number, number).");return b.messageHandler.sendWithPromise("Bookmark.setColor",{bm:this.id,in_r:a,in_g:c,in_b:d},this.userPriority)};b.Bookmark.prototype.getSDFObj=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSDFObj'. Expected 0 arguments. Function Signature: getSDFObj()");
return b.messageHandler.sendWithPromise("Bookmark.getSDFObj",{bm:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.ColorPt.init=function(a,c,d,e){"undefined"===typeof a&&(a=0);"undefined"===typeof c&&(c=0);"undefined"===typeof d&&(d=0);"undefined"===typeof e&&(e=0);if(4<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'init'. Expected at most 4 arguments. Function Signature: init(number, number, number, number)");if(a instanceof
Promise)throw new TypeError("1st input argument in function 'init' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'init' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: init(number, number, number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'init' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'init' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: init(number, number, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'init' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'init' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: init(number, number, number, number).");
if(e instanceof Promise)throw new TypeError("4th input argument in function 'init' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof e)throw new TypeError("4th input argument '"+e+"' in function 'init' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: init(number, number, number, number).");return b.messageHandler.sendWithPromise("colorPtInit",{x:a,y:c,z:d,w:e},this.userPriority).then(function(a){if("0"==a)return null;a=new b.ColorPt(a);
createdObjects.push({name:a.name,id:a.id});return a})};b.ColorPt.prototype.assign=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'assign'. Expected 1 argument. Function Signature: assign(ColorPt)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'assign' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.ColorPt)&&"ColorPt"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'assign' is of type '"+
a.name+"'. Expected type 'ColorPt'. Function Signature: assign(ColorPt).");throw new TypeError("1st input argument '"+a+"' in function 'assign' is of type '"+typeof a+"'. Expected type 'ColorPt'. Function Signature: assign(ColorPt).");}if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'assign'. Perhaps a yield statement is required for "+this.yieldFunction+"?");if("undefined"!=
typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'assign'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");var c=this;this.yieldFunction="ColorPt.assign";return b.messageHandler.sendWithPromise("ColorPt.assign",{left:this.id,right:a.id},this.userPriority).then(function(a){c.yieldFunction=void 0;copyFunc(a.left,c)})};b.ColorPt.prototype.compare=
function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'compare'. Expected 1 argument. Function Signature: compare(ColorPt)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'compare' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.ColorPt)&&"ColorPt"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'compare' is of type '"+a.name+"'. Expected type 'ColorPt'. Function Signature: compare(ColorPt).");
throw new TypeError("1st input argument '"+a+"' in function 'compare' is of type '"+typeof a+"'. Expected type 'ColorPt'. Function Signature: compare(ColorPt).");}if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'compare'. Perhaps a yield statement is required for "+this.yieldFunction+"?");if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+
"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'compare'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("ColorPt.compare",{left:this.id,right:a.id},this.userPriority)};b.ColorPt.prototype.destroy=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");
if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'destroy'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction="ColorPt.destroy";for(var c=-1,d=createdObjects.length-1;0<=d;d--)if(createdObjects[d].id==this.id){c=d;break}if(-1!=c)for(createdObjects.splice(c,1),d=deallocStackCounter.length-1;0<=d;d--)if(c<deallocStackCounter[d])--deallocStackCounter[d];
else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("ColorPt.destroy",{auto_dealloc_obj:this.id},this.userPriority).then(function(b){a.yieldFunction=void 0})};b.ColorPt.prototype.set=function(a,c,d,e){"undefined"===typeof a&&(a=0);"undefined"===typeof c&&(c=0);"undefined"===typeof d&&(d=0);"undefined"===typeof e&&(e=0);if(4<arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'set'. Expected at most 4 arguments. Function Signature: set(number, number, number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'set' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'set' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: set(number, number, number, number).");if(c instanceof
Promise)throw new TypeError("2nd input argument in function 'set' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'set' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: set(number, number, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'set' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'set' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: set(number, number, number, number).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'set' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof e)throw new TypeError("4th input argument '"+e+"' in function 'set' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: set(number, number, number, number).");
if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'set'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var f=this;this.yieldFunction="ColorPt.set";return b.messageHandler.sendWithPromise("ColorPt.set",{cp:this.id,x:a,y:c,z:d,w:e},this.userPriority).then(function(a){f.yieldFunction=void 0;copyFunc(a.cp,f)})};b.ColorPt.prototype.setByIndex=function(a,
c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setByIndex'. Expected 2 arguments. Function Signature: setByIndex(number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setByIndex' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setByIndex' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setByIndex(number, number).");
if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setByIndex' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setByIndex' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: setByIndex(number, number).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'setByIndex'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");var d=this;this.yieldFunction="ColorPt.setByIndex";return b.messageHandler.sendWithPromise("ColorPt.setByIndex",{cp:this.id,colorant_index:a,colorant_value:c},this.userPriority).then(function(a){d.yieldFunction=void 0;copyFunc(a.cp,d)})};b.ColorPt.prototype.get=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'get'. Expected 1 argument. Function Signature: get(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'get' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'get' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: get(number).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'get'. Perhaps a yield statement is required for "+this.yieldFunction+"?");return b.messageHandler.sendWithPromise("ColorPt.get",{cp:this.id,colorant_index:a},
this.userPriority)};b.ColorPt.prototype.setColorantNum=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setColorantNum'. Expected 1 argument. Function Signature: setColorantNum(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setColorantNum' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setColorantNum' is of type '"+
typeof a+"'. Expected type 'number'. Function Signature: setColorantNum(number).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'setColorantNum'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var c=this;this.yieldFunction="ColorPt.setColorantNum";return b.messageHandler.sendWithPromise("ColorPt.setColorantNum",{cp:this.id,num:a},this.userPriority).then(function(a){c.yieldFunction=
void 0;copyFunc(a.cp,c)})};b.ColorSpace.createDeviceGray=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createDeviceGray'. Expected 0 arguments. Function Signature: createDeviceGray()");return b.messageHandler.sendWithPromise("colorSpaceCreateDeviceGray",{},this.userPriority).then(function(a){if("0"==a)return null;a=new b.ColorSpace(a);createdObjects.push({name:a.name,id:a.id});return a})};b.ColorSpace.createDeviceRGB=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'createDeviceRGB'. Expected 0 arguments. Function Signature: createDeviceRGB()");return b.messageHandler.sendWithPromise("colorSpaceCreateDeviceRGB",{},this.userPriority).then(function(a){if("0"==a)return null;a=new b.ColorSpace(a);createdObjects.push({name:a.name,id:a.id});return a})};b.ColorSpace.createDeviceCMYK=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createDeviceCMYK'. Expected 0 arguments. Function Signature: createDeviceCMYK()");
return b.messageHandler.sendWithPromise("colorSpaceCreateDeviceCMYK",{},this.userPriority).then(function(a){if("0"==a)return null;a=new b.ColorSpace(a);createdObjects.push({name:a.name,id:a.id});return a})};b.ColorSpace.createPattern=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createPattern'. Expected 0 arguments. Function Signature: createPattern()");return b.messageHandler.sendWithPromise("colorSpaceCreatePattern",{},this.userPriority).then(function(a){if("0"==
a)return null;a=new b.ColorSpace(a);createdObjects.push({name:a.name,id:a.id});return a})};b.ColorSpace.create=function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected at most 1 arguments. Function Signature: create(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: create(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: create(Obj).");}return b.messageHandler.sendWithPromise("colorSpaceCreate",{color_space:a.id},this.userPriority).then(function(a){if("0"==a)return null;a=new b.ColorSpace(a);
createdObjects.push({name:a.name,id:a.id});return a})};b.ColorSpace.createICCFromFilter=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createICCFromFilter'. Expected 2 arguments. Function Signature: createICCFromFilter(SDFDoc, Filter)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createICCFromFilter' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||
a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createICCFromFilter' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: createICCFromFilter(SDFDoc, Filter).");throw new TypeError("1st input argument '"+a+"' in function 'createICCFromFilter' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: createICCFromFilter(SDFDoc, Filter).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createICCFromFilter' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.Filter)){if("object"==typeof c)throw new TypeError("2nd input argument in function 'createICCFromFilter' is of type '"+c.name+"'. Expected type 'Filter'. Function Signature: createICCFromFilter(SDFDoc, Filter).");throw new TypeError("2nd input argument '"+c+"' in function 'createICCFromFilter' is of type '"+typeof c+"'. Expected type 'Filter'. Function Signature: createICCFromFilter(SDFDoc, Filter).");}var d=-1;if(0!=c.id){for(var e=createdObjects.length-1;0<=e;e--)if(createdObjects[e].id==
c.id){d=e;break}if(-1!=d)for(createdObjects.splice(d,1),e=deallocStackCounter.length-1;0<=e;e--)if(deallocStackCounter[e]>d)--deallocStackCounter[e];else break;else console.log("[WARNING] Object to remove ownership from was not found in memory deallocation list. Decallocating may cause errors.")}return b.messageHandler.sendWithPromise("colorSpaceCreateICCFromFilter",{doc:a.id,no_own_filter:c.id},this.userPriority).then(function(a){if("0"==a)return null;a=new b.ColorSpace(a);createdObjects.push({name:a.name,
id:a.id});return a})};b.ColorSpace.createICCFromBuffer=function(a,c){c instanceof Array&&(c=new Float64Array(c));if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createICCFromBuffer'. Expected 2 arguments. Function Signature: createICCFromBuffer(SDFDoc, ArrayBuffer)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createICCFromBuffer' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof
b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createICCFromBuffer' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: createICCFromBuffer(SDFDoc, ArrayBuffer).");throw new TypeError("1st input argument '"+a+"' in function 'createICCFromBuffer' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: createICCFromBuffer(SDFDoc, ArrayBuffer).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createICCFromBuffer' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!h.isArrayBuffer(c.buffer)){if("object"==typeof c)throw new TypeError("2nd input argument in function 'createICCFromBuffer' is of type '"+c.name+"'. Expected type 'ArrayBuffer'. Function Signature: createICCFromBuffer(SDFDoc, ArrayBuffer).");throw new TypeError("2nd input argument '"+c+"' in function 'createICCFromBuffer' is of type '"+typeof c+"'. Expected type 'ArrayBuffer'. Function Signature: createICCFromBuffer(SDFDoc, ArrayBuffer).");}return b.messageHandler.sendWithPromise("colorSpaceCreateICCFromBuffer",
{doc:a.id,buf:c.buffer},this.userPriority).then(function(a){if("0"==a)return null;a=new b.ColorSpace(a);createdObjects.push({name:a.name,id:a.id});return a})};b.ColorSpace.prototype.assign=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'assign'. Expected 1 argument. Function Signature: assign(ColorSpace)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'assign' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.ColorSpace)){if("object"==typeof a)throw new TypeError("1st input argument in function 'assign' is of type '"+a.name+"'. Expected type 'ColorSpace'. Function Signature: assign(ColorSpace).");throw new TypeError("1st input argument '"+a+"' in function 'assign' is of type '"+typeof a+"'. Expected type 'ColorSpace'. Function Signature: assign(ColorSpace).");}return b.messageHandler.sendWithPromise("ColorSpace.assign",{left:this.id,right:a.id},this.userPriority)};b.ColorSpace.prototype.destroy=
function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");
return b.messageHandler.sendWithPromise("ColorSpace.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.ColorSpace.getComponentNumFromObj=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getComponentNumFromObj'. Expected 2 arguments. Function Signature: getComponentNumFromObj(number, Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getComponentNumFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getComponentNumFromObj' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getComponentNumFromObj(number, Obj).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'getComponentNumFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Obj)){if("object"==typeof c)throw new TypeError("2nd input argument in function 'getComponentNumFromObj' is of type '"+
c.name+"'. Expected type 'Obj'. Function Signature: getComponentNumFromObj(number, Obj).");throw new TypeError("2nd input argument '"+c+"' in function 'getComponentNumFromObj' is of type '"+typeof c+"'. Expected type 'Obj'. Function Signature: getComponentNumFromObj(number, Obj).");}return b.messageHandler.sendWithPromise("colorSpaceGetComponentNumFromObj",{cs_type:a,cs_obj:c.id},this.userPriority)};b.ColorSpace.getTypeFromObj=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getTypeFromObj'. Expected 1 argument. Function Signature: getTypeFromObj(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getTypeFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'getTypeFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: getTypeFromObj(Obj).");throw new TypeError("1st input argument '"+
a+"' in function 'getTypeFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: getTypeFromObj(Obj).");}return b.messageHandler.sendWithPromise("colorSpaceGetTypeFromObj",{cs_obj:a.id},this.userPriority)};b.ColorSpace.prototype.getType=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getType'. Expected 0 arguments. Function Signature: getType()");return b.messageHandler.sendWithPromise("ColorSpace.getType",{cs:this.id},
this.userPriority)};b.ColorSpace.prototype.getSDFObj=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSDFObj'. Expected 0 arguments. Function Signature: getSDFObj()");return b.messageHandler.sendWithPromise("ColorSpace.getSDFObj",{cs:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.ColorSpace.prototype.getComponentNum=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getComponentNum'. Expected 0 arguments. Function Signature: getComponentNum()");
return b.messageHandler.sendWithPromise("ColorSpace.getComponentNum",{cs:this.id},this.userPriority)};b.ColorSpace.prototype.initColor=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'initColor'. Expected 0 arguments. Function Signature: initColor()");var a=this;this.yieldFunction="ColorSpace.initColor";return b.messageHandler.sendWithPromise("ColorSpace.initColor",{cs:this.id},this.userPriority).then(function(b){a.yieldFunction=void 0;copyFunc(b.out_colorants,
a)})};b.ColorSpace.prototype.initComponentRanges=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'initComponentRanges'. Expected 1 argument. Function Signature: initComponentRanges(number)");if(a instanceof Promise)throw new TypeError("3rd input argument in function 'initComponentRanges' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("3rd input argument '"+a+"' in function 'initComponentRanges' is of type '"+
typeof a+"'. Expected type 'number'. Function Signature: initComponentRanges(number).");return b.messageHandler.sendWithPromise("ColorSpace.initComponentRanges",{cs:this.id,num_comps:a},this.userPriority)};b.ColorSpace.prototype.convert2Gray=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'convert2Gray'. Expected 1 argument. Function Signature: convert2Gray(ColorPt)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'convert2Gray' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.ColorPt)&&"ColorPt"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'convert2Gray' is of type '"+a.name+"'. Expected type 'ColorPt'. Function Signature: convert2Gray(ColorPt).");throw new TypeError("1st input argument '"+a+"' in function 'convert2Gray' is of type '"+typeof a+"'. Expected type 'ColorPt'. Function Signature: convert2Gray(ColorPt).");}if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'convert2Gray'. Perhaps a yield statement is required for '"+
a.yieldFunction+"'?");var c=this;this.yieldFunction="ColorSpace.convert2Gray";return b.messageHandler.sendWithPromise("ColorSpace.convert2Gray",{cs:this.id,in_color:a.id},this.userPriority).then(function(a){c.yieldFunction=void 0;copyFunc(a.out_color,c)})};b.ColorSpace.prototype.convert2RGB=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'convert2RGB'. Expected 1 argument. Function Signature: convert2RGB(ColorPt)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'convert2RGB' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.ColorPt)&&"ColorPt"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'convert2RGB' is of type '"+a.name+"'. Expected type 'ColorPt'. Function Signature: convert2RGB(ColorPt).");throw new TypeError("1st input argument '"+a+"' in function 'convert2RGB' is of type '"+typeof a+"'. Expected type 'ColorPt'. Function Signature: convert2RGB(ColorPt).");}if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'convert2RGB'. Perhaps a yield statement is required for '"+
a.yieldFunction+"'?");var c=this;this.yieldFunction="ColorSpace.convert2RGB";return b.messageHandler.sendWithPromise("ColorSpace.convert2RGB",{cs:this.id,in_color:a.id},this.userPriority).then(function(a){c.yieldFunction=void 0;copyFunc(a.out_color,c)})};b.ColorSpace.prototype.convert2CMYK=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'convert2CMYK'. Expected 1 argument. Function Signature: convert2CMYK(ColorPt)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'convert2CMYK' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.ColorPt)&&"ColorPt"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'convert2CMYK' is of type '"+a.name+"'. Expected type 'ColorPt'. Function Signature: convert2CMYK(ColorPt).");throw new TypeError("1st input argument '"+a+"' in function 'convert2CMYK' is of type '"+typeof a+"'. Expected type 'ColorPt'. Function Signature: convert2CMYK(ColorPt).");}if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'convert2CMYK'. Perhaps a yield statement is required for '"+
a.yieldFunction+"'?");var c=this;this.yieldFunction="ColorSpace.convert2CMYK";return b.messageHandler.sendWithPromise("ColorSpace.convert2CMYK",{cs:this.id,in_color:a.id},this.userPriority).then(function(a){c.yieldFunction=void 0;copyFunc(a.out_color,c)})};b.ColorSpace.prototype.getAlternateColorSpace=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getAlternateColorSpace'. Expected 0 arguments. Function Signature: getAlternateColorSpace()");
return b.messageHandler.sendWithPromise("ColorSpace.getAlternateColorSpace",{cs:this.id},this.userPriority).then(function(a){if("0"==a)return null;a=new b.ColorSpace(a);createdObjects.push({name:a.name,id:a.id});return a})};b.ColorSpace.prototype.getBaseColorSpace=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getBaseColorSpace'. Expected 0 arguments. Function Signature: getBaseColorSpace()");return b.messageHandler.sendWithPromise("ColorSpace.getBaseColorSpace",
{cs:this.id},this.userPriority).then(function(a){if("0"==a)return null;a=new b.ColorSpace(a);createdObjects.push({name:a.name,id:a.id});return a})};b.ColorSpace.prototype.getHighVal=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getHighVal'. Expected 0 arguments. Function Signature: getHighVal()");return b.messageHandler.sendWithPromise("ColorSpace.getHighVal",{cs:this.id},this.userPriority)};b.ColorSpace.prototype.getLookupTable=function(){if(0!=
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getLookupTable'. Expected 0 arguments. Function Signature: getLookupTable()");return b.messageHandler.sendWithPromise("ColorSpace.getLookupTable",{cs:this.id},this.userPriority)};b.ColorSpace.prototype.getBaseColor=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getBaseColor'. Expected 1 argument. Function Signature: getBaseColor(number)");if(a instanceof
Promise)throw new TypeError("1st input argument in function 'getBaseColor' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getBaseColor' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getBaseColor(number).");var c=this;this.yieldFunction="ColorSpace.getBaseColor";return b.messageHandler.sendWithPromise("ColorSpace.getBaseColor",{cs:this.id,color_idx:a},this.userPriority).then(function(a){c.yieldFunction=
void 0;copyFunc(a.out_color,c)})};b.ColorSpace.prototype.getTintFunction=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTintFunction'. Expected 0 arguments. Function Signature: getTintFunction()");return b.messageHandler.sendWithPromise("ColorSpace.getTintFunction",{cs:this.id},this.userPriority).then(function(a){if("0"==a)return null;a=new b.Function(a);createdObjects.push({name:a.name,id:a.id});return a})};b.ColorSpace.prototype.isAll=
function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isAll'. Expected 0 arguments. Function Signature: isAll()");return b.messageHandler.sendWithPromise("ColorSpace.isAll",{cs:this.id},this.userPriority)};b.ColorSpace.prototype.isNone=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isNone'. Expected 0 arguments. Function Signature: isNone()");return b.messageHandler.sendWithPromise("ColorSpace.isNone",
{cs:this.id},this.userPriority)};b.ContentReplacer.create=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 0 arguments. Function Signature: create()");return b.messageHandler.sendWithPromise("contentReplacerCreate",{},this.userPriority).then(function(a){if("0"==a)return null;a=new b.ContentReplacer(a);createdObjects.push({name:a.name,id:a.id});return a})};b.ContentReplacer.prototype.destroy=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("ContentReplacer.destroy",
{auto_dealloc_obj:this.id},this.userPriority)};b.ContentReplacer.prototype.addImage=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'addImage'. Expected 2 arguments. Function Signature: addImage(Rect, Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'addImage' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Rect)&&"Rect"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'addImage' is of type '"+
a.name+"'. Expected type 'Rect'. Function Signature: addImage(Rect, Obj).");throw new TypeError("1st input argument '"+a+"' in function 'addImage' is of type '"+typeof a+"'. Expected type 'Rect'. Function Signature: addImage(Rect, Obj).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'addImage' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Obj)){if("object"==typeof c)throw new TypeError("2nd input argument in function 'addImage' is of type '"+
c.name+"'. Expected type 'Obj'. Function Signature: addImage(Rect, Obj).");throw new TypeError("2nd input argument '"+c+"' in function 'addImage' is of type '"+typeof c+"'. Expected type 'Obj'. Function Signature: addImage(Rect, Obj).");}if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'addImage'. Perhaps a yield statement is required for '"+
a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("ContentReplacer.addImage",{cr:this.id,target_region:a,replacement_image:c.id},this.userPriority)};b.ContentReplacer.prototype.addText=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'addText'. Expected 2 arguments. Function Signature: addText(Rect, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'addText' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Rect)&&"Rect"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'addText' is of type '"+a.name+"'. Expected type 'Rect'. Function Signature: addText(Rect, string).");throw new TypeError("1st input argument '"+a+"' in function 'addText' is of type '"+typeof a+"'. Expected type 'Rect'. Function Signature: addText(Rect, string).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'addText' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'addText' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: addText(Rect, string).");if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'addText'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("ContentReplacer.addText",
{cr:this.id,target_region:a,replacement_text:c},this.userPriority)};b.ContentReplacer.prototype.addString=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'addString'. Expected 2 arguments. Function Signature: addString(string, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'addString' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'addString' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: addString(string, string).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'addString' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'addString' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: addString(string, string).");return b.messageHandler.sendWithPromise("ContentReplacer.addString",
{cr:this.id,template_text:a,replacement_text:c},this.userPriority)};b.ContentReplacer.prototype.setMatchStrings=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setMatchStrings'. Expected 2 arguments. Function Signature: setMatchStrings(string, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setMatchStrings' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=
typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setMatchStrings' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setMatchStrings(string, string).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setMatchStrings' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setMatchStrings' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: setMatchStrings(string, string).");
return b.messageHandler.sendWithPromise("ContentReplacer.setMatchStrings",{cr:this.id,start_str:a,end_str:c},this.userPriority)};b.ContentReplacer.prototype.process=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'process'. Expected 1 argument. Function Signature: process(Page)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'process' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Page)){if("object"==typeof a)throw new TypeError("1st input argument in function 'process' is of type '"+a.name+"'. Expected type 'Page'. Function Signature: process(Page).");throw new TypeError("1st input argument '"+a+"' in function 'process' is of type '"+typeof a+"'. Expected type 'Page'. Function Signature: process(Page).");}return b.messageHandler.sendWithPromise("ContentReplacer.process",{cr:this.id,page:a.id},this.userPriority)};b.getFullMessage=function(a){if(1<arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getFullMessage'. Expected at most 1 arguments. Function Signature: getFullMessage(void*)");return b.messageHandler.sendWithPromise("getFullMessage",{e:a},this.userPriority)};b.DocumentConversion.prototype.getDoc=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getDoc'. Expected 0 arguments. Function Signature: getDoc()");return b.messageHandler.sendWithPromise("DocumentConversion.getDoc",{self:this.id},this.userPriority).then(function(a){if("0"==
a)return null;a=new b.PDFDoc(a);createdObjects.push({name:a.name,id:a.id});return a})};b.DocumentConversion.prototype.isCancelled=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isCancelled'. Expected 0 arguments. Function Signature: isCancelled()");return b.messageHandler.sendWithPromise("DocumentConversion.isCancelled",{self:this.id},this.userPriority)};b.DocumentConversion.prototype.getNumConvertedPages=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getNumConvertedPages'. Expected 0 arguments. Function Signature: getNumConvertedPages()");return b.messageHandler.sendWithPromise("DocumentConversion.getNumConvertedPages",{self:this.id},this.userPriority)};b.Convert.fromXpsMem=function(a,c){c instanceof Array&&(c=new Float64Array(c));if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'fromXpsMem'. Expected 2 arguments. Function Signature: fromXpsMem(PDFDoc, ArrayBuffer)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'fromXpsMem' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'fromXpsMem' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: fromXpsMem(PDFDoc, ArrayBuffer).");throw new TypeError("1st input argument '"+a+"' in function 'fromXpsMem' is of type '"+
typeof a+"'. Expected type 'PDFDoc'. Function Signature: fromXpsMem(PDFDoc, ArrayBuffer).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'fromXpsMem' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!h.isArrayBuffer(c.buffer)){if("object"==typeof c)throw new TypeError("2nd input argument in function 'fromXpsMem' is of type '"+c.name+"'. Expected type 'ArrayBuffer'. Function Signature: fromXpsMem(PDFDoc, ArrayBuffer).");throw new TypeError("2nd input argument '"+
c+"' in function 'fromXpsMem' is of type '"+typeof c+"'. Expected type 'ArrayBuffer'. Function Signature: fromXpsMem(PDFDoc, ArrayBuffer).");}return b.messageHandler.sendWithPromise("convertFromXpsMem",{in_pdfdoc:a.id,buf:c.buffer},this.userPriority)};b.ConversionMonitor.prototype.next=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'next'. Expected 0 arguments. Function Signature: next()");return b.messageHandler.sendWithPromise("ConversionMonitor.next",
{conversionMonitor:this.id},this.userPriority)};b.ConversionMonitor.prototype.ready=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'ready'. Expected 0 arguments. Function Signature: ready()");return b.messageHandler.sendWithPromise("ConversionMonitor.ready",{conversionMonitor:this.id},this.userPriority)};b.ConversionMonitor.prototype.progress=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'progress'. Expected 0 arguments. Function Signature: progress()");
return b.messageHandler.sendWithPromise("ConversionMonitor.progress",{conversionMonitor:this.id},this.userPriority)};b.ConversionMonitor.prototype.filter=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'filter'. Expected 0 arguments. Function Signature: filter()");return b.messageHandler.sendWithPromise("ConversionMonitor.filter",{conversionMonitor:this.id},this.userPriority).then(function(a){if("0"==a)return null;a=new b.Filter(a);createdObjects.push({name:a.name,
id:a.id});return a})};b.ConversionMonitor.prototype.destroy=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");
return b.messageHandler.sendWithPromise("ConversionMonitor.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.Convert.officeToPdfWithPath=function(a,c,d){if(3!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'officeToPdfWithPath'. Expected 3 arguments. Function Signature: officeToPdfWithPath(PDFDoc, string, Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'officeToPdfWithPath' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'officeToPdfWithPath' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: officeToPdfWithPath(PDFDoc, string, Obj).");throw new TypeError("1st input argument '"+a+"' in function 'officeToPdfWithPath' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: officeToPdfWithPath(PDFDoc, string, Obj).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'officeToPdfWithPath' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'officeToPdfWithPath' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: officeToPdfWithPath(PDFDoc, string, Obj).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'officeToPdfWithPath' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(d instanceof b.Obj)){if("object"==typeof d)throw new TypeError("3rd input argument in function 'officeToPdfWithPath' is of type '"+
d.name+"'. Expected type 'Obj'. Function Signature: officeToPdfWithPath(PDFDoc, string, Obj).");throw new TypeError("3rd input argument '"+d+"' in function 'officeToPdfWithPath' is of type '"+typeof d+"'. Expected type 'Obj'. Function Signature: officeToPdfWithPath(PDFDoc, string, Obj).");}return b.messageHandler.sendWithPromise("convertOfficeToPdfWithPath",{in_pdfdoc:a.id,in_filename:c,options:d.id},this.userPriority)};b.Convert.streamingPdfConversionWithPath=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'streamingPdfConversionWithPath'. Expected 2 arguments. Function Signature: streamingPdfConversionWithPath(string, Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'streamingPdfConversionWithPath' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'streamingPdfConversionWithPath' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: streamingPdfConversionWithPath(string, Obj).");
if(c instanceof Promise)throw new TypeError("2nd input argument in function 'streamingPdfConversionWithPath' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Obj)){if("object"==typeof c)throw new TypeError("2nd input argument in function 'streamingPdfConversionWithPath' is of type '"+c.name+"'. Expected type 'Obj'. Function Signature: streamingPdfConversionWithPath(string, Obj).");throw new TypeError("2nd input argument '"+c+"' in function 'streamingPdfConversionWithPath' is of type '"+
typeof c+"'. Expected type 'Obj'. Function Signature: streamingPdfConversionWithPath(string, Obj).");}return b.messageHandler.sendWithPromise("convertStreamingPdfConversionWithPath",{in_filename:a,options:c.id},this.userPriority).then(function(a){return"0"==a?null:new b.DocumentConversion(a)})};b.Convert.streamingPdfConversionWithPdfAndPath=function(a,c,d){if(3!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'streamingPdfConversionWithPdfAndPath'. Expected 3 arguments. Function Signature: streamingPdfConversionWithPdfAndPath(PDFDoc, string, Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'streamingPdfConversionWithPdfAndPath' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'streamingPdfConversionWithPdfAndPath' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: streamingPdfConversionWithPdfAndPath(PDFDoc, string, Obj).");
throw new TypeError("1st input argument '"+a+"' in function 'streamingPdfConversionWithPdfAndPath' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: streamingPdfConversionWithPdfAndPath(PDFDoc, string, Obj).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'streamingPdfConversionWithPdfAndPath' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'streamingPdfConversionWithPdfAndPath' is of type '"+
typeof c+"'. Expected type 'string'. Function Signature: streamingPdfConversionWithPdfAndPath(PDFDoc, string, Obj).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'streamingPdfConversionWithPdfAndPath' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(d instanceof b.Obj)){if("object"==typeof d)throw new TypeError("3rd input argument in function 'streamingPdfConversionWithPdfAndPath' is of type '"+d.name+"'. Expected type 'Obj'. Function Signature: streamingPdfConversionWithPdfAndPath(PDFDoc, string, Obj).");
throw new TypeError("3rd input argument '"+d+"' in function 'streamingPdfConversionWithPdfAndPath' is of type '"+typeof d+"'. Expected type 'Obj'. Function Signature: streamingPdfConversionWithPdfAndPath(PDFDoc, string, Obj).");}return b.messageHandler.sendWithPromise("convertStreamingPdfConversionWithPdfAndPath",{in_pdfdoc:a,in_filename:c,options:d.id},this.userPriority).then(function(a){return"0"==a?null:new b.DocumentConversion(a)})};b.Convert.officeToPdfWithFilter=function(a,c,d){if(3!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'officeToPdfWithFilter'. Expected 3 arguments. Function Signature: officeToPdfWithFilter(PDFDoc, Filter, Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'officeToPdfWithFilter' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'officeToPdfWithFilter' is of type '"+
a.name+"'. Expected type 'PDFDoc'. Function Signature: officeToPdfWithFilter(PDFDoc, Filter, Obj).");throw new TypeError("1st input argument '"+a+"' in function 'officeToPdfWithFilter' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: officeToPdfWithFilter(PDFDoc, Filter, Obj).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'officeToPdfWithFilter' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof
b.Filter)){if("object"==typeof c)throw new TypeError("2nd input argument in function 'officeToPdfWithFilter' is of type '"+c.name+"'. Expected type 'Filter'. Function Signature: officeToPdfWithFilter(PDFDoc, Filter, Obj).");throw new TypeError("2nd input argument '"+c+"' in function 'officeToPdfWithFilter' is of type '"+typeof c+"'. Expected type 'Filter'. Function Signature: officeToPdfWithFilter(PDFDoc, Filter, Obj).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'officeToPdfWithFilter' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(d instanceof b.Obj)){if("object"==typeof d)throw new TypeError("3rd input argument in function 'officeToPdfWithFilter' is of type '"+d.name+"'. Expected type 'Obj'. Function Signature: officeToPdfWithFilter(PDFDoc, Filter, Obj).");throw new TypeError("3rd input argument '"+d+"' in function 'officeToPdfWithFilter' is of type '"+typeof d+"'. Expected type 'Obj'. Function Signature: officeToPdfWithFilter(PDFDoc, Filter, Obj).");}var e=-1;if(0!=c.id){for(var f=createdObjects.length-1;0<=f;f--)if(createdObjects[f].id==
c.id){e=f;break}if(-1!=e)for(createdObjects.splice(e,1),f=deallocStackCounter.length-1;0<=f;f--)if(deallocStackCounter[f]>e)--deallocStackCounter[f];else break;else console.log("[WARNING] Object to remove ownership from was not found in memory deallocation list. Decallocating may cause errors.")}return b.messageHandler.sendWithPromise("convertOfficeToPdfWithFilter",{in_pdfdoc:a.id,no_own_in_data:c.id,options:d.id},this.userPriority)};b.Convert.streamingPdfConversionWithFilter=function(a,c){if(2!=
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'streamingPdfConversionWithFilter'. Expected 2 arguments. Function Signature: streamingPdfConversionWithFilter(Filter, Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'streamingPdfConversionWithFilter' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Filter)){if("object"==typeof a)throw new TypeError("1st input argument in function 'streamingPdfConversionWithFilter' is of type '"+
a.name+"'. Expected type 'Filter'. Function Signature: streamingPdfConversionWithFilter(Filter, Obj).");throw new TypeError("1st input argument '"+a+"' in function 'streamingPdfConversionWithFilter' is of type '"+typeof a+"'. Expected type 'Filter'. Function Signature: streamingPdfConversionWithFilter(Filter, Obj).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'streamingPdfConversionWithFilter' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.Obj)){if("object"==typeof c)throw new TypeError("2nd input argument in function 'streamingPdfConversionWithFilter' is of type '"+c.name+"'. Expected type 'Obj'. Function Signature: streamingPdfConversionWithFilter(Filter, Obj).");throw new TypeError("2nd input argument '"+c+"' in function 'streamingPdfConversionWithFilter' is of type '"+typeof c+"'. Expected type 'Obj'. Function Signature: streamingPdfConversionWithFilter(Filter, Obj).");}var d=-1;if(0!=a.id){for(var e=createdObjects.length-
1;0<=e;e--)if(createdObjects[e].id==a.id){d=e;break}if(-1!=d)for(createdObjects.splice(d,1),e=deallocStackCounter.length-1;0<=e;e--)if(deallocStackCounter[e]>d)--deallocStackCounter[e];else break;else console.log("[WARNING] Object to remove ownership from was not found in memory deallocation list. Decallocating may cause errors.")}return b.messageHandler.sendWithPromise("convertStreamingPdfConversionWithFilter",{no_own_in_data:a.id,options:c.id},this.userPriority).then(function(a){return"0"==a?null:
new b.DocumentConversion(a)})};b.Convert.streamingPdfConversionWithPdfAndFilter=function(a,c,d){if(3!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'streamingPdfConversionWithPdfAndFilter'. Expected 3 arguments. Function Signature: streamingPdfConversionWithPdfAndFilter(PDFDoc, Filter, Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'streamingPdfConversionWithPdfAndFilter' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'streamingPdfConversionWithPdfAndFilter' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: streamingPdfConversionWithPdfAndFilter(PDFDoc, Filter, Obj).");throw new TypeError("1st input argument '"+a+"' in function 'streamingPdfConversionWithPdfAndFilter' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: streamingPdfConversionWithPdfAndFilter(PDFDoc, Filter, Obj).");
}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'streamingPdfConversionWithPdfAndFilter' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Filter)){if("object"==typeof c)throw new TypeError("2nd input argument in function 'streamingPdfConversionWithPdfAndFilter' is of type '"+c.name+"'. Expected type 'Filter'. Function Signature: streamingPdfConversionWithPdfAndFilter(PDFDoc, Filter, Obj).");throw new TypeError("2nd input argument '"+
c+"' in function 'streamingPdfConversionWithPdfAndFilter' is of type '"+typeof c+"'. Expected type 'Filter'. Function Signature: streamingPdfConversionWithPdfAndFilter(PDFDoc, Filter, Obj).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'streamingPdfConversionWithPdfAndFilter' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(d instanceof b.Obj)){if("object"==typeof d)throw new TypeError("3rd input argument in function 'streamingPdfConversionWithPdfAndFilter' is of type '"+
d.name+"'. Expected type 'Obj'. Function Signature: streamingPdfConversionWithPdfAndFilter(PDFDoc, Filter, Obj).");throw new TypeError("3rd input argument '"+d+"' in function 'streamingPdfConversionWithPdfAndFilter' is of type '"+typeof d+"'. Expected type 'Obj'. Function Signature: streamingPdfConversionWithPdfAndFilter(PDFDoc, Filter, Obj).");}var e=-1;if(0!=c.id){for(var f=createdObjects.length-1;0<=f;f--)if(createdObjects[f].id==c.id){e=f;break}if(-1!=e)for(createdObjects.splice(e,1),f=deallocStackCounter.length-
1;0<=f;f--)if(deallocStackCounter[f]>e)--deallocStackCounter[f];else break;else console.log("[WARNING] Object to remove ownership from was not found in memory deallocation list. Decallocating may cause errors.")}return b.messageHandler.sendWithPromise("convertStreamingPdfConversionWithPdfAndFilter",{in_pdfdoc:a,no_own_in_data:c.id,options:d.id},this.userPriority).then(function(a){return"0"==a?null:new b.DocumentConversion(a)})};b.Date.init=function(a,c,d,e,f,g){if(6!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'init'. Expected 6 arguments. Function Signature: init(number, number, number, number, number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'init' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'init' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: init(number, number, number, number, number, number).");
if(c instanceof Promise)throw new TypeError("2nd input argument in function 'init' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'init' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: init(number, number, number, number, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'init' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'init' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: init(number, number, number, number, number, number).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'init' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof e)throw new TypeError("4th input argument '"+e+"' in function 'init' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: init(number, number, number, number, number, number).");
if(f instanceof Promise)throw new TypeError("5th input argument in function 'init' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof f)throw new TypeError("5th input argument '"+f+"' in function 'init' is of type '"+typeof f+"'. Expected type 'number'. Function Signature: init(number, number, number, number, number, number).");if(g instanceof Promise)throw new TypeError("6th input argument in function 'init' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof g)throw new TypeError("6th input argument '"+g+"' in function 'init' is of type '"+typeof g+"'. Expected type 'number'. Function Signature: init(number, number, number, number, number, number).");return b.messageHandler.sendWithPromise("dateInit",{year:a,month:c,day:d,hour:e,minute:f,second:g},this.userPriority).then(function(a){return"0"==a?null:new b.Date(a)})};b.Date.prototype.assign=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'assign'. Expected 1 argument. Function Signature: assign(Date)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'assign' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Date)&&"Date"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'assign' is of type '"+a.name+"'. Expected type 'Date'. Function Signature: assign(Date).");throw new TypeError("1st input argument '"+a+"' in function 'assign' is of type '"+typeof a+"'. Expected type 'Date'. Function Signature: assign(Date).");
}if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'assign'. Perhaps a yield statement is required for "+this.yieldFunction+"?");if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'assign'. Perhaps a yield statement is required for '"+
a.yieldFunction+"'?");var c=this;this.yieldFunction="Date.assign";return b.messageHandler.sendWithPromise("Date.assign",{left:this,right:a},this.userPriority).then(function(a){c.yieldFunction=void 0;copyFunc(a.left,c)})};b.Date.prototype.isValid=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isValid'. Expected 0 arguments. Function Signature: isValid()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+
" recently altered a struct object without yielding. That object is now being accessed by function 'isValid'. Perhaps a yield statement is required for "+this.yieldFunction+"?");return b.messageHandler.sendWithPromise("Date.isValid",{date:this},this.userPriority)};b.Date.prototype.attach=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'attach'. Expected 1 argument. Function Signature: attach(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'attach' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'attach' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: attach(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'attach' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: attach(Obj).");}if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'attach'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");var c=this;this.yieldFunction="Date.attach";return b.messageHandler.sendWithPromise("Date.attach",{date:this,d:a.id},this.userPriority).then(function(a){c.yieldFunction=void 0;copyFunc(a.date,c)})};b.Date.prototype.update=function(a){"undefined"===typeof a&&(a=new b.Obj("__null"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'update'. Expected at most 1 arguments. Function Signature: update(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'update' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'update' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: update(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'update' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: update(Obj).");}if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'update'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");var c=this;this.yieldFunction="Date.update";return b.messageHandler.sendWithPromise("Date.update",{date:this,d:a.id},this.userPriority).then(function(a){c.yieldFunction=void 0;copyFunc(a.date,c);return a.result})};b.Destination.createXYZ=function(a,c,d,e){if(4!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createXYZ'. Expected 4 arguments. Function Signature: createXYZ(Page, number, number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createXYZ' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Page)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createXYZ' is of type '"+a.name+"'. Expected type 'Page'. Function Signature: createXYZ(Page, number, number, number).");throw new TypeError("1st input argument '"+a+"' in function 'createXYZ' is of type '"+typeof a+"'. Expected type 'Page'. Function Signature: createXYZ(Page, number, number, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createXYZ' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createXYZ' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: createXYZ(Page, number, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createXYZ' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'createXYZ' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: createXYZ(Page, number, number, number).");
if(e instanceof Promise)throw new TypeError("4th input argument in function 'createXYZ' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof e)throw new TypeError("4th input argument '"+e+"' in function 'createXYZ' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: createXYZ(Page, number, number, number).");return b.messageHandler.sendWithPromise("destinationCreateXYZ",{page:a.id,left:c,top:d,zoom:e},this.userPriority).then(function(a){return"0"==
a?null:new b.Destination(a)})};b.Destination.createFit=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFit'. Expected 1 argument. Function Signature: createFit(Page)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFit' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Page)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFit' is of type '"+
a.name+"'. Expected type 'Page'. Function Signature: createFit(Page).");throw new TypeError("1st input argument '"+a+"' in function 'createFit' is of type '"+typeof a+"'. Expected type 'Page'. Function Signature: createFit(Page).");}return b.messageHandler.sendWithPromise("destinationCreateFit",{page:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.Destination(a)})};b.Destination.createFitH=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFitH'. Expected 2 arguments. Function Signature: createFitH(Page, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFitH' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Page)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFitH' is of type '"+a.name+"'. Expected type 'Page'. Function Signature: createFitH(Page, number).");throw new TypeError("1st input argument '"+a+"' in function 'createFitH' is of type '"+typeof a+"'. Expected type 'Page'. Function Signature: createFitH(Page, number).");
}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createFitH' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createFitH' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: createFitH(Page, number).");return b.messageHandler.sendWithPromise("destinationCreateFitH",{page:a.id,top:c},this.userPriority).then(function(a){return"0"==a?null:
new b.Destination(a)})};b.Destination.createFitV=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFitV'. Expected 2 arguments. Function Signature: createFitV(Page, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFitV' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Page)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFitV' is of type '"+
a.name+"'. Expected type 'Page'. Function Signature: createFitV(Page, number).");throw new TypeError("1st input argument '"+a+"' in function 'createFitV' is of type '"+typeof a+"'. Expected type 'Page'. Function Signature: createFitV(Page, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createFitV' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createFitV' is of type '"+
typeof c+"'. Expected type 'number'. Function Signature: createFitV(Page, number).");return b.messageHandler.sendWithPromise("destinationCreateFitV",{page:a.id,left:c},this.userPriority).then(function(a){return"0"==a?null:new b.Destination(a)})};b.Destination.createFitR=function(a,c,d,e,f){if(5!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFitR'. Expected 5 arguments. Function Signature: createFitR(Page, number, number, number, number)");if(a instanceof
Promise)throw new TypeError("1st input argument in function 'createFitR' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Page)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFitR' is of type '"+a.name+"'. Expected type 'Page'. Function Signature: createFitR(Page, number, number, number, number).");throw new TypeError("1st input argument '"+a+"' in function 'createFitR' is of type '"+typeof a+"'. Expected type 'Page'. Function Signature: createFitR(Page, number, number, number, number).");
}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createFitR' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createFitR' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: createFitR(Page, number, number, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createFitR' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'createFitR' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: createFitR(Page, number, number, number, number).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'createFitR' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof e)throw new TypeError("4th input argument '"+e+"' in function 'createFitR' is of type '"+typeof e+
"'. Expected type 'number'. Function Signature: createFitR(Page, number, number, number, number).");if(f instanceof Promise)throw new TypeError("5th input argument in function 'createFitR' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof f)throw new TypeError("5th input argument '"+f+"' in function 'createFitR' is of type '"+typeof f+"'. Expected type 'number'. Function Signature: createFitR(Page, number, number, number, number).");return b.messageHandler.sendWithPromise("destinationCreateFitR",
{page:a.id,left:c,bottom:d,right:e,top:f},this.userPriority).then(function(a){return"0"==a?null:new b.Destination(a)})};b.Destination.createFitB=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFitB'. Expected 1 argument. Function Signature: createFitB(Page)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFitB' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof
b.Page)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFitB' is of type '"+a.name+"'. Expected type 'Page'. Function Signature: createFitB(Page).");throw new TypeError("1st input argument '"+a+"' in function 'createFitB' is of type '"+typeof a+"'. Expected type 'Page'. Function Signature: createFitB(Page).");}return b.messageHandler.sendWithPromise("destinationCreateFitB",{page:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.Destination(a)})};b.Destination.createFitBH=
function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFitBH'. Expected 2 arguments. Function Signature: createFitBH(Page, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFitBH' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Page)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFitBH' is of type '"+a.name+
"'. Expected type 'Page'. Function Signature: createFitBH(Page, number).");throw new TypeError("1st input argument '"+a+"' in function 'createFitBH' is of type '"+typeof a+"'. Expected type 'Page'. Function Signature: createFitBH(Page, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createFitBH' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createFitBH' is of type '"+
typeof c+"'. Expected type 'number'. Function Signature: createFitBH(Page, number).");return b.messageHandler.sendWithPromise("destinationCreateFitBH",{page:a.id,top:c},this.userPriority).then(function(a){return"0"==a?null:new b.Destination(a)})};b.Destination.createFitBV=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFitBV'. Expected 2 arguments. Function Signature: createFitBV(Page, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFitBV' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Page)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFitBV' is of type '"+a.name+"'. Expected type 'Page'. Function Signature: createFitBV(Page, number).");throw new TypeError("1st input argument '"+a+"' in function 'createFitBV' is of type '"+typeof a+"'. Expected type 'Page'. Function Signature: createFitBV(Page, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createFitBV' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createFitBV' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: createFitBV(Page, number).");return b.messageHandler.sendWithPromise("destinationCreateFitBV",{page:a.id,left:c},this.userPriority).then(function(a){return"0"==a?null:new b.Destination(a)})};b.Destination.create=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 1 argument. Function Signature: create(Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: create(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: create(Obj).");
}return b.messageHandler.sendWithPromise("destinationCreate",{dest:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.Destination(a)})};b.Destination.prototype.copy=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'copy'. Expected 0 arguments. Function Signature: copy()");return b.messageHandler.sendWithPromise("Destination.copy",{d:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Destination(a)})};b.Destination.prototype.isValid=
function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isValid'. Expected 0 arguments. Function Signature: isValid()");return b.messageHandler.sendWithPromise("Destination.isValid",{dest:this.id},this.userPriority)};b.Destination.prototype.getFitType=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFitType'. Expected 0 arguments. Function Signature: getFitType()");return b.messageHandler.sendWithPromise("Destination.getFitType",
{dest:this.id},this.userPriority)};b.Destination.prototype.getPage=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPage'. Expected 0 arguments. Function Signature: getPage()");return b.messageHandler.sendWithPromise("Destination.getPage",{dest:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Page(a)})};b.Destination.prototype.setPage=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPage'. Expected 1 argument. Function Signature: setPage(Page)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPage' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Page)){if("object"==typeof a)throw new TypeError("1st input argument in function 'setPage' is of type '"+a.name+"'. Expected type 'Page'. Function Signature: setPage(Page).");throw new TypeError("1st input argument '"+a+"' in function 'setPage' is of type '"+typeof a+"'. Expected type 'Page'. Function Signature: setPage(Page).");
}return b.messageHandler.sendWithPromise("Destination.setPage",{dest:this.id,page:a.id},this.userPriority)};b.Destination.prototype.getSDFObj=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSDFObj'. Expected 0 arguments. Function Signature: getSDFObj()");return b.messageHandler.sendWithPromise("Destination.getSDFObj",{dest:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Destination.prototype.getExplicitDestObj=
function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getExplicitDestObj'. Expected 0 arguments. Function Signature: getExplicitDestObj()");return b.messageHandler.sendWithPromise("Destination.getExplicitDestObj",{dest:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.GState.prototype.getTransform=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTransform'. Expected 0 arguments. Function Signature: getTransform()");
return b.messageHandler.sendWithPromise("GState.getTransform",{gs:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Matrix2D(a)})};b.GState.prototype.getStrokeColorSpace=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getStrokeColorSpace'. Expected 0 arguments. Function Signature: getStrokeColorSpace()");return b.messageHandler.sendWithPromise("GState.getStrokeColorSpace",{gs:this.id},this.userPriority).then(function(a){if("0"==
a)return null;a=new b.ColorSpace(a);createdObjects.push({name:a.name,id:a.id});return a})};b.GState.prototype.getFillColorSpace=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFillColorSpace'. Expected 0 arguments. Function Signature: getFillColorSpace()");return b.messageHandler.sendWithPromise("GState.getFillColorSpace",{gs:this.id},this.userPriority).then(function(a){if("0"==a)return null;a=new b.ColorSpace(a);createdObjects.push({name:a.name,
id:a.id});return a})};b.GState.prototype.getStrokeColor=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getStrokeColor'. Expected 0 arguments. Function Signature: getStrokeColor()");return b.messageHandler.sendWithPromise("GState.getStrokeColor",{gs:this.id},this.userPriority).then(function(a){if("0"==a)return null;a=new b.ColorPt(a);createdObjects.push({name:a.name,id:a.id});return a})};b.GState.prototype.getStrokePattern=function(){if(0!=
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getStrokePattern'. Expected 0 arguments. Function Signature: getStrokePattern()");return b.messageHandler.sendWithPromise("GState.getStrokePattern",{gs:this.id},this.userPriority).then(function(a){if("0"==a)return null;a=new b.PatternColor(a);createdObjects.push({name:a.name,id:a.id});return a})};b.GState.prototype.getFillColor=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFillColor'. Expected 0 arguments. Function Signature: getFillColor()");
return b.messageHandler.sendWithPromise("GState.getFillColor",{gs:this.id},this.userPriority).then(function(a){if("0"==a)return null;a=new b.ColorPt(a);createdObjects.push({name:a.name,id:a.id});return a})};b.GState.prototype.getFillPattern=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFillPattern'. Expected 0 arguments. Function Signature: getFillPattern()");return b.messageHandler.sendWithPromise("GState.getFillPattern",{gs:this.id},
this.userPriority).then(function(a){if("0"==a)return null;a=new b.PatternColor(a);createdObjects.push({name:a.name,id:a.id});return a})};b.GState.prototype.getFlatness=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFlatness'. Expected 0 arguments. Function Signature: getFlatness()");return b.messageHandler.sendWithPromise("GState.getFlatness",{gs:this.id},this.userPriority)};b.GState.prototype.getLineCap=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getLineCap'. Expected 0 arguments. Function Signature: getLineCap()");return b.messageHandler.sendWithPromise("GState.getLineCap",{gs:this.id},this.userPriority)};b.GState.prototype.getLineJoin=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getLineJoin'. Expected 0 arguments. Function Signature: getLineJoin()");return b.messageHandler.sendWithPromise("GState.getLineJoin",{gs:this.id},this.userPriority)};b.GState.prototype.getLineWidth=
function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getLineWidth'. Expected 0 arguments. Function Signature: getLineWidth()");return b.messageHandler.sendWithPromise("GState.getLineWidth",{gs:this.id},this.userPriority)};b.GState.prototype.getMiterLimit=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getMiterLimit'. Expected 0 arguments. Function Signature: getMiterLimit()");return b.messageHandler.sendWithPromise("GState.getMiterLimit",
{gs:this.id},this.userPriority)};b.GState.prototype.getPhase=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPhase'. Expected 0 arguments. Function Signature: getPhase()");return b.messageHandler.sendWithPromise("GState.getPhase",{gs:this.id},this.userPriority)};b.GState.prototype.getCharSpacing=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getCharSpacing'. Expected 0 arguments. Function Signature: getCharSpacing()");
return b.messageHandler.sendWithPromise("GState.getCharSpacing",{gs:this.id},this.userPriority)};b.GState.prototype.getWordSpacing=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getWordSpacing'. Expected 0 arguments. Function Signature: getWordSpacing()");return b.messageHandler.sendWithPromise("GState.getWordSpacing",{gs:this.id},this.userPriority)};b.GState.prototype.getHorizontalScale=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getHorizontalScale'. Expected 0 arguments. Function Signature: getHorizontalScale()");return b.messageHandler.sendWithPromise("GState.getHorizontalScale",{gs:this.id},this.userPriority)};b.GState.prototype.getLeading=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getLeading'. Expected 0 arguments. Function Signature: getLeading()");return b.messageHandler.sendWithPromise("GState.getLeading",{gs:this.id},this.userPriority)};
b.GState.prototype.getFont=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFont'. Expected 0 arguments. Function Signature: getFont()");return b.messageHandler.sendWithPromise("GState.getFont",{gs:this.id},this.userPriority).then(function(a){if("0"==a)return null;a=new b.Font(a);createdObjects.push({name:a.name,id:a.id});return a})};b.GState.prototype.getFontSize=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFontSize'. Expected 0 arguments. Function Signature: getFontSize()");
return b.messageHandler.sendWithPromise("GState.getFontSize",{gs:this.id},this.userPriority)};b.GState.prototype.getTextRenderMode=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTextRenderMode'. Expected 0 arguments. Function Signature: getTextRenderMode()");return b.messageHandler.sendWithPromise("GState.getTextRenderMode",{gs:this.id},this.userPriority)};b.GState.prototype.getTextRise=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getTextRise'. Expected 0 arguments. Function Signature: getTextRise()");return b.messageHandler.sendWithPromise("GState.getTextRise",{gs:this.id},this.userPriority)};b.GState.prototype.isTextKnockout=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isTextKnockout'. Expected 0 arguments. Function Signature: isTextKnockout()");return b.messageHandler.sendWithPromise("GState.isTextKnockout",{gs:this.id},this.userPriority)};
b.GState.prototype.getRenderingIntent=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getRenderingIntent'. Expected 0 arguments. Function Signature: getRenderingIntent()");return b.messageHandler.sendWithPromise("GState.getRenderingIntent",{gs:this.id},this.userPriority)};b.GState.getRenderingIntentType=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getRenderingIntentType'. Expected 1 argument. Function Signature: getRenderingIntentType(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'getRenderingIntentType' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getRenderingIntentType' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: getRenderingIntentType(string).");return b.messageHandler.sendWithPromise("gStateGetRenderingIntentType",{name:a},this.userPriority)};b.GState.prototype.getBlendMode=
function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getBlendMode'. Expected 0 arguments. Function Signature: getBlendMode()");return b.messageHandler.sendWithPromise("GState.getBlendMode",{gs:this.id},this.userPriority)};b.GState.prototype.getFillOpacity=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFillOpacity'. Expected 0 arguments. Function Signature: getFillOpacity()");return b.messageHandler.sendWithPromise("GState.getFillOpacity",
{gs:this.id},this.userPriority)};b.GState.prototype.getStrokeOpacity=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getStrokeOpacity'. Expected 0 arguments. Function Signature: getStrokeOpacity()");return b.messageHandler.sendWithPromise("GState.getStrokeOpacity",{gs:this.id},this.userPriority)};b.GState.prototype.getAISFlag=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getAISFlag'. Expected 0 arguments. Function Signature: getAISFlag()");
return b.messageHandler.sendWithPromise("GState.getAISFlag",{gs:this.id},this.userPriority)};b.GState.prototype.getSoftMask=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSoftMask'. Expected 0 arguments. Function Signature: getSoftMask()");return b.messageHandler.sendWithPromise("GState.getSoftMask",{gs:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.GState.prototype.getSoftMaskTransform=function(){if(0!=
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSoftMaskTransform'. Expected 0 arguments. Function Signature: getSoftMaskTransform()");return b.messageHandler.sendWithPromise("GState.getSoftMaskTransform",{gs:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Matrix2D(a)})};b.GState.prototype.getStrokeOverprint=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getStrokeOverprint'. Expected 0 arguments. Function Signature: getStrokeOverprint()");
return b.messageHandler.sendWithPromise("GState.getStrokeOverprint",{gs:this.id},this.userPriority)};b.GState.prototype.getFillOverprint=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFillOverprint'. Expected 0 arguments. Function Signature: getFillOverprint()");return b.messageHandler.sendWithPromise("GState.getFillOverprint",{gs:this.id},this.userPriority)};b.GState.prototype.getOverprintMode=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getOverprintMode'. Expected 0 arguments. Function Signature: getOverprintMode()");return b.messageHandler.sendWithPromise("GState.getOverprintMode",{gs:this.id},this.userPriority)};b.GState.prototype.getAutoStrokeAdjust=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getAutoStrokeAdjust'. Expected 0 arguments. Function Signature: getAutoStrokeAdjust()");return b.messageHandler.sendWithPromise("GState.getAutoStrokeAdjust",
{gs:this.id},this.userPriority)};b.GState.prototype.getSmoothnessTolerance=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSmoothnessTolerance'. Expected 0 arguments. Function Signature: getSmoothnessTolerance()");return b.messageHandler.sendWithPromise("GState.getSmoothnessTolerance",{gs:this.id},this.userPriority)};b.GState.prototype.getTransferFunct=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTransferFunct'. Expected 0 arguments. Function Signature: getTransferFunct()");
return b.messageHandler.sendWithPromise("GState.getTransferFunct",{gs:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.GState.prototype.getBlackGenFunct=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getBlackGenFunct'. Expected 0 arguments. Function Signature: getBlackGenFunct()");return b.messageHandler.sendWithPromise("GState.getBlackGenFunct",{gs:this.id},this.userPriority).then(function(a){return"0"==a?
null:new b.Obj(a)})};b.GState.prototype.getUCRFunct=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getUCRFunct'. Expected 0 arguments. Function Signature: getUCRFunct()");return b.messageHandler.sendWithPromise("GState.getUCRFunct",{gs:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.GState.prototype.getHalftone=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getHalftone'. Expected 0 arguments. Function Signature: getHalftone()");
return b.messageHandler.sendWithPromise("GState.getHalftone",{gs:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.GState.prototype.setTransformMatrix=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setTransformMatrix'. Expected 1 argument. Function Signature: setTransformMatrix(Matrix2D)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setTransformMatrix' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Matrix2D)&&"Matrix2D"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'setTransformMatrix' is of type '"+a.name+"'. Expected type 'Matrix2D'. Function Signature: setTransformMatrix(Matrix2D).");throw new TypeError("1st input argument '"+a+"' in function 'setTransformMatrix' is of type '"+typeof a+"'. Expected type 'Matrix2D'. Function Signature: setTransformMatrix(Matrix2D).");}if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+
"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setTransformMatrix'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("GState.setTransformMatrix",{gs:this.id,mtx:a},this.userPriority)};b.GState.prototype.setTransform=function(a,c,d,e,f,g){if(6!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setTransform'. Expected 6 arguments. Function Signature: setTransform(number, number, number, number, number, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setTransform' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setTransform' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setTransform(number, number, number, number, number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setTransform' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setTransform' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: setTransform(number, number, number, number, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'setTransform' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'setTransform' is of type '"+
typeof d+"'. Expected type 'number'. Function Signature: setTransform(number, number, number, number, number, number).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'setTransform' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof e)throw new TypeError("4th input argument '"+e+"' in function 'setTransform' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: setTransform(number, number, number, number, number, number).");
if(f instanceof Promise)throw new TypeError("5th input argument in function 'setTransform' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof f)throw new TypeError("5th input argument '"+f+"' in function 'setTransform' is of type '"+typeof f+"'. Expected type 'number'. Function Signature: setTransform(number, number, number, number, number, number).");if(g instanceof Promise)throw new TypeError("6th input argument in function 'setTransform' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof g)throw new TypeError("6th input argument '"+g+"' in function 'setTransform' is of type '"+typeof g+"'. Expected type 'number'. Function Signature: setTransform(number, number, number, number, number, number).");return b.messageHandler.sendWithPromise("GState.setTransform",{gs:this.id,a:a,b:c,c:d,d:e,h:f,v:g},this.userPriority)};b.GState.prototype.concatMatrix=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'concatMatrix'. Expected 1 argument. Function Signature: concatMatrix(Matrix2D)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'concatMatrix' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Matrix2D)&&"Matrix2D"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'concatMatrix' is of type '"+a.name+"'. Expected type 'Matrix2D'. Function Signature: concatMatrix(Matrix2D).");throw new TypeError("1st input argument '"+a+"' in function 'concatMatrix' is of type '"+typeof a+
"'. Expected type 'Matrix2D'. Function Signature: concatMatrix(Matrix2D).");}if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'concatMatrix'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("GState.concatMatrix",{gs:this.id,mtx:a},this.userPriority)};b.GState.prototype.concat=function(a,
c,d,e,f,g){if(6!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'concat'. Expected 6 arguments. Function Signature: concat(number, number, number, number, number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'concat' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'concat' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: concat(number, number, number, number, number, number).");
if(c instanceof Promise)throw new TypeError("2nd input argument in function 'concat' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'concat' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: concat(number, number, number, number, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'concat' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'concat' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: concat(number, number, number, number, number, number).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'concat' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof e)throw new TypeError("4th input argument '"+e+"' in function 'concat' is of type '"+typeof e+
"'. Expected type 'number'. Function Signature: concat(number, number, number, number, number, number).");if(f instanceof Promise)throw new TypeError("5th input argument in function 'concat' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof f)throw new TypeError("5th input argument '"+f+"' in function 'concat' is of type '"+typeof f+"'. Expected type 'number'. Function Signature: concat(number, number, number, number, number, number).");if(g instanceof
Promise)throw new TypeError("6th input argument in function 'concat' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof g)throw new TypeError("6th input argument '"+g+"' in function 'concat' is of type '"+typeof g+"'. Expected type 'number'. Function Signature: concat(number, number, number, number, number, number).");return b.messageHandler.sendWithPromise("GState.concat",{gs:this.id,a:a,b:c,c:d,d:e,h:f,v:g},this.userPriority)};b.GState.prototype.setStrokeColorSpace=
function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setStrokeColorSpace'. Expected 1 argument. Function Signature: setStrokeColorSpace(ColorSpace)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setStrokeColorSpace' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.ColorSpace)){if("object"==typeof a)throw new TypeError("1st input argument in function 'setStrokeColorSpace' is of type '"+
a.name+"'. Expected type 'ColorSpace'. Function Signature: setStrokeColorSpace(ColorSpace).");throw new TypeError("1st input argument '"+a+"' in function 'setStrokeColorSpace' is of type '"+typeof a+"'. Expected type 'ColorSpace'. Function Signature: setStrokeColorSpace(ColorSpace).");}return b.messageHandler.sendWithPromise("GState.setStrokeColorSpace",{gs:this.id,cs:a.id},this.userPriority)};b.GState.prototype.setFillColorSpace=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'setFillColorSpace'. Expected 1 argument. Function Signature: setFillColorSpace(ColorSpace)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setFillColorSpace' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.ColorSpace)){if("object"==typeof a)throw new TypeError("1st input argument in function 'setFillColorSpace' is of type '"+a.name+"'. Expected type 'ColorSpace'. Function Signature: setFillColorSpace(ColorSpace).");
throw new TypeError("1st input argument '"+a+"' in function 'setFillColorSpace' is of type '"+typeof a+"'. Expected type 'ColorSpace'. Function Signature: setFillColorSpace(ColorSpace).");}return b.messageHandler.sendWithPromise("GState.setFillColorSpace",{gs:this.id,cs:a.id},this.userPriority)};b.GState.prototype.setStrokeColorWithColorPt=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setStrokeColorWithColorPt'. Expected 1 argument. Function Signature: setStrokeColorWithColorPt(ColorPt)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setStrokeColorWithColorPt' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.ColorPt)&&"ColorPt"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'setStrokeColorWithColorPt' is of type '"+a.name+"'. Expected type 'ColorPt'. Function Signature: setStrokeColorWithColorPt(ColorPt).");throw new TypeError("1st input argument '"+a+"' in function 'setStrokeColorWithColorPt' is of type '"+
typeof a+"'. Expected type 'ColorPt'. Function Signature: setStrokeColorWithColorPt(ColorPt).");}if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setStrokeColorWithColorPt'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("GState.setStrokeColorWithColorPt",{gs:this.id,c:a.id},this.userPriority)};
b.GState.prototype.setStrokeColorWithPattern=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setStrokeColorWithPattern'. Expected 1 argument. Function Signature: setStrokeColorWithPattern(PatternColor)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setStrokeColorWithPattern' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PatternColor)){if("object"==typeof a)throw new TypeError("1st input argument in function 'setStrokeColorWithPattern' is of type '"+
a.name+"'. Expected type 'PatternColor'. Function Signature: setStrokeColorWithPattern(PatternColor).");throw new TypeError("1st input argument '"+a+"' in function 'setStrokeColorWithPattern' is of type '"+typeof a+"'. Expected type 'PatternColor'. Function Signature: setStrokeColorWithPattern(PatternColor).");}return b.messageHandler.sendWithPromise("GState.setStrokeColorWithPattern",{gs:this.id,pattern:a.id},this.userPriority)};b.GState.prototype.setStrokeColor=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'setStrokeColor'. Expected 2 arguments. Function Signature: setStrokeColor(PatternColor, ColorPt)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setStrokeColor' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PatternColor)){if("object"==typeof a)throw new TypeError("1st input argument in function 'setStrokeColor' is of type '"+a.name+"'. Expected type 'PatternColor'. Function Signature: setStrokeColor(PatternColor, ColorPt).");
throw new TypeError("1st input argument '"+a+"' in function 'setStrokeColor' is of type '"+typeof a+"'. Expected type 'PatternColor'. Function Signature: setStrokeColor(PatternColor, ColorPt).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setStrokeColor' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.ColorPt)&&"ColorPt"!=c.name){if("object"==typeof c)throw new TypeError("2nd input argument in function 'setStrokeColor' is of type '"+
c.name+"'. Expected type 'ColorPt'. Function Signature: setStrokeColor(PatternColor, ColorPt).");throw new TypeError("2nd input argument '"+c+"' in function 'setStrokeColor' is of type '"+typeof c+"'. Expected type 'ColorPt'. Function Signature: setStrokeColor(PatternColor, ColorPt).");}if("undefined"!=typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'setStrokeColor'. Perhaps a yield statement is required for '"+
c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("GState.setStrokeColor",{gs:this.id,pattern:a.id,c:c.id},this.userPriority)};b.GState.prototype.setFillColorWithColorPt=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setFillColorWithColorPt'. Expected 1 argument. Function Signature: setFillColorWithColorPt(ColorPt)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setFillColorWithColorPt' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.ColorPt)&&"ColorPt"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'setFillColorWithColorPt' is of type '"+a.name+"'. Expected type 'ColorPt'. Function Signature: setFillColorWithColorPt(ColorPt).");throw new TypeError("1st input argument '"+a+"' in function 'setFillColorWithColorPt' is of type '"+typeof a+"'. Expected type 'ColorPt'. Function Signature: setFillColorWithColorPt(ColorPt).");}if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+
a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setFillColorWithColorPt'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("GState.setFillColorWithColorPt",{gs:this.id,c:a.id},this.userPriority)};b.GState.prototype.setFillColorWithPattern=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setFillColorWithPattern'. Expected 1 argument. Function Signature: setFillColorWithPattern(PatternColor)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setFillColorWithPattern' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PatternColor)){if("object"==typeof a)throw new TypeError("1st input argument in function 'setFillColorWithPattern' is of type '"+a.name+"'. Expected type 'PatternColor'. Function Signature: setFillColorWithPattern(PatternColor).");throw new TypeError("1st input argument '"+a+"' in function 'setFillColorWithPattern' is of type '"+
typeof a+"'. Expected type 'PatternColor'. Function Signature: setFillColorWithPattern(PatternColor).");}return b.messageHandler.sendWithPromise("GState.setFillColorWithPattern",{gs:this.id,pattern:a.id},this.userPriority)};b.GState.prototype.setFillColor=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setFillColor'. Expected 2 arguments. Function Signature: setFillColor(PatternColor, ColorPt)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setFillColor' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PatternColor)){if("object"==typeof a)throw new TypeError("1st input argument in function 'setFillColor' is of type '"+a.name+"'. Expected type 'PatternColor'. Function Signature: setFillColor(PatternColor, ColorPt).");throw new TypeError("1st input argument '"+a+"' in function 'setFillColor' is of type '"+typeof a+"'. Expected type 'PatternColor'. Function Signature: setFillColor(PatternColor, ColorPt).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setFillColor' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.ColorPt)&&"ColorPt"!=c.name){if("object"==typeof c)throw new TypeError("2nd input argument in function 'setFillColor' is of type '"+c.name+"'. Expected type 'ColorPt'. Function Signature: setFillColor(PatternColor, ColorPt).");throw new TypeError("2nd input argument '"+c+"' in function 'setFillColor' is of type '"+typeof c+"'. Expected type 'ColorPt'. Function Signature: setFillColor(PatternColor, ColorPt).");}if("undefined"!=typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+
"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'setFillColor'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("GState.setFillColor",{gs:this.id,pattern:a.id,c:c.id},this.userPriority)};b.GState.prototype.setFlatness=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setFlatness'. Expected 1 argument. Function Signature: setFlatness(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setFlatness' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setFlatness' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setFlatness(number).");return b.messageHandler.sendWithPromise("GState.setFlatness",{gs:this.id,flatness:a},this.userPriority)};b.GState.prototype.setLineCap=function(a){if(1!=
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setLineCap'. Expected 1 argument. Function Signature: setLineCap(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setLineCap' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setLineCap' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setLineCap(number).");
return b.messageHandler.sendWithPromise("GState.setLineCap",{gs:this.id,cap:a},this.userPriority)};b.GState.prototype.setLineJoin=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setLineJoin'. Expected 1 argument. Function Signature: setLineJoin(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setLineJoin' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'setLineJoin' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setLineJoin(number).");return b.messageHandler.sendWithPromise("GState.setLineJoin",{gs:this.id,join:a},this.userPriority)};b.GState.prototype.setLineWidth=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setLineWidth'. Expected 1 argument. Function Signature: setLineWidth(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setLineWidth' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setLineWidth' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setLineWidth(number).");return b.messageHandler.sendWithPromise("GState.setLineWidth",{gs:this.id,width:a},this.userPriority)};b.GState.prototype.setMiterLimit=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setMiterLimit'. Expected 1 argument. Function Signature: setMiterLimit(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setMiterLimit' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setMiterLimit' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setMiterLimit(number).");return b.messageHandler.sendWithPromise("GState.setMiterLimit",{gs:this.id,miter_limit:a},this.userPriority)};b.GState.prototype.setDashPattern=
function(a,c){a instanceof Array&&(a=new Float64Array(a));if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setDashPattern'. Expected 2 arguments. Function Signature: setDashPattern(ArrayBuffer, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setDashPattern' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!h.isArrayBuffer(a.buffer)){if("object"==typeof a)throw new TypeError("1st input argument in function 'setDashPattern' is of type '"+
a.name+"'. Expected type 'ArrayBuffer'. Function Signature: setDashPattern(ArrayBuffer, number).");throw new TypeError("1st input argument '"+a+"' in function 'setDashPattern' is of type '"+typeof a+"'. Expected type 'ArrayBuffer'. Function Signature: setDashPattern(ArrayBuffer, number).");}if(c instanceof Promise)throw new TypeError("3rd input argument in function 'setDashPattern' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("3rd input argument '"+
c+"' in function 'setDashPattern' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: setDashPattern(ArrayBuffer, number).");return b.messageHandler.sendWithPromise("GState.setDashPattern",{gs:this.id,buf_dash_array:a.buffer,phase:c},this.userPriority)};b.GState.prototype.setCharSpacing=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setCharSpacing'. Expected 1 argument. Function Signature: setCharSpacing(number)");if(a instanceof
Promise)throw new TypeError("1st input argument in function 'setCharSpacing' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setCharSpacing' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setCharSpacing(number).");return b.messageHandler.sendWithPromise("GState.setCharSpacing",{gs:this.id,char_spacing:a},this.userPriority)};b.GState.prototype.setWordSpacing=
function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setWordSpacing'. Expected 1 argument. Function Signature: setWordSpacing(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setWordSpacing' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setWordSpacing' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setWordSpacing(number).");
return b.messageHandler.sendWithPromise("GState.setWordSpacing",{gs:this.id,word_spacing:a},this.userPriority)};b.GState.prototype.setHorizontalScale=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setHorizontalScale'. Expected 1 argument. Function Signature: setHorizontalScale(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setHorizontalScale' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setHorizontalScale' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setHorizontalScale(number).");return b.messageHandler.sendWithPromise("GState.setHorizontalScale",{gs:this.id,hscale:a},this.userPriority)};b.GState.prototype.setLeading=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setLeading'. Expected 1 argument. Function Signature: setLeading(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setLeading' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setLeading' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setLeading(number).");return b.messageHandler.sendWithPromise("GState.setLeading",{gs:this.id,leading:a},this.userPriority)};b.GState.prototype.setFont=function(a,
c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setFont'. Expected 2 arguments. Function Signature: setFont(Font, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setFont' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Font)){if("object"==typeof a)throw new TypeError("1st input argument in function 'setFont' is of type '"+a.name+"'. Expected type 'Font'. Function Signature: setFont(Font, number).");
throw new TypeError("1st input argument '"+a+"' in function 'setFont' is of type '"+typeof a+"'. Expected type 'Font'. Function Signature: setFont(Font, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setFont' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setFont' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: setFont(Font, number).");
return b.messageHandler.sendWithPromise("GState.setFont",{gs:this.id,font:a.id,font_sz:c},this.userPriority)};b.GState.prototype.setTextRenderMode=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setTextRenderMode'. Expected 1 argument. Function Signature: setTextRenderMode(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setTextRenderMode' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setTextRenderMode' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setTextRenderMode(number).");return b.messageHandler.sendWithPromise("GState.setTextRenderMode",{gs:this.id,rmode:a},this.userPriority)};b.GState.prototype.setTextRise=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setTextRise'. Expected 1 argument. Function Signature: setTextRise(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setTextRise' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setTextRise' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setTextRise(number).");return b.messageHandler.sendWithPromise("GState.setTextRise",{gs:this.id,rise:a},this.userPriority)};b.GState.prototype.setTextKnockout=function(a){if(1!=
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setTextKnockout'. Expected 1 argument. Function Signature: setTextKnockout(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setTextKnockout' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setTextKnockout' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setTextKnockout(boolean).");
return b.messageHandler.sendWithPromise("GState.setTextKnockout",{gs:this.id,knockout:a},this.userPriority)};b.GState.prototype.setRenderingIntent=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setRenderingIntent'. Expected 1 argument. Function Signature: setRenderingIntent(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setRenderingIntent' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setRenderingIntent' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setRenderingIntent(number).");return b.messageHandler.sendWithPromise("GState.setRenderingIntent",{gs:this.id,intent:a},this.userPriority)};b.GState.prototype.setBlendMode=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setBlendMode'. Expected 1 argument. Function Signature: setBlendMode(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setBlendMode' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setBlendMode' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setBlendMode(number).");return b.messageHandler.sendWithPromise("GState.setBlendMode",{gs:this.id,BM:a},this.userPriority)};b.GState.prototype.setFillOpacity=function(a){if(1!=
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setFillOpacity'. Expected 1 argument. Function Signature: setFillOpacity(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setFillOpacity' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setFillOpacity' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setFillOpacity(number).");
return b.messageHandler.sendWithPromise("GState.setFillOpacity",{gs:this.id,ca:a},this.userPriority)};b.GState.prototype.setStrokeOpacity=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setStrokeOpacity'. Expected 1 argument. Function Signature: setStrokeOpacity(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setStrokeOpacity' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setStrokeOpacity' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setStrokeOpacity(number).");return b.messageHandler.sendWithPromise("GState.setStrokeOpacity",{gs:this.id,CA:a},this.userPriority)};b.GState.prototype.setAISFlag=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setAISFlag'. Expected 1 argument. Function Signature: setAISFlag(boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setAISFlag' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setAISFlag' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setAISFlag(boolean).");return b.messageHandler.sendWithPromise("GState.setAISFlag",{gs:this.id,AIS:a},this.userPriority)};b.GState.prototype.setSoftMask=function(a){if(1!=
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setSoftMask'. Expected 1 argument. Function Signature: setSoftMask(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setSoftMask' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'setSoftMask' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: setSoftMask(Obj).");
throw new TypeError("1st input argument '"+a+"' in function 'setSoftMask' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: setSoftMask(Obj).");}return b.messageHandler.sendWithPromise("GState.setSoftMask",{gs:this.id,SM:a.id},this.userPriority)};b.GState.prototype.setStrokeOverprint=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setStrokeOverprint'. Expected 1 argument. Function Signature: setStrokeOverprint(boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setStrokeOverprint' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setStrokeOverprint' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setStrokeOverprint(boolean).");return b.messageHandler.sendWithPromise("GState.setStrokeOverprint",{gs:this.id,OP:a},this.userPriority)};b.GState.prototype.setFillOverprint=
function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setFillOverprint'. Expected 1 argument. Function Signature: setFillOverprint(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setFillOverprint' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setFillOverprint' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setFillOverprint(boolean).");
return b.messageHandler.sendWithPromise("GState.setFillOverprint",{gs:this.id,op:a},this.userPriority)};b.GState.prototype.setOverprintMode=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setOverprintMode'. Expected 1 argument. Function Signature: setOverprintMode(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setOverprintMode' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setOverprintMode' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setOverprintMode(number).");return b.messageHandler.sendWithPromise("GState.setOverprintMode",{gs:this.id,OPM:a},this.userPriority)};b.GState.prototype.setAutoStrokeAdjust=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setAutoStrokeAdjust'. Expected 1 argument. Function Signature: setAutoStrokeAdjust(boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setAutoStrokeAdjust' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setAutoStrokeAdjust' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setAutoStrokeAdjust(boolean).");return b.messageHandler.sendWithPromise("GState.setAutoStrokeAdjust",{gs:this.id,SA:a},this.userPriority)};b.GState.prototype.setSmoothnessTolerance=
function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setSmoothnessTolerance'. Expected 1 argument. Function Signature: setSmoothnessTolerance(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setSmoothnessTolerance' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setSmoothnessTolerance' is of type '"+
typeof a+"'. Expected type 'number'. Function Signature: setSmoothnessTolerance(number).");return b.messageHandler.sendWithPromise("GState.setSmoothnessTolerance",{gs:this.id,SM:a},this.userPriority)};b.GState.prototype.setBlackGenFunct=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setBlackGenFunct'. Expected 1 argument. Function Signature: setBlackGenFunct(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setBlackGenFunct' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'setBlackGenFunct' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: setBlackGenFunct(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'setBlackGenFunct' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: setBlackGenFunct(Obj).");}return b.messageHandler.sendWithPromise("GState.setBlackGenFunct",{gs:this.id,BG:a.id},this.userPriority)};b.GState.prototype.setUCRFunct=
function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setUCRFunct'. Expected 1 argument. Function Signature: setUCRFunct(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setUCRFunct' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'setUCRFunct' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: setUCRFunct(Obj).");
throw new TypeError("1st input argument '"+a+"' in function 'setUCRFunct' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: setUCRFunct(Obj).");}return b.messageHandler.sendWithPromise("GState.setUCRFunct",{gs:this.id,UCR:a.id},this.userPriority)};b.GState.prototype.setTransferFunct=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setTransferFunct'. Expected 1 argument. Function Signature: setTransferFunct(Obj)");if(a instanceof
Promise)throw new TypeError("1st input argument in function 'setTransferFunct' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'setTransferFunct' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: setTransferFunct(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'setTransferFunct' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: setTransferFunct(Obj).");
}return b.messageHandler.sendWithPromise("GState.setTransferFunct",{gs:this.id,TR:a.id},this.userPriority)};b.GState.prototype.setHalftone=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setHalftone'. Expected 1 argument. Function Signature: setHalftone(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setHalftone' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof
b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'setHalftone' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: setHalftone(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'setHalftone' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: setHalftone(Obj).");}return b.messageHandler.sendWithPromise("GState.setHalftone",{gs:this.id,HT:a.id},this.userPriority)};b.Element.prototype.getType=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getType'. Expected 0 arguments. Function Signature: getType()");return b.messageHandler.sendWithPromise("Element.getType",{e:this.id},this.userPriority)};b.Element.prototype.getGState=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getGState'. Expected 0 arguments. Function Signature: getGState()");return b.messageHandler.sendWithPromise("Element.getGState",{e:this.id},this.userPriority).then(function(a){return"0"==
a?null:new b.GState(a)})};b.Element.prototype.getCTM=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getCTM'. Expected 0 arguments. Function Signature: getCTM()");return b.messageHandler.sendWithPromise("Element.getCTM",{e:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Matrix2D(a)})};b.Element.prototype.getParentStructElement=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getParentStructElement'. Expected 0 arguments. Function Signature: getParentStructElement()");
return b.messageHandler.sendWithPromise("Element.getParentStructElement",{e:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.SElement(a)})};b.Element.prototype.getStructMCID=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getStructMCID'. Expected 0 arguments. Function Signature: getStructMCID()");return b.messageHandler.sendWithPromise("Element.getStructMCID",{e:this.id},this.userPriority)};b.Element.prototype.isOCVisible=
function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isOCVisible'. Expected 0 arguments. Function Signature: isOCVisible()");return b.messageHandler.sendWithPromise("Element.isOCVisible",{e:this.id},this.userPriority)};b.Element.prototype.isClippingPath=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isClippingPath'. Expected 0 arguments. Function Signature: isClippingPath()");return b.messageHandler.sendWithPromise("Element.isClippingPath",
{e:this.id},this.userPriority)};b.Element.prototype.isStroked=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isStroked'. Expected 0 arguments. Function Signature: isStroked()");return b.messageHandler.sendWithPromise("Element.isStroked",{e:this.id},this.userPriority)};b.Element.prototype.isFilled=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isFilled'. Expected 0 arguments. Function Signature: isFilled()");
return b.messageHandler.sendWithPromise("Element.isFilled",{e:this.id},this.userPriority)};b.Element.prototype.isWindingFill=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isWindingFill'. Expected 0 arguments. Function Signature: isWindingFill()");return b.messageHandler.sendWithPromise("Element.isWindingFill",{e:this.id},this.userPriority)};b.Element.prototype.isClipWindingFill=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'isClipWindingFill'. Expected 0 arguments. Function Signature: isClipWindingFill()");return b.messageHandler.sendWithPromise("Element.isClipWindingFill",{e:this.id},this.userPriority)};b.Element.prototype.setPathClip=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPathClip'. Expected 1 argument. Function Signature: setPathClip(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPathClip' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setPathClip' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setPathClip(boolean).");return b.messageHandler.sendWithPromise("Element.setPathClip",{e:this.id,clip:a},this.userPriority)};b.Element.prototype.setPathStroke=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPathStroke'. Expected 1 argument. Function Signature: setPathStroke(boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPathStroke' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setPathStroke' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setPathStroke(boolean).");return b.messageHandler.sendWithPromise("Element.setPathStroke",{e:this.id,stroke:a},this.userPriority)};b.Element.prototype.setPathFill=
function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPathFill'. Expected 1 argument. Function Signature: setPathFill(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPathFill' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setPathFill' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setPathFill(boolean).");
return b.messageHandler.sendWithPromise("Element.setPathFill",{e:this.id,fill:a},this.userPriority)};b.Element.prototype.setWindingFill=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setWindingFill'. Expected 1 argument. Function Signature: setWindingFill(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setWindingFill' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setWindingFill' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setWindingFill(boolean).");return b.messageHandler.sendWithPromise("Element.setWindingFill",{e:this.id,winding_rule:a},this.userPriority)};b.Element.prototype.setClipWindingFill=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setClipWindingFill'. Expected 1 argument. Function Signature: setClipWindingFill(boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setClipWindingFill' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setClipWindingFill' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setClipWindingFill(boolean).");return b.messageHandler.sendWithPromise("Element.setClipWindingFill",{e:this.id,winding_rule:a},this.userPriority)};
b.Element.prototype.setPathTypes=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPathTypes'. Expected 2 arguments. Function Signature: setPathTypes(string, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPathTypes' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setPathTypes' is of type '"+
typeof a+"'. Expected type 'string'. Function Signature: setPathTypes(string, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setPathTypes' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setPathTypes' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: setPathTypes(string, number).");return b.messageHandler.sendWithPromise("Element.setPathTypes",
{e:this.id,in_seg_types:a,count:c},this.userPriority)};b.Element.prototype.getXObject=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getXObject'. Expected 0 arguments. Function Signature: getXObject()");return b.messageHandler.sendWithPromise("Element.getXObject",{e:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Element.prototype.getImageData=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getImageData'. Expected 0 arguments. Function Signature: getImageData()");return b.messageHandler.sendWithPromise("Element.getImageData",{e:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Filter(a)})};b.Element.prototype.getImageDataSize=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getImageDataSize'. Expected 0 arguments. Function Signature: getImageDataSize()");return b.messageHandler.sendWithPromise("Element.getImageDataSize",
{e:this.id},this.userPriority)};b.Element.prototype.getImageColorSpace=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getImageColorSpace'. Expected 0 arguments. Function Signature: getImageColorSpace()");return b.messageHandler.sendWithPromise("Element.getImageColorSpace",{e:this.id},this.userPriority).then(function(a){if("0"==a)return null;a=new b.ColorSpace(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Element.prototype.getImageWidth=
function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getImageWidth'. Expected 0 arguments. Function Signature: getImageWidth()");return b.messageHandler.sendWithPromise("Element.getImageWidth",{e:this.id},this.userPriority)};b.Element.prototype.getImageHeight=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getImageHeight'. Expected 0 arguments. Function Signature: getImageHeight()");return b.messageHandler.sendWithPromise("Element.getImageHeight",
{e:this.id},this.userPriority)};b.Element.prototype.getDecodeArray=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getDecodeArray'. Expected 0 arguments. Function Signature: getDecodeArray()");return b.messageHandler.sendWithPromise("Element.getDecodeArray",{e:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Element.prototype.getBitsPerComponent=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getBitsPerComponent'. Expected 0 arguments. Function Signature: getBitsPerComponent()");return b.messageHandler.sendWithPromise("Element.getBitsPerComponent",{e:this.id},this.userPriority)};b.Element.prototype.getComponentNum=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getComponentNum'. Expected 0 arguments. Function Signature: getComponentNum()");return b.messageHandler.sendWithPromise("Element.getComponentNum",
{e:this.id},this.userPriority)};b.Element.prototype.isImageMask=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isImageMask'. Expected 0 arguments. Function Signature: isImageMask()");return b.messageHandler.sendWithPromise("Element.isImageMask",{e:this.id},this.userPriority)};b.Element.prototype.isImageInterpolate=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isImageInterpolate'. Expected 0 arguments. Function Signature: isImageInterpolate()");
return b.messageHandler.sendWithPromise("Element.isImageInterpolate",{e:this.id},this.userPriority)};b.Element.prototype.getMask=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getMask'. Expected 0 arguments. Function Signature: getMask()");return b.messageHandler.sendWithPromise("Element.getMask",{e:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Element.prototype.getImageRenderingIntent=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getImageRenderingIntent'. Expected 0 arguments. Function Signature: getImageRenderingIntent()");return b.messageHandler.sendWithPromise("Element.getImageRenderingIntent",{e:this.id},this.userPriority)};b.Element.prototype.getTextString=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTextString'. Expected 0 arguments. Function Signature: getTextString()");return b.messageHandler.sendWithPromise("Element.getTextString",
{e:this.id},this.userPriority)};b.Element.prototype.getTextMatrix=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTextMatrix'. Expected 0 arguments. Function Signature: getTextMatrix()");return b.messageHandler.sendWithPromise("Element.getTextMatrix",{e:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Matrix2D(a)})};b.Element.prototype.getCharIterator=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getCharIterator'. Expected 0 arguments. Function Signature: getCharIterator()");return b.messageHandler.sendWithPromise("Element.getCharIterator",{e:this.id},this.userPriority).then(function(a){if("0"==a)return null;a=new b.Iterator(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Element.prototype.getTextLength=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTextLength'. Expected 0 arguments. Function Signature: getTextLength()");
return b.messageHandler.sendWithPromise("Element.getTextLength",{e:this.id},this.userPriority)};b.Element.prototype.getPosAdjustment=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPosAdjustment'. Expected 0 arguments. Function Signature: getPosAdjustment()");return b.messageHandler.sendWithPromise("Element.getPosAdjustment",{e:this.id},this.userPriority)};b.Element.prototype.getNewTextLineOffset=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getNewTextLineOffset'. Expected 0 arguments. Function Signature: getNewTextLineOffset()");return b.messageHandler.sendWithPromise("Element.getNewTextLineOffset",{e:this.id},this.userPriority)};b.Element.prototype.hasTextMatrix=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'hasTextMatrix'. Expected 0 arguments. Function Signature: hasTextMatrix()");return b.messageHandler.sendWithPromise("Element.hasTextMatrix",
{e:this.id},this.userPriority)};b.Element.prototype.setTextData=function(a){a instanceof Array&&(a=new Float64Array(a));if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setTextData'. Expected 1 argument. Function Signature: setTextData(ArrayBuffer)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setTextData' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!h.isArrayBuffer(a.buffer)){if("object"==
typeof a)throw new TypeError("1st input argument in function 'setTextData' is of type '"+a.name+"'. Expected type 'ArrayBuffer'. Function Signature: setTextData(ArrayBuffer).");throw new TypeError("1st input argument '"+a+"' in function 'setTextData' is of type '"+typeof a+"'. Expected type 'ArrayBuffer'. Function Signature: setTextData(ArrayBuffer).");}return b.messageHandler.sendWithPromise("Element.setTextData",{e:this.id,buf_text_data:a.buffer},this.userPriority)};b.Element.prototype.setTextMatrix=
function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setTextMatrix'. Expected 1 argument. Function Signature: setTextMatrix(Matrix2D)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setTextMatrix' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Matrix2D)&&"Matrix2D"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'setTextMatrix' is of type '"+
a.name+"'. Expected type 'Matrix2D'. Function Signature: setTextMatrix(Matrix2D).");throw new TypeError("1st input argument '"+a+"' in function 'setTextMatrix' is of type '"+typeof a+"'. Expected type 'Matrix2D'. Function Signature: setTextMatrix(Matrix2D).");}if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setTextMatrix'. Perhaps a yield statement is required for '"+
a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("Element.setTextMatrix",{e:this.id,mtx:a},this.userPriority)};b.Element.prototype.setTextMatrixEntries=function(a,c,d,e,f,g){if(6!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setTextMatrixEntries'. Expected 6 arguments. Function Signature: setTextMatrixEntries(number, number, number, number, number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setTextMatrixEntries' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setTextMatrixEntries' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setTextMatrixEntries(number, number, number, number, number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setTextMatrixEntries' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setTextMatrixEntries' is of type '"+
typeof c+"'. Expected type 'number'. Function Signature: setTextMatrixEntries(number, number, number, number, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'setTextMatrixEntries' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'setTextMatrixEntries' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: setTextMatrixEntries(number, number, number, number, number, number).");
if(e instanceof Promise)throw new TypeError("4th input argument in function 'setTextMatrixEntries' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof e)throw new TypeError("4th input argument '"+e+"' in function 'setTextMatrixEntries' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: setTextMatrixEntries(number, number, number, number, number, number).");if(f instanceof Promise)throw new TypeError("5th input argument in function 'setTextMatrixEntries' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof f)throw new TypeError("5th input argument '"+f+"' in function 'setTextMatrixEntries' is of type '"+typeof f+"'. Expected type 'number'. Function Signature: setTextMatrixEntries(number, number, number, number, number, number).");if(g instanceof Promise)throw new TypeError("6th input argument in function 'setTextMatrixEntries' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof g)throw new TypeError("6th input argument '"+g+"' in function 'setTextMatrixEntries' is of type '"+
typeof g+"'. Expected type 'number'. Function Signature: setTextMatrixEntries(number, number, number, number, number, number).");return b.messageHandler.sendWithPromise("Element.setTextMatrixEntries",{e:this.id,a:a,b:c,c:d,d:e,h:f,v:g},this.userPriority)};b.Element.prototype.setPosAdjustment=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPosAdjustment'. Expected 1 argument. Function Signature: setPosAdjustment(number)");if(a instanceof
Promise)throw new TypeError("1st input argument in function 'setPosAdjustment' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setPosAdjustment' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setPosAdjustment(number).");return b.messageHandler.sendWithPromise("Element.setPosAdjustment",{e:this.id,adjust:a},this.userPriority)};b.Element.prototype.updateTextMetrics=
function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'updateTextMetrics'. Expected 0 arguments. Function Signature: updateTextMetrics()");return b.messageHandler.sendWithPromise("Element.updateTextMetrics",{e:this.id},this.userPriority)};b.Element.prototype.setNewTextLineOffset=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setNewTextLineOffset'. Expected 2 arguments. Function Signature: setNewTextLineOffset(number, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setNewTextLineOffset' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setNewTextLineOffset' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setNewTextLineOffset(number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setNewTextLineOffset' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setNewTextLineOffset' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: setNewTextLineOffset(number, number).");return b.messageHandler.sendWithPromise("Element.setNewTextLineOffset",{e:this.id,dx:a,dy:c},this.userPriority)};b.Element.prototype.getShading=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getShading'. Expected 0 arguments. Function Signature: getShading()");
return b.messageHandler.sendWithPromise("Element.getShading",{e:this.id},this.userPriority).then(function(a){if("0"==a)return null;a=new b.Shading(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Element.prototype.getMCPropertyDict=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getMCPropertyDict'. Expected 0 arguments. Function Signature: getMCPropertyDict()");return b.messageHandler.sendWithPromise("Element.getMCPropertyDict",
{e:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Element.prototype.getMCTag=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getMCTag'. Expected 0 arguments. Function Signature: getMCTag()");return b.messageHandler.sendWithPromise("Element.getMCTag",{e:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.ElementBuilder.create=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'create'. Expected 0 arguments. Function Signature: create()");return b.messageHandler.sendWithPromise("elementBuilderCreate",{},this.userPriority).then(function(a){if("0"==a)return null;a=new b.ElementBuilder(a);createdObjects.push({name:a.name,id:a.id});return a})};b.ElementBuilder.prototype.destroy=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");
for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("ElementBuilder.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.ElementBuilder.prototype.reset=
function(a){"undefined"===typeof a&&(a=new b.GState("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'reset'. Expected at most 1 arguments. Function Signature: reset(GState)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'reset' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.GState)){if("object"==typeof a)throw new TypeError("1st input argument in function 'reset' is of type '"+
a.name+"'. Expected type 'GState'. Function Signature: reset(GState).");throw new TypeError("1st input argument '"+a+"' in function 'reset' is of type '"+typeof a+"'. Expected type 'GState'. Function Signature: reset(GState).");}return b.messageHandler.sendWithPromise("ElementBuilder.reset",{b:this.id,gs:a.id},this.userPriority)};b.ElementBuilder.prototype.createImage=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createImage'. Expected 1 argument. Function Signature: createImage(Image)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createImage' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Image)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createImage' is of type '"+a.name+"'. Expected type 'Image'. Function Signature: createImage(Image).");throw new TypeError("1st input argument '"+a+"' in function 'createImage' is of type '"+typeof a+"'. Expected type 'Image'. Function Signature: createImage(Image).");
}return b.messageHandler.sendWithPromise("ElementBuilder.createImage",{b:this.id,img:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.Element(a)})};b.ElementBuilder.prototype.createImageFromMatrix=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createImageFromMatrix'. Expected 2 arguments. Function Signature: createImageFromMatrix(Image, Matrix2D)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createImageFromMatrix' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Image)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createImageFromMatrix' is of type '"+a.name+"'. Expected type 'Image'. Function Signature: createImageFromMatrix(Image, Matrix2D).");throw new TypeError("1st input argument '"+a+"' in function 'createImageFromMatrix' is of type '"+typeof a+"'. Expected type 'Image'. Function Signature: createImageFromMatrix(Image, Matrix2D).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createImageFromMatrix' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.Matrix2D)&&"Matrix2D"!=c.name){if("object"==typeof c)throw new TypeError("2nd input argument in function 'createImageFromMatrix' is of type '"+c.name+"'. Expected type 'Matrix2D'. Function Signature: createImageFromMatrix(Image, Matrix2D).");throw new TypeError("2nd input argument '"+c+"' in function 'createImageFromMatrix' is of type '"+typeof c+"'. Expected type 'Matrix2D'. Function Signature: createImageFromMatrix(Image, Matrix2D).");}if("undefined"!=typeof c.yieldFunction)throw Error("Function '"+
c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'createImageFromMatrix'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("ElementBuilder.createImageFromMatrix",{b:this.id,img:a.id,mtx:c},this.userPriority).then(function(a){return"0"==a?null:new b.Element(a)})};b.ElementBuilder.prototype.createImageScaled=function(a,c,d,e,f){if(5!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'createImageScaled'. Expected 5 arguments. Function Signature: createImageScaled(Image, number, number, number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createImageScaled' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Image)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createImageScaled' is of type '"+a.name+"'. Expected type 'Image'. Function Signature: createImageScaled(Image, number, number, number, number).");
throw new TypeError("1st input argument '"+a+"' in function 'createImageScaled' is of type '"+typeof a+"'. Expected type 'Image'. Function Signature: createImageScaled(Image, number, number, number, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createImageScaled' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createImageScaled' is of type '"+
typeof c+"'. Expected type 'number'. Function Signature: createImageScaled(Image, number, number, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createImageScaled' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'createImageScaled' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: createImageScaled(Image, number, number, number, number).");
if(e instanceof Promise)throw new TypeError("4th input argument in function 'createImageScaled' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof e)throw new TypeError("4th input argument '"+e+"' in function 'createImageScaled' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: createImageScaled(Image, number, number, number, number).");if(f instanceof Promise)throw new TypeError("5th input argument in function 'createImageScaled' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof f)throw new TypeError("5th input argument '"+f+"' in function 'createImageScaled' is of type '"+typeof f+"'. Expected type 'number'. Function Signature: createImageScaled(Image, number, number, number, number).");return b.messageHandler.sendWithPromise("ElementBuilder.createImageScaled",{b:this.id,img:a.id,x:c,y:d,hscale:e,vscale:f},this.userPriority).then(function(a){return"0"==a?null:new b.Element(a)})};b.ElementBuilder.prototype.createGroupBegin=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'createGroupBegin'. Expected 0 arguments. Function Signature: createGroupBegin()");return b.messageHandler.sendWithPromise("ElementBuilder.createGroupBegin",{b:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Element(a)})};b.ElementBuilder.prototype.createGroupEnd=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createGroupEnd'. Expected 0 arguments. Function Signature: createGroupEnd()");
return b.messageHandler.sendWithPromise("ElementBuilder.createGroupEnd",{b:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Element(a)})};b.ElementBuilder.prototype.createShading=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createShading'. Expected 1 argument. Function Signature: createShading(Shading)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createShading' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Shading)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createShading' is of type '"+a.name+"'. Expected type 'Shading'. Function Signature: createShading(Shading).");throw new TypeError("1st input argument '"+a+"' in function 'createShading' is of type '"+typeof a+"'. Expected type 'Shading'. Function Signature: createShading(Shading).");}return b.messageHandler.sendWithPromise("ElementBuilder.createShading",{b:this.id,sh:a.id},this.userPriority).then(function(a){return"0"==
a?null:new b.Element(a)})};b.ElementBuilder.prototype.createFormFromStream=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFormFromStream'. Expected 1 argument. Function Signature: createFormFromStream(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFormFromStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFormFromStream' is of type '"+
a.name+"'. Expected type 'Obj'. Function Signature: createFormFromStream(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFormFromStream' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFormFromStream(Obj).");}return b.messageHandler.sendWithPromise("ElementBuilder.createFormFromStream",{b:this.id,form:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.Element(a)})};b.ElementBuilder.prototype.createFormFromPage=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'createFormFromPage'. Expected 1 argument. Function Signature: createFormFromPage(Page)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFormFromPage' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Page)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFormFromPage' is of type '"+a.name+"'. Expected type 'Page'. Function Signature: createFormFromPage(Page).");
throw new TypeError("1st input argument '"+a+"' in function 'createFormFromPage' is of type '"+typeof a+"'. Expected type 'Page'. Function Signature: createFormFromPage(Page).");}return b.messageHandler.sendWithPromise("ElementBuilder.createFormFromPage",{b:this.id,page:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.Element(a)})};b.ElementBuilder.prototype.createFormFromDoc=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFormFromDoc'. Expected 2 arguments. Function Signature: createFormFromDoc(Page, PDFDoc)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFormFromDoc' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Page)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFormFromDoc' is of type '"+a.name+"'. Expected type 'Page'. Function Signature: createFormFromDoc(Page, PDFDoc).");throw new TypeError("1st input argument '"+a+"' in function 'createFormFromDoc' is of type '"+typeof a+
"'. Expected type 'Page'. Function Signature: createFormFromDoc(Page, PDFDoc).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createFormFromDoc' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.PDFDoc||c instanceof b.SDFDoc||c instanceof b.FDFDoc)){if("object"==typeof c)throw new TypeError("2nd input argument in function 'createFormFromDoc' is of type '"+c.name+"'. Expected type 'PDFDoc'. Function Signature: createFormFromDoc(Page, PDFDoc).");
throw new TypeError("2nd input argument '"+c+"' in function 'createFormFromDoc' is of type '"+typeof c+"'. Expected type 'PDFDoc'. Function Signature: createFormFromDoc(Page, PDFDoc).");}return b.messageHandler.sendWithPromise("ElementBuilder.createFormFromDoc",{b:this.id,page:a.id,doc:c.id},this.userPriority).then(function(a){return"0"==a?null:new b.Element(a)})};b.ElementBuilder.prototype.createTextBeginWithFont=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createTextBeginWithFont'. Expected 2 arguments. Function Signature: createTextBeginWithFont(Font, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createTextBeginWithFont' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Font)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createTextBeginWithFont' is of type '"+a.name+"'. Expected type 'Font'. Function Signature: createTextBeginWithFont(Font, number).");throw new TypeError("1st input argument '"+a+"' in function 'createTextBeginWithFont' is of type '"+
typeof a+"'. Expected type 'Font'. Function Signature: createTextBeginWithFont(Font, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createTextBeginWithFont' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createTextBeginWithFont' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: createTextBeginWithFont(Font, number).");
return b.messageHandler.sendWithPromise("ElementBuilder.createTextBeginWithFont",{b:this.id,font:a.id,font_sz:c},this.userPriority).then(function(a){return"0"==a?null:new b.Element(a)})};b.ElementBuilder.prototype.createTextBegin=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createTextBegin'. Expected 0 arguments. Function Signature: createTextBegin()");return b.messageHandler.sendWithPromise("ElementBuilder.createTextBegin",{b:this.id},
this.userPriority).then(function(a){return"0"==a?null:new b.Element(a)})};b.ElementBuilder.prototype.createTextEnd=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createTextEnd'. Expected 0 arguments. Function Signature: createTextEnd()");return b.messageHandler.sendWithPromise("ElementBuilder.createTextEnd",{b:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Element(a)})};b.ElementBuilder.prototype.createTextRun=function(a,
c,d){if(3!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createTextRun'. Expected 3 arguments. Function Signature: createTextRun(string, Font, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createTextRun' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createTextRun' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: createTextRun(string, Font, number).");
if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createTextRun' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Font)){if("object"==typeof c)throw new TypeError("2nd input argument in function 'createTextRun' is of type '"+c.name+"'. Expected type 'Font'. Function Signature: createTextRun(string, Font, number).");throw new TypeError("2nd input argument '"+c+"' in function 'createTextRun' is of type '"+typeof c+"'. Expected type 'Font'. Function Signature: createTextRun(string, Font, number).");
}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createTextRun' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'createTextRun' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: createTextRun(string, Font, number).");return b.messageHandler.sendWithPromise("ElementBuilder.createTextRun",{b:this.id,text_data:a,font:c.id,font_sz:d},this.userPriority).then(function(a){return"0"==
a?null:new b.Element(a)})};b.ElementBuilder.prototype.createTextRunWithSize=function(a,c,d,e){if(4!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createTextRunWithSize'. Expected 4 arguments. Function Signature: createTextRunWithSize(string, number, Font, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createTextRunWithSize' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=
typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createTextRunWithSize' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: createTextRunWithSize(string, number, Font, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createTextRunWithSize' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createTextRunWithSize' is of type '"+
typeof c+"'. Expected type 'number'. Function Signature: createTextRunWithSize(string, number, Font, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createTextRunWithSize' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(d instanceof b.Font)){if("object"==typeof d)throw new TypeError("3rd input argument in function 'createTextRunWithSize' is of type '"+d.name+"'. Expected type 'Font'. Function Signature: createTextRunWithSize(string, number, Font, number).");
throw new TypeError("3rd input argument '"+d+"' in function 'createTextRunWithSize' is of type '"+typeof d+"'. Expected type 'Font'. Function Signature: createTextRunWithSize(string, number, Font, number).");}if(e instanceof Promise)throw new TypeError("4th input argument in function 'createTextRunWithSize' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof e)throw new TypeError("4th input argument '"+e+"' in function 'createTextRunWithSize' is of type '"+
typeof e+"'. Expected type 'number'. Function Signature: createTextRunWithSize(string, number, Font, number).");return b.messageHandler.sendWithPromise("ElementBuilder.createTextRunWithSize",{b:this.id,text_data:a,text_data_sz:c,font:d.id,font_sz:e},this.userPriority).then(function(a){return"0"==a?null:new b.Element(a)})};b.ElementBuilder.prototype.createTextRunUnsigned=function(a,c,d){if(3!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createTextRunUnsigned'. Expected 3 arguments. Function Signature: createTextRunUnsigned(string, Font, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createTextRunUnsigned' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createTextRunUnsigned' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: createTextRunUnsigned(string, Font, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createTextRunUnsigned' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.Font)){if("object"==typeof c)throw new TypeError("2nd input argument in function 'createTextRunUnsigned' is of type '"+c.name+"'. Expected type 'Font'. Function Signature: createTextRunUnsigned(string, Font, number).");throw new TypeError("2nd input argument '"+c+"' in function 'createTextRunUnsigned' is of type '"+typeof c+"'. Expected type 'Font'. Function Signature: createTextRunUnsigned(string, Font, number).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createTextRunUnsigned' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'createTextRunUnsigned' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: createTextRunUnsigned(string, Font, number).");return b.messageHandler.sendWithPromise("ElementBuilder.createTextRunUnsigned",{b:this.id,text_data:a,font:c.id,font_sz:d},this.userPriority).then(function(a){return"0"==a?null:new b.Element(a)})};b.ElementBuilder.prototype.createNewTextRun=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'createNewTextRun'. Expected 1 argument. Function Signature: createNewTextRun(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createNewTextRun' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createNewTextRun' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: createNewTextRun(string).");return b.messageHandler.sendWithPromise("ElementBuilder.createNewTextRun",
{b:this.id,text_data:a},this.userPriority).then(function(a){return"0"==a?null:new b.Element(a)})};b.ElementBuilder.prototype.createNewTextRunWithSize=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createNewTextRunWithSize'. Expected 2 arguments. Function Signature: createNewTextRunWithSize(string, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createNewTextRunWithSize' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createNewTextRunWithSize' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: createNewTextRunWithSize(string, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createNewTextRunWithSize' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createNewTextRunWithSize' is of type '"+
typeof c+"'. Expected type 'number'. Function Signature: createNewTextRunWithSize(string, number).");return b.messageHandler.sendWithPromise("ElementBuilder.createNewTextRunWithSize",{b:this.id,text_data:a,text_data_sz:c},this.userPriority).then(function(a){return"0"==a?null:new b.Element(a)})};b.ElementBuilder.prototype.createNewTextRunUnsigned=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createNewTextRunUnsigned'. Expected 1 argument. Function Signature: createNewTextRunUnsigned(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createNewTextRunUnsigned' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createNewTextRunUnsigned' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: createNewTextRunUnsigned(string).");return b.messageHandler.sendWithPromise("ElementBuilder.createNewTextRunUnsigned",{b:this.id,text_data:a},
this.userPriority).then(function(a){return"0"==a?null:new b.Element(a)})};b.ElementBuilder.prototype.createTextNewLineWithOffset=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createTextNewLineWithOffset'. Expected 2 arguments. Function Signature: createTextNewLineWithOffset(number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createTextNewLineWithOffset' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createTextNewLineWithOffset' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: createTextNewLineWithOffset(number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createTextNewLineWithOffset' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createTextNewLineWithOffset' is of type '"+
typeof c+"'. Expected type 'number'. Function Signature: createTextNewLineWithOffset(number, number).");return b.messageHandler.sendWithPromise("ElementBuilder.createTextNewLineWithOffset",{b:this.id,dx:a,dy:c},this.userPriority).then(function(a){return"0"==a?null:new b.Element(a)})};b.ElementBuilder.prototype.createTextNewLine=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createTextNewLine'. Expected 0 arguments. Function Signature: createTextNewLine()");
return b.messageHandler.sendWithPromise("ElementBuilder.createTextNewLine",{b:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Element(a)})};b.ElementBuilder.prototype.createPath=function(a,c){a instanceof Array&&(a=new Float64Array(a));c instanceof Array&&(c=new Float64Array(c));if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createPath'. Expected 2 arguments. Function Signature: createPath(ArrayBuffer, ArrayBuffer)");if(a instanceof
Promise)throw new TypeError("1st input argument in function 'createPath' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!h.isArrayBuffer(a.buffer)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createPath' is of type '"+a.name+"'. Expected type 'ArrayBuffer'. Function Signature: createPath(ArrayBuffer, ArrayBuffer).");throw new TypeError("1st input argument '"+a+"' in function 'createPath' is of type '"+typeof a+"'. Expected type 'ArrayBuffer'. Function Signature: createPath(ArrayBuffer, ArrayBuffer).");
}if(c instanceof Promise)throw new TypeError("3rd input argument in function 'createPath' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!h.isArrayBuffer(c.buffer)){if("object"==typeof c)throw new TypeError("3rd input argument in function 'createPath' is of type '"+c.name+"'. Expected type 'ArrayBuffer'. Function Signature: createPath(ArrayBuffer, ArrayBuffer).");throw new TypeError("3rd input argument '"+c+"' in function 'createPath' is of type '"+typeof c+
"'. Expected type 'ArrayBuffer'. Function Signature: createPath(ArrayBuffer, ArrayBuffer).");}return b.messageHandler.sendWithPromise("ElementBuilder.createPath",{b:this.id,buf_points:a.buffer,buf_seg_types:c.buffer},this.userPriority).then(function(a){return"0"==a?null:new b.Element(a)})};b.ElementBuilder.prototype.createRect=function(a,c,d,e){if(4!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createRect'. Expected 4 arguments. Function Signature: createRect(number, number, number, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createRect' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createRect' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: createRect(number, number, number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createRect' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createRect' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: createRect(number, number, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createRect' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'createRect' is of type '"+typeof d+
"'. Expected type 'number'. Function Signature: createRect(number, number, number, number).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'createRect' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof e)throw new TypeError("4th input argument '"+e+"' in function 'createRect' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: createRect(number, number, number, number).");return b.messageHandler.sendWithPromise("ElementBuilder.createRect",
{b:this.id,x:a,y:c,width:d,height:e},this.userPriority).then(function(a){return"0"==a?null:new b.Element(a)})};b.ElementBuilder.prototype.createEllipse=function(a,c,d,e){if(4!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createEllipse'. Expected 4 arguments. Function Signature: createEllipse(number, number, number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createEllipse' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createEllipse' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: createEllipse(number, number, number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createEllipse' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createEllipse' is of type '"+
typeof c+"'. Expected type 'number'. Function Signature: createEllipse(number, number, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createEllipse' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'createEllipse' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: createEllipse(number, number, number, number).");if(e instanceof
Promise)throw new TypeError("4th input argument in function 'createEllipse' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof e)throw new TypeError("4th input argument '"+e+"' in function 'createEllipse' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: createEllipse(number, number, number, number).");return b.messageHandler.sendWithPromise("ElementBuilder.createEllipse",{b:this.id,x:a,y:c,width:d,height:e},this.userPriority).then(function(a){return"0"==
a?null:new b.Element(a)})};b.ElementBuilder.prototype.pathBegin=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'pathBegin'. Expected 0 arguments. Function Signature: pathBegin()");return b.messageHandler.sendWithPromise("ElementBuilder.pathBegin",{b:this.id},this.userPriority)};b.ElementBuilder.prototype.pathEnd=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'pathEnd'. Expected 0 arguments. Function Signature: pathEnd()");
return b.messageHandler.sendWithPromise("ElementBuilder.pathEnd",{b:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Element(a)})};b.ElementBuilder.prototype.rect=function(a,c,d,e){if(4!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'rect'. Expected 4 arguments. Function Signature: rect(number, number, number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'rect' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'rect' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: rect(number, number, number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'rect' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'rect' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: rect(number, number, number, number).");
if(d instanceof Promise)throw new TypeError("3rd input argument in function 'rect' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'rect' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: rect(number, number, number, number).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'rect' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof e)throw new TypeError("4th input argument '"+e+"' in function 'rect' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: rect(number, number, number, number).");return b.messageHandler.sendWithPromise("ElementBuilder.rect",{b:this.id,x:a,y:c,width:d,height:e},this.userPriority)};b.ElementBuilder.prototype.ellipse=function(a,c,d,e){if(4!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'ellipse'. Expected 4 arguments. Function Signature: ellipse(number, number, number, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'ellipse' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'ellipse' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: ellipse(number, number, number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'ellipse' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'ellipse' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: ellipse(number, number, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'ellipse' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'ellipse' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: ellipse(number, number, number, number).");
if(e instanceof Promise)throw new TypeError("4th input argument in function 'ellipse' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof e)throw new TypeError("4th input argument '"+e+"' in function 'ellipse' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: ellipse(number, number, number, number).");return b.messageHandler.sendWithPromise("ElementBuilder.ellipse",{b:this.id,x:a,y:c,width:d,height:e},this.userPriority)};b.ElementBuilder.prototype.moveTo=
function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'moveTo'. Expected 2 arguments. Function Signature: moveTo(number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'moveTo' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'moveTo' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: moveTo(number, number).");
if(c instanceof Promise)throw new TypeError("2nd input argument in function 'moveTo' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'moveTo' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: moveTo(number, number).");return b.messageHandler.sendWithPromise("ElementBuilder.moveTo",{b:this.id,x:a,y:c},this.userPriority)};b.ElementBuilder.prototype.lineTo=function(a,
c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'lineTo'. Expected 2 arguments. Function Signature: lineTo(number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'lineTo' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'lineTo' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: lineTo(number, number).");
if(c instanceof Promise)throw new TypeError("2nd input argument in function 'lineTo' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'lineTo' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: lineTo(number, number).");return b.messageHandler.sendWithPromise("ElementBuilder.lineTo",{b:this.id,x:a,y:c},this.userPriority)};b.ElementBuilder.prototype.curveTo=function(a,
c,d,e,f,g){if(6!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'curveTo'. Expected 6 arguments. Function Signature: curveTo(number, number, number, number, number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'curveTo' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'curveTo' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: curveTo(number, number, number, number, number, number).");
if(c instanceof Promise)throw new TypeError("2nd input argument in function 'curveTo' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'curveTo' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: curveTo(number, number, number, number, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'curveTo' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'curveTo' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: curveTo(number, number, number, number, number, number).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'curveTo' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof e)throw new TypeError("4th input argument '"+e+"' in function 'curveTo' is of type '"+typeof e+
"'. Expected type 'number'. Function Signature: curveTo(number, number, number, number, number, number).");if(f instanceof Promise)throw new TypeError("5th input argument in function 'curveTo' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof f)throw new TypeError("5th input argument '"+f+"' in function 'curveTo' is of type '"+typeof f+"'. Expected type 'number'. Function Signature: curveTo(number, number, number, number, number, number).");if(g instanceof
Promise)throw new TypeError("6th input argument in function 'curveTo' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof g)throw new TypeError("6th input argument '"+g+"' in function 'curveTo' is of type '"+typeof g+"'. Expected type 'number'. Function Signature: curveTo(number, number, number, number, number, number).");return b.messageHandler.sendWithPromise("ElementBuilder.curveTo",{b:this.id,cx1:a,cy1:c,cx2:d,cy2:e,x2:f,y2:g},this.userPriority)};
b.ElementBuilder.prototype.arcTo=function(a,c,d,e,f,g){if(6!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'arcTo'. Expected 6 arguments. Function Signature: arcTo(number, number, number, number, number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'arcTo' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'arcTo' is of type '"+
typeof a+"'. Expected type 'number'. Function Signature: arcTo(number, number, number, number, number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'arcTo' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'arcTo' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: arcTo(number, number, number, number, number, number).");if(d instanceof
Promise)throw new TypeError("3rd input argument in function 'arcTo' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'arcTo' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: arcTo(number, number, number, number, number, number).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'arcTo' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof e)throw new TypeError("4th input argument '"+e+"' in function 'arcTo' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: arcTo(number, number, number, number, number, number).");if(f instanceof Promise)throw new TypeError("5th input argument in function 'arcTo' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof f)throw new TypeError("5th input argument '"+f+"' in function 'arcTo' is of type '"+typeof f+"'. Expected type 'number'. Function Signature: arcTo(number, number, number, number, number, number).");
if(g instanceof Promise)throw new TypeError("6th input argument in function 'arcTo' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof g)throw new TypeError("6th input argument '"+g+"' in function 'arcTo' is of type '"+typeof g+"'. Expected type 'number'. Function Signature: arcTo(number, number, number, number, number, number).");return b.messageHandler.sendWithPromise("ElementBuilder.arcTo",{b:this.id,x:a,y:c,width:d,height:e,start:f,extent:g},
this.userPriority)};b.ElementBuilder.prototype.arcTo2=function(a,c,d,e,f,g,k){if(7!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'arcTo2'. Expected 7 arguments. Function Signature: arcTo2(number, number, number, boolean, boolean, number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'arcTo2' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'arcTo2' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: arcTo2(number, number, number, boolean, boolean, number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'arcTo2' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'arcTo2' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: arcTo2(number, number, number, boolean, boolean, number, number).");
if(d instanceof Promise)throw new TypeError("3rd input argument in function 'arcTo2' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'arcTo2' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: arcTo2(number, number, number, boolean, boolean, number, number).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'arcTo2' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!=typeof e)throw new TypeError("4th input argument '"+e+"' in function 'arcTo2' is of type '"+typeof e+"'. Expected type 'boolean'. Function Signature: arcTo2(number, number, number, boolean, boolean, number, number).");if(f instanceof Promise)throw new TypeError("5th input argument in function 'arcTo2' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof f)throw new TypeError("5th input argument '"+f+"' in function 'arcTo2' is of type '"+
typeof f+"'. Expected type 'boolean'. Function Signature: arcTo2(number, number, number, boolean, boolean, number, number).");if(g instanceof Promise)throw new TypeError("6th input argument in function 'arcTo2' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof g)throw new TypeError("6th input argument '"+g+"' in function 'arcTo2' is of type '"+typeof g+"'. Expected type 'number'. Function Signature: arcTo2(number, number, number, boolean, boolean, number, number).");
if(k instanceof Promise)throw new TypeError("7th input argument in function 'arcTo2' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof k)throw new TypeError("7th input argument '"+k+"' in function 'arcTo2' is of type '"+typeof k+"'. Expected type 'number'. Function Signature: arcTo2(number, number, number, boolean, boolean, number, number).");return b.messageHandler.sendWithPromise("ElementBuilder.arcTo2",{b:this.id,xr:a,yr:c,rx:d,isLargeArc:e,
sweep:f,endX:g,endY:k},this.userPriority)};b.ElementBuilder.prototype.closePath=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'closePath'. Expected 0 arguments. Function Signature: closePath()");return b.messageHandler.sendWithPromise("ElementBuilder.closePath",{b:this.id},this.userPriority)};b.ElementReader.create=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 0 arguments. Function Signature: create()");
return b.messageHandler.sendWithPromise("elementReaderCreate",{},this.userPriority).then(function(a){if("0"==a)return null;a=new b.ElementReader(a);createdObjects.push({name:a.name,id:a.id});return a})};b.ElementReader.prototype.destroy=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=
a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("ElementReader.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.ElementReader.prototype.beginOnPage=function(a,c){"undefined"===typeof c&&(c=new b.OCGContext("0"));if(1>arguments.length||
2<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'beginOnPage'. Expected 1 to 2 arguments. Function Signature: beginOnPage(Page, OCGContext)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'beginOnPage' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Page)){if("object"==typeof a)throw new TypeError("1st input argument in function 'beginOnPage' is of type '"+a.name+"'. Expected type 'Page'. Function Signature: beginOnPage(Page, OCGContext).");
throw new TypeError("1st input argument '"+a+"' in function 'beginOnPage' is of type '"+typeof a+"'. Expected type 'Page'. Function Signature: beginOnPage(Page, OCGContext).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'beginOnPage' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.OCGContext)){if("object"==typeof c)throw new TypeError("2nd input argument in function 'beginOnPage' is of type '"+c.name+"'. Expected type 'OCGContext'. Function Signature: beginOnPage(Page, OCGContext).");
throw new TypeError("2nd input argument '"+c+"' in function 'beginOnPage' is of type '"+typeof c+"'. Expected type 'OCGContext'. Function Signature: beginOnPage(Page, OCGContext).");}return b.messageHandler.sendWithPromise("ElementReader.beginOnPage",{r:this.id,page:a.id,ctx:c.id},this.userPriority)};b.ElementReader.prototype.begin=function(a,c,d){"undefined"===typeof c&&(c=new b.Obj("0"));"undefined"===typeof d&&(d=new b.OCGContext("0"));if(1>arguments.length||3<arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'begin'. Expected 1 to 3 arguments. Function Signature: begin(Obj, Obj, OCGContext)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'begin' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'begin' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: begin(Obj, Obj, OCGContext).");throw new TypeError("1st input argument '"+
a+"' in function 'begin' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: begin(Obj, Obj, OCGContext).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'begin' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Obj)){if("object"==typeof c)throw new TypeError("2nd input argument in function 'begin' is of type '"+c.name+"'. Expected type 'Obj'. Function Signature: begin(Obj, Obj, OCGContext).");throw new TypeError("2nd input argument '"+
c+"' in function 'begin' is of type '"+typeof c+"'. Expected type 'Obj'. Function Signature: begin(Obj, Obj, OCGContext).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'begin' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(d instanceof b.OCGContext)){if("object"==typeof d)throw new TypeError("3rd input argument in function 'begin' is of type '"+d.name+"'. Expected type 'OCGContext'. Function Signature: begin(Obj, Obj, OCGContext).");
throw new TypeError("3rd input argument '"+d+"' in function 'begin' is of type '"+typeof d+"'. Expected type 'OCGContext'. Function Signature: begin(Obj, Obj, OCGContext).");}return b.messageHandler.sendWithPromise("ElementReader.begin",{r:this.id,content_stream:a.id,resource_dict:c.id,ctx:d.id},this.userPriority)};b.ElementReader.prototype.appendResource=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'appendResource'. Expected 1 argument. Function Signature: appendResource(Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'appendResource' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'appendResource' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: appendResource(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'appendResource' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: appendResource(Obj).");
}return b.messageHandler.sendWithPromise("ElementReader.appendResource",{r:this.id,res:a.id},this.userPriority)};b.ElementReader.prototype.next=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'next'. Expected 0 arguments. Function Signature: next()");return b.messageHandler.sendWithPromise("ElementReader.next",{r:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Element(a)})};b.ElementReader.prototype.current=function(){if(0!=
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'current'. Expected 0 arguments. Function Signature: current()");return b.messageHandler.sendWithPromise("ElementReader.current",{r:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Element(a)})};b.ElementReader.prototype.formBegin=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'formBegin'. Expected 0 arguments. Function Signature: formBegin()");
return b.messageHandler.sendWithPromise("ElementReader.formBegin",{r:this.id},this.userPriority)};b.ElementReader.prototype.patternBegin=function(a,c){"undefined"===typeof c&&(c=!1);if(1>arguments.length||2<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'patternBegin'. Expected 1 to 2 arguments. Function Signature: patternBegin(boolean, boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'patternBegin' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'patternBegin' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: patternBegin(boolean, boolean).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'patternBegin' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'patternBegin' is of type '"+typeof c+"'. Expected type 'boolean'. Function Signature: patternBegin(boolean, boolean).");
return b.messageHandler.sendWithPromise("ElementReader.patternBegin",{r:this.id,fill_pattern:a,reset_ctm_tfm:c},this.userPriority)};b.ElementReader.prototype.type3FontBegin=function(a,c){"undefined"===typeof c&&(c=new b.Obj("0"));if(1>arguments.length||2<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'type3FontBegin'. Expected 1 to 2 arguments. Function Signature: type3FontBegin(CharData, Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'type3FontBegin' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.CharData)&&"CharData"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'type3FontBegin' is of type '"+a.name+"'. Expected type 'CharData'. Function Signature: type3FontBegin(CharData, Obj).");throw new TypeError("1st input argument '"+a+"' in function 'type3FontBegin' is of type '"+typeof a+"'. Expected type 'CharData'. Function Signature: type3FontBegin(CharData, Obj).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'type3FontBegin' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.Obj)){if("object"==typeof c)throw new TypeError("2nd input argument in function 'type3FontBegin' is of type '"+c.name+"'. Expected type 'Obj'. Function Signature: type3FontBegin(CharData, Obj).");throw new TypeError("2nd input argument '"+c+"' in function 'type3FontBegin' is of type '"+typeof c+"'. Expected type 'Obj'. Function Signature: type3FontBegin(CharData, Obj).");}if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'type3FontBegin'. Perhaps a yield statement is required for '"+
a.yieldFunction+"'?");var d=this;this.yieldFunction="ElementReader.type3FontBegin";return b.messageHandler.sendWithPromise("ElementReader.type3FontBegin",{r:this.id,char_data:a,resource_dict:c.id},this.userPriority).then(function(a){d.yieldFunction=void 0;copyFunc(a.char_data,d)})};b.ElementReader.prototype.end=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'end'. Expected 0 arguments. Function Signature: end()");return b.messageHandler.sendWithPromise("ElementReader.end",
{r:this.id},this.userPriority)};b.ElementReader.prototype.getChangesIterator=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getChangesIterator'. Expected 0 arguments. Function Signature: getChangesIterator()");return b.messageHandler.sendWithPromise("ElementReader.getChangesIterator",{r:this.id},this.userPriority).then(function(a){if("0"==a)return null;a=new b.Iterator(a);createdObjects.push({name:a.name,id:a.id});return a})};b.ElementReader.prototype.isChanged=
function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isChanged'. Expected 1 argument. Function Signature: isChanged(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'isChanged' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'isChanged' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: isChanged(number).");
return b.messageHandler.sendWithPromise("ElementReader.isChanged",{r:this.id,attrib:a},this.userPriority)};b.ElementReader.prototype.clearChangeList=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'clearChangeList'. Expected 0 arguments. Function Signature: clearChangeList()");return b.messageHandler.sendWithPromise("ElementReader.clearChangeList",{r:this.id},this.userPriority)};b.ElementReader.prototype.getFont=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getFont'. Expected 1 argument. Function Signature: getFont(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getFont' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getFont' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: getFont(string).");return b.messageHandler.sendWithPromise("ElementReader.getFont",
{r:this.id,name:a},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.ElementReader.prototype.getXObject=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getXObject'. Expected 1 argument. Function Signature: getXObject(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getXObject' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'getXObject' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: getXObject(string).");return b.messageHandler.sendWithPromise("ElementReader.getXObject",{r:this.id,name:a},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.ElementReader.prototype.getShading=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getShading'. Expected 1 argument. Function Signature: getShading(string)");if(a instanceof
Promise)throw new TypeError("1st input argument in function 'getShading' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getShading' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: getShading(string).");return b.messageHandler.sendWithPromise("ElementReader.getShading",{r:this.id,name:a},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.ElementReader.prototype.getColorSpace=
function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getColorSpace'. Expected 1 argument. Function Signature: getColorSpace(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getColorSpace' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getColorSpace' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: getColorSpace(string).");
return b.messageHandler.sendWithPromise("ElementReader.getColorSpace",{r:this.id,name:a},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.ElementReader.prototype.getPattern=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPattern'. Expected 1 argument. Function Signature: getPattern(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getPattern' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getPattern' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: getPattern(string).");return b.messageHandler.sendWithPromise("ElementReader.getPattern",{r:this.id,name:a},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.ElementReader.prototype.getExtGState=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getExtGState'. Expected 1 argument. Function Signature: getExtGState(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'getExtGState' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getExtGState' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: getExtGState(string).");return b.messageHandler.sendWithPromise("ElementReader.getExtGState",{r:this.id,name:a},this.userPriority).then(function(a){return"0"==
a?null:new b.Obj(a)})};b.ElementWriter.create=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 0 arguments. Function Signature: create()");return b.messageHandler.sendWithPromise("elementWriterCreate",{},this.userPriority).then(function(a){if("0"==a)return null;a=new b.ElementWriter(a);createdObjects.push({name:a.name,id:a.id});return a})};b.ElementWriter.prototype.destroy=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("ElementWriter.destroy",
{auto_dealloc_obj:this.id},this.userPriority)};b.ElementWriter.prototype.beginOnPage=function(a,c,d,e){"undefined"===typeof c&&(c=b.ElementWriter.WriteMode.e_overlay);"undefined"===typeof d&&(d=!0);"undefined"===typeof e&&(e=!0);if(1>arguments.length||4<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'beginOnPage'. Expected 1 to 4 arguments. Function Signature: beginOnPage(Page, number, boolean, boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'beginOnPage' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Page)){if("object"==typeof a)throw new TypeError("1st input argument in function 'beginOnPage' is of type '"+a.name+"'. Expected type 'Page'. Function Signature: beginOnPage(Page, number, boolean, boolean).");throw new TypeError("1st input argument '"+a+"' in function 'beginOnPage' is of type '"+typeof a+"'. Expected type 'Page'. Function Signature: beginOnPage(Page, number, boolean, boolean).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'beginOnPage' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'beginOnPage' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: beginOnPage(Page, number, boolean, boolean).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'beginOnPage' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'beginOnPage' is of type '"+typeof d+
"'. Expected type 'boolean'. Function Signature: beginOnPage(Page, number, boolean, boolean).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'beginOnPage' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof e)throw new TypeError("4th input argument '"+e+"' in function 'beginOnPage' is of type '"+typeof e+"'. Expected type 'boolean'. Function Signature: beginOnPage(Page, number, boolean, boolean).");return b.messageHandler.sendWithPromise("ElementWriter.beginOnPage",
{w:this.id,page:a.id,placement:c,page_coord_sys:d,compress:e},this.userPriority)};b.ElementWriter.prototype.begin=function(a,c){"undefined"===typeof c&&(c=!0);if(1>arguments.length||2<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'begin'. Expected 1 to 2 arguments. Function Signature: begin(SDFDoc, boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'begin' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'begin' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: begin(SDFDoc, boolean).");throw new TypeError("1st input argument '"+a+"' in function 'begin' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: begin(SDFDoc, boolean).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'begin' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'begin' is of type '"+typeof c+"'. Expected type 'boolean'. Function Signature: begin(SDFDoc, boolean).");return b.messageHandler.sendWithPromise("ElementWriter.begin",{w:this.id,doc:a.id,compress:c},this.userPriority)};b.ElementWriter.prototype.beginOnObj=function(a,c){"undefined"===typeof c&&(c=!0);if(1>arguments.length||2<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'beginOnObj'. Expected 1 to 2 arguments. Function Signature: beginOnObj(Obj, boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'beginOnObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'beginOnObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: beginOnObj(Obj, boolean).");throw new TypeError("1st input argument '"+a+"' in function 'beginOnObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: beginOnObj(Obj, boolean).");
}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'beginOnObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'beginOnObj' is of type '"+typeof c+"'. Expected type 'boolean'. Function Signature: beginOnObj(Obj, boolean).");return b.messageHandler.sendWithPromise("ElementWriter.beginOnObj",{w:this.id,stream_obj_to_update:a.id,compress:c},this.userPriority)};
b.ElementWriter.prototype.end=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'end'. Expected 0 arguments. Function Signature: end()");return b.messageHandler.sendWithPromise("ElementWriter.end",{w:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.ElementWriter.prototype.writeElement=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'writeElement'. Expected 1 argument. Function Signature: writeElement(Element)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'writeElement' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Element)){if("object"==typeof a)throw new TypeError("1st input argument in function 'writeElement' is of type '"+a.name+"'. Expected type 'Element'. Function Signature: writeElement(Element).");throw new TypeError("1st input argument '"+a+"' in function 'writeElement' is of type '"+typeof a+"'. Expected type 'Element'. Function Signature: writeElement(Element).");
}return b.messageHandler.sendWithPromise("ElementWriter.writeElement",{w:this.id,element:a.id},this.userPriority)};b.ElementWriter.prototype.writePlacedElement=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'writePlacedElement'. Expected 1 argument. Function Signature: writePlacedElement(Element)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'writePlacedElement' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Element)){if("object"==typeof a)throw new TypeError("1st input argument in function 'writePlacedElement' is of type '"+a.name+"'. Expected type 'Element'. Function Signature: writePlacedElement(Element).");throw new TypeError("1st input argument '"+a+"' in function 'writePlacedElement' is of type '"+typeof a+"'. Expected type 'Element'. Function Signature: writePlacedElement(Element).");}return b.messageHandler.sendWithPromise("ElementWriter.writePlacedElement",{w:this.id,element:a.id},
this.userPriority)};b.ElementWriter.prototype.flush=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'flush'. Expected 0 arguments. Function Signature: flush()");return b.messageHandler.sendWithPromise("ElementWriter.flush",{w:this.id},this.userPriority)};b.ElementWriter.prototype.writeBuffer=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'writeBuffer'. Expected 2 arguments. Function Signature: writeBuffer(string, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'writeBuffer' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'writeBuffer' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: writeBuffer(string, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'writeBuffer' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'writeBuffer' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: writeBuffer(string, number).");return b.messageHandler.sendWithPromise("ElementWriter.writeBuffer",{w:this.id,data:a,data_sz:c},this.userPriority)};b.ElementWriter.prototype.writeString=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'writeString'. Expected 1 argument. Function Signature: writeString(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'writeString' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'writeString' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: writeString(string).");return b.messageHandler.sendWithPromise("ElementWriter.writeString",{w:this.id,str:a},this.userPriority)};b.FileSpec.create=function(a,c,d){"undefined"===
typeof d&&(d=!0);if(2>arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 2 to 3 arguments. Function Signature: create(SDFDoc, string, boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'create' is of type '"+
a.name+"'. Expected type 'SDFDoc'. Function Signature: create(SDFDoc, string, boolean).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: create(SDFDoc, string, boolean).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof c)throw new TypeError("2nd input argument '"+c+
"' in function 'create' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: create(SDFDoc, string, boolean).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'create' is of type '"+typeof d+"'. Expected type 'boolean'. Function Signature: create(SDFDoc, string, boolean).");return b.messageHandler.sendWithPromise("fileSpecCreate",
{doc:a.id,path:c,embed:d},this.userPriority).then(function(a){return"0"==a?null:new b.FileSpec(a)})};b.FileSpec.createURL=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createURL'. Expected 2 arguments. Function Signature: createURL(SDFDoc, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createURL' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof
b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createURL' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: createURL(SDFDoc, string).");throw new TypeError("1st input argument '"+a+"' in function 'createURL' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: createURL(SDFDoc, string).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createURL' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createURL' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: createURL(SDFDoc, string).");return b.messageHandler.sendWithPromise("fileSpecCreateURL",{doc:a.id,url:c},this.userPriority).then(function(a){return"0"==a?null:new b.FileSpec(a)})};b.FileSpec.createFromObj=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected 1 argument. Function Signature: createFromObj(Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");
}return b.messageHandler.sendWithPromise("fileSpecCreateFromObj",{f:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.FileSpec(a)})};b.FileSpec.prototype.copy=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'copy'. Expected 0 arguments. Function Signature: copy()");return b.messageHandler.sendWithPromise("FileSpec.copy",{d:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.FileSpec(a)})};b.FileSpec.prototype.compare=
function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'compare'. Expected 1 argument. Function Signature: compare(FileSpec)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'compare' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.FileSpec)){if("object"==typeof a)throw new TypeError("1st input argument in function 'compare' is of type '"+a.name+"'. Expected type 'FileSpec'. Function Signature: compare(FileSpec).");
throw new TypeError("1st input argument '"+a+"' in function 'compare' is of type '"+typeof a+"'. Expected type 'FileSpec'. Function Signature: compare(FileSpec).");}return b.messageHandler.sendWithPromise("FileSpec.compare",{fs:this.id,d:a.id},this.userPriority)};b.FileSpec.prototype.isValid=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isValid'. Expected 0 arguments. Function Signature: isValid()");return b.messageHandler.sendWithPromise("FileSpec.isValid",
{fs:this.id},this.userPriority)};b.FileSpec.prototype["export"]=function(a){"undefined"===typeof a&&(a="");if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'export'. Expected at most 1 arguments. Function Signature: export(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'export' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'export' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: export(string).");return b.messageHandler.sendWithPromise("FileSpec.export",{fs:this.id,save_as:a},this.userPriority)};b.FileSpec.prototype.getFileData=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFileData'. Expected 0 arguments. Function Signature: getFileData()");return b.messageHandler.sendWithPromise("FileSpec.getFileData",{fs:this.id},
this.userPriority).then(function(a){return"0"==a?null:new b.Filter(a)})};b.FileSpec.prototype.getFilePath=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFilePath'. Expected 0 arguments. Function Signature: getFilePath()");return b.messageHandler.sendWithPromise("FileSpec.getFilePath",{fs:this.id},this.userPriority)};b.FileSpec.prototype.setDesc=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setDesc'. Expected 1 argument. Function Signature: setDesc(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setDesc' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setDesc' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setDesc(string).");return b.messageHandler.sendWithPromise("FileSpec.setDesc",{fs:this.id,desc:a},this.userPriority)};b.FileSpec.prototype.getSDFObj=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getSDFObj'. Expected 0 arguments. Function Signature: getSDFObj()");return b.messageHandler.sendWithPromise("FileSpec.getSDFObj",{fs:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Flattener.create=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 0 arguments. Function Signature: create()");return b.messageHandler.sendWithPromise("flattenerCreate",{},this.userPriority).then(function(a){if("0"==
a)return null;a=new b.Flattener(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Flattener.prototype.destroy=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];
else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("Flattener.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.Flattener.prototype.setDPI=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setDPI'. Expected 1 argument. Function Signature: setDPI(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setDPI' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setDPI' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setDPI(number).");return b.messageHandler.sendWithPromise("Flattener.setDPI",{flattener:this.id,dpi:a},this.userPriority)};b.Flattener.prototype.setThreshold=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setThreshold'. Expected 1 argument. Function Signature: setThreshold(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setThreshold' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setThreshold' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setThreshold(number).");return b.messageHandler.sendWithPromise("Flattener.setThreshold",{flattener:this.id,threshold:a},this.userPriority)};b.Flattener.prototype.setMaximumImagePixels=
function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setMaximumImagePixels'. Expected 1 argument. Function Signature: setMaximumImagePixels(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setMaximumImagePixels' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setMaximumImagePixels' is of type '"+
typeof a+"'. Expected type 'number'. Function Signature: setMaximumImagePixels(number).");return b.messageHandler.sendWithPromise("Flattener.setMaximumImagePixels",{flattener:this.id,max_pixels:a},this.userPriority)};b.Flattener.prototype.setPreferJPG=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPreferJPG'. Expected 1 argument. Function Signature: setPreferJPG(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPreferJPG' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setPreferJPG' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setPreferJPG(boolean).");return b.messageHandler.sendWithPromise("Flattener.setPreferJPG",{flattener:this.id,jpg:a},this.userPriority)};b.Flattener.prototype.setJPGQuality=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setJPGQuality'. Expected 1 argument. Function Signature: setJPGQuality(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setJPGQuality' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setJPGQuality' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setJPGQuality(number).");return b.messageHandler.sendWithPromise("Flattener.setJPGQuality",{flattener:this.id,quality:a},this.userPriority)};b.Flattener.prototype.setPathHinting=
function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPathHinting'. Expected 1 argument. Function Signature: setPathHinting(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPathHinting' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setPathHinting' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setPathHinting(boolean).");
return b.messageHandler.sendWithPromise("Flattener.setPathHinting",{flattener:this.id,hinting:a},this.userPriority)};b.Flattener.prototype.process=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'process'. Expected 2 arguments. Function Signature: process(PDFDoc, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'process' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'process' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: process(PDFDoc, number).");throw new TypeError("1st input argument '"+a+"' in function 'process' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: process(PDFDoc, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'process' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'process' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: process(PDFDoc, number).");return b.messageHandler.sendWithPromise("Flattener.process",{flattener:this.id,doc:a.id,mode:c},this.userPriority)};b.Flattener.prototype.processPage=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'processPage'. Expected 2 arguments. Function Signature: processPage(Page, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'processPage' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Page)){if("object"==typeof a)throw new TypeError("1st input argument in function 'processPage' is of type '"+a.name+"'. Expected type 'Page'. Function Signature: processPage(Page, number).");throw new TypeError("1st input argument '"+a+"' in function 'processPage' is of type '"+typeof a+"'. Expected type 'Page'. Function Signature: processPage(Page, number).");
}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'processPage' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'processPage' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: processPage(Page, number).");return b.messageHandler.sendWithPromise("Flattener.processPage",{flattener:this.id,page:a.id,mode:c},this.userPriority)};b.Font.createFromObj=
function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected at most 1 arguments. Function Signature: createFromObj(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+
a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");}return b.messageHandler.sendWithPromise("fontCreateFromObj",{font_dict:a.id},this.userPriority).then(function(a){if("0"==a)return null;a=new b.Font(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Font.create=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'create'. Expected 2 arguments. Function Signature: create(SDFDoc, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: create(SDFDoc, number).");
throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: create(SDFDoc, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: create(SDFDoc, number).");
return b.messageHandler.sendWithPromise("fontCreate",{doc:a.id,type:c},this.userPriority).then(function(a){if("0"==a)return null;a=new b.Font(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Font.createFromFontDescriptor=function(a,c,d){if(3!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromFontDescriptor'. Expected 3 arguments. Function Signature: createFromFontDescriptor(SDFDoc, Font, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromFontDescriptor' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromFontDescriptor' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: createFromFontDescriptor(SDFDoc, Font, string).");throw new TypeError("1st input argument '"+a+"' in function 'createFromFontDescriptor' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: createFromFontDescriptor(SDFDoc, Font, string).");
}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createFromFontDescriptor' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Font)){if("object"==typeof c)throw new TypeError("2nd input argument in function 'createFromFontDescriptor' is of type '"+c.name+"'. Expected type 'Font'. Function Signature: createFromFontDescriptor(SDFDoc, Font, string).");throw new TypeError("2nd input argument '"+c+"' in function 'createFromFontDescriptor' is of type '"+
typeof c+"'. Expected type 'Font'. Function Signature: createFromFontDescriptor(SDFDoc, Font, string).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createFromFontDescriptor' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'createFromFontDescriptor' is of type '"+typeof d+"'. Expected type 'string'. Function Signature: createFromFontDescriptor(SDFDoc, Font, string).");
return b.messageHandler.sendWithPromise("fontCreateFromFontDescriptor",{doc:a.id,from:c.id,char_set:d},this.userPriority).then(function(a){if("0"==a)return null;a=new b.Font(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Font.createFromName=function(a,c,d){if(3!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromName'. Expected 3 arguments. Function Signature: createFromName(SDFDoc, string, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromName' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromName' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: createFromName(SDFDoc, string, string).");throw new TypeError("1st input argument '"+a+"' in function 'createFromName' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: createFromName(SDFDoc, string, string).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createFromName' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createFromName' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: createFromName(SDFDoc, string, string).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createFromName' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'createFromName' is of type '"+
typeof d+"'. Expected type 'string'. Function Signature: createFromName(SDFDoc, string, string).");return b.messageHandler.sendWithPromise("fontCreateFromName",{doc:a.id,name:c,char_set:d},this.userPriority).then(function(a){if("0"==a)return null;a=new b.Font(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Font.createAndEmbed=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createAndEmbed'. Expected 2 arguments. Function Signature: createAndEmbed(SDFDoc, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createAndEmbed' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createAndEmbed' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: createAndEmbed(SDFDoc, number).");throw new TypeError("1st input argument '"+a+"' in function 'createAndEmbed' is of type '"+
typeof a+"'. Expected type 'SDFDoc'. Function Signature: createAndEmbed(SDFDoc, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createAndEmbed' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createAndEmbed' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: createAndEmbed(SDFDoc, number).");return b.messageHandler.sendWithPromise("fontCreateAndEmbed",
{doc:a.id,type:c},this.userPriority).then(function(a){if("0"==a)return null;a=new b.Font(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Font.prototype.assign=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'assign'. Expected 1 argument. Function Signature: assign(Font)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'assign' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Font)){if("object"==typeof a)throw new TypeError("1st input argument in function 'assign' is of type '"+a.name+"'. Expected type 'Font'. Function Signature: assign(Font).");throw new TypeError("1st input argument '"+a+"' in function 'assign' is of type '"+typeof a+"'. Expected type 'Font'. Function Signature: assign(Font).");}return b.messageHandler.sendWithPromise("Font.assign",{left:this.id,right:a.id},this.userPriority)};b.Font.prototype.destroy=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("Font.destroy",
{auto_dealloc_obj:this.id},this.userPriority)};b.Font.prototype.getType=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getType'. Expected 0 arguments. Function Signature: getType()");return b.messageHandler.sendWithPromise("Font.getType",{font:this.id},this.userPriority)};b.Font.prototype.isSimple=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isSimple'. Expected 0 arguments. Function Signature: isSimple()");
return b.messageHandler.sendWithPromise("Font.isSimple",{font:this.id},this.userPriority)};b.Font.getTypeFromObj=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTypeFromObj'. Expected 1 argument. Function Signature: getTypeFromObj(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getTypeFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==
typeof a)throw new TypeError("1st input argument in function 'getTypeFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: getTypeFromObj(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'getTypeFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: getTypeFromObj(Obj).");}return b.messageHandler.sendWithPromise("fontGetTypeFromObj",{font_dict:a.id},this.userPriority)};b.Font.prototype.getSDFObj=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getSDFObj'. Expected 0 arguments. Function Signature: getSDFObj()");return b.messageHandler.sendWithPromise("Font.getSDFObj",{font:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Font.prototype.getDescriptor=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getDescriptor'. Expected 0 arguments. Function Signature: getDescriptor()");return b.messageHandler.sendWithPromise("Font.getDescriptor",
{font:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Font.prototype.getName=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getName'. Expected 0 arguments. Function Signature: getName()");return b.messageHandler.sendWithPromise("Font.getName",{font:this.id},this.userPriority)};b.Font.prototype.getFamilyName=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFamilyName'. Expected 0 arguments. Function Signature: getFamilyName()");
return b.messageHandler.sendWithPromise("Font.getFamilyName",{font:this.id},this.userPriority)};b.Font.prototype.isFixedWidth=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isFixedWidth'. Expected 0 arguments. Function Signature: isFixedWidth()");return b.messageHandler.sendWithPromise("Font.isFixedWidth",{font:this.id},this.userPriority)};b.Font.prototype.isSerif=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isSerif'. Expected 0 arguments. Function Signature: isSerif()");
return b.messageHandler.sendWithPromise("Font.isSerif",{font:this.id},this.userPriority)};b.Font.prototype.isSymbolic=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isSymbolic'. Expected 0 arguments. Function Signature: isSymbolic()");return b.messageHandler.sendWithPromise("Font.isSymbolic",{font:this.id},this.userPriority)};b.Font.prototype.isItalic=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isItalic'. Expected 0 arguments. Function Signature: isItalic()");
return b.messageHandler.sendWithPromise("Font.isItalic",{font:this.id},this.userPriority)};b.Font.prototype.isAllCap=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isAllCap'. Expected 0 arguments. Function Signature: isAllCap()");return b.messageHandler.sendWithPromise("Font.isAllCap",{font:this.id},this.userPriority)};b.Font.prototype.isForceBold=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isForceBold'. Expected 0 arguments. Function Signature: isForceBold()");
return b.messageHandler.sendWithPromise("Font.isForceBold",{font:this.id},this.userPriority)};b.Font.prototype.isHorizontalMode=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isHorizontalMode'. Expected 0 arguments. Function Signature: isHorizontalMode()");return b.messageHandler.sendWithPromise("Font.isHorizontalMode",{font:this.id},this.userPriority)};b.Font.prototype.getWidth=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getWidth'. Expected 1 argument. Function Signature: getWidth(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getWidth' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getWidth' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getWidth(number).");return b.messageHandler.sendWithPromise("Font.getWidth",
{font:this.id,char_code:a},this.userPriority)};b.Font.prototype.getMaxWidth=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getMaxWidth'. Expected 0 arguments. Function Signature: getMaxWidth()");return b.messageHandler.sendWithPromise("Font.getMaxWidth",{font:this.id},this.userPriority)};b.Font.prototype.getMissingWidth=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getMissingWidth'. Expected 0 arguments. Function Signature: getMissingWidth()");
return b.messageHandler.sendWithPromise("Font.getMissingWidth",{font:this.id},this.userPriority)};b.Font.prototype.getCharCodeIterator=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getCharCodeIterator'. Expected 0 arguments. Function Signature: getCharCodeIterator()");return b.messageHandler.sendWithPromise("Font.getCharCodeIterator",{font:this.id},this.userPriority).then(function(a){if("0"==a)return null;a=new b.Iterator(a);createdObjects.push({name:a.name,
id:a.id});return a})};b.Font.prototype.getEncoding=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getEncoding'. Expected 0 arguments. Function Signature: getEncoding()");return b.messageHandler.sendWithPromise("Font.getEncoding",{font:this.id},this.userPriority)};b.Font.prototype.isEmbedded=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isEmbedded'. Expected 0 arguments. Function Signature: isEmbedded()");
return b.messageHandler.sendWithPromise("Font.isEmbedded",{font:this.id},this.userPriority)};b.Font.prototype.getEmbeddedFontName=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getEmbeddedFontName'. Expected 0 arguments. Function Signature: getEmbeddedFontName()");return b.messageHandler.sendWithPromise("Font.getEmbeddedFontName",{font:this.id},this.userPriority)};b.Font.prototype.getEmbeddedFont=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getEmbeddedFont'. Expected 0 arguments. Function Signature: getEmbeddedFont()");return b.messageHandler.sendWithPromise("Font.getEmbeddedFont",{font:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Font.prototype.getEmbeddedFontBufSize=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getEmbeddedFontBufSize'. Expected 0 arguments. Function Signature: getEmbeddedFontBufSize()");
return b.messageHandler.sendWithPromise("Font.getEmbeddedFontBufSize",{font:this.id},this.userPriority)};b.Font.prototype.getUnitsPerEm=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getUnitsPerEm'. Expected 0 arguments. Function Signature: getUnitsPerEm()");return b.messageHandler.sendWithPromise("Font.getUnitsPerEm",{font:this.id},this.userPriority)};b.Font.prototype.getBBox=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getBBox'. Expected 0 arguments. Function Signature: getBBox()");return b.messageHandler.sendWithPromise("Font.getBBox",{font:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Rect(a)})};b.Font.prototype.getAscent=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getAscent'. Expected 0 arguments. Function Signature: getAscent()");return b.messageHandler.sendWithPromise("Font.getAscent",{font:this.id},
this.userPriority)};b.Font.prototype.getDescent=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getDescent'. Expected 0 arguments. Function Signature: getDescent()");return b.messageHandler.sendWithPromise("Font.getDescent",{font:this.id},this.userPriority)};b.Font.prototype.getStandardType1FontType=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getStandardType1FontType'. Expected 0 arguments. Function Signature: getStandardType1FontType()");
return b.messageHandler.sendWithPromise("Font.getStandardType1FontType",{font:this.id},this.userPriority)};b.Font.prototype.isCFF=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isCFF'. Expected 0 arguments. Function Signature: isCFF()");return b.messageHandler.sendWithPromise("Font.isCFF",{font:this.id},this.userPriority)};b.Font.prototype.getType3FontMatrix=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getType3FontMatrix'. Expected 0 arguments. Function Signature: getType3FontMatrix()");
return b.messageHandler.sendWithPromise("Font.getType3FontMatrix",{font:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Matrix2D(a)})};b.Font.prototype.getType3GlyphStream=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getType3GlyphStream'. Expected 1 argument. Function Signature: getType3GlyphStream(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getType3GlyphStream' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getType3GlyphStream' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getType3GlyphStream(number).");return b.messageHandler.sendWithPromise("Font.getType3GlyphStream",{font:this.id,char_code:a},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Font.prototype.getVerticalAdvance=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getVerticalAdvance'. Expected 1 argument. Function Signature: getVerticalAdvance(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'getVerticalAdvance' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getVerticalAdvance' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getVerticalAdvance(number).");return b.messageHandler.sendWithPromise("Font.getVerticalAdvance",{font:this.id,char_code:a},this.userPriority)};b.Font.prototype.getDescendant=
function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getDescendant'. Expected 0 arguments. Function Signature: getDescendant()");return b.messageHandler.sendWithPromise("Font.getDescendant",{font:this.id},this.userPriority).then(function(a){if("0"==a)return null;a=new b.Font(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Font.prototype.mapToCID=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'mapToCID'. Expected 1 argument. Function Signature: mapToCID(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'mapToCID' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'mapToCID' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: mapToCID(number).");return b.messageHandler.sendWithPromise("Font.mapToCID",{font:this.id,char_code:a},this.userPriority)};b.Font.prototype.mapToCID2=function(a,c){if(2!=
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'mapToCID2'. Expected 2 arguments. Function Signature: mapToCID2(number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'mapToCID2' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'mapToCID2' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: mapToCID2(number, number).");
if(c instanceof Promise)throw new TypeError("2nd input argument in function 'mapToCID2' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'mapToCID2' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: mapToCID2(number, number).");return b.messageHandler.sendWithPromise("Font.mapToCID2",{font:this.id,char_data:a,char_data_avail:c},this.userPriority)};b.Function.create=
function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected at most 1 arguments. Function Signature: create(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'create' is of type '"+
a.name+"'. Expected type 'Obj'. Function Signature: create(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: create(Obj).");}return b.messageHandler.sendWithPromise("functionCreate",{funct_dict:a.id},this.userPriority).then(function(a){if("0"==a)return null;a=new b.Function(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Function.prototype.assign=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'assign'. Expected 1 argument. Function Signature: assign(Function)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'assign' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Function)){if("object"==typeof a)throw new TypeError("1st input argument in function 'assign' is of type '"+a.name+"'. Expected type 'Function'. Function Signature: assign(Function).");throw new TypeError("1st input argument '"+
a+"' in function 'assign' is of type '"+typeof a+"'. Expected type 'Function'. Function Signature: assign(Function).");}return b.messageHandler.sendWithPromise("Function.assign",{left:this.id,right:a.id},this.userPriority)};b.Function.prototype.destroy=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=
c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("Function.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.Function.prototype.getType=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getType'. Expected 0 arguments. Function Signature: getType()");
return b.messageHandler.sendWithPromise("Function.getType",{f:this.id},this.userPriority)};b.Function.prototype.getInputCardinality=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getInputCardinality'. Expected 0 arguments. Function Signature: getInputCardinality()");return b.messageHandler.sendWithPromise("Function.getInputCardinality",{f:this.id},this.userPriority)};b.Function.prototype.getOutputCardinality=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getOutputCardinality'. Expected 0 arguments. Function Signature: getOutputCardinality()");return b.messageHandler.sendWithPromise("Function.getOutputCardinality",{f:this.id},this.userPriority)};b.Function.prototype.eval=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'eval'. Expected 2 arguments. Function Signature: eval(number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'eval' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'eval' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: eval(number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'eval' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'eval' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: eval(number, number).");
return b.messageHandler.sendWithPromise("Function.eval",{f:this.id,inval:a,outval:c},this.userPriority)};b.Function.prototype.getSDFObj=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSDFObj'. Expected 0 arguments. Function Signature: getSDFObj()");return b.messageHandler.sendWithPromise("Function.getSDFObj",{f:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Highlights.create=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'create'. Expected 0 arguments. Function Signature: create()");return b.messageHandler.sendWithPromise("highlightsCreate",{},this.userPriority).then(function(a){if("0"==a)return null;a=new b.Highlights(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Highlights.prototype.destroy=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=
-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("Highlights.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.Highlights.prototype.copyCtor=function(){if(0!=
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'copyCtor'. Expected 0 arguments. Function Signature: copyCtor()");return b.messageHandler.sendWithPromise("Highlights.copyCtor",{hlts:this.id},this.userPriority).then(function(a){if("0"==a)return null;a=new b.Highlights(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Highlights.prototype.assign=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'assign'. Expected 0 arguments. Function Signature: assign()");
return b.messageHandler.sendWithPromise("Highlights.assign",{hlts:this.id},this.userPriority).then(function(a){if("0"==a)return null;a=new b.Highlights(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Highlights.prototype.add=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'add'. Expected 1 argument. Function Signature: add(Highlights)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'add' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Highlights)){if("object"==typeof a)throw new TypeError("1st input argument in function 'add' is of type '"+a.name+"'. Expected type 'Highlights'. Function Signature: add(Highlights).");throw new TypeError("1st input argument '"+a+"' in function 'add' is of type '"+typeof a+"'. Expected type 'Highlights'. Function Signature: add(Highlights).");}return b.messageHandler.sendWithPromise("Highlights.add",{hlts2:this.id,hlts:a.id},this.userPriority)};b.Highlights.prototype.load=function(a){if(1!=
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'load'. Expected 1 argument. Function Signature: load(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'load' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'load' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: load(string).");return b.messageHandler.sendWithPromise("Highlights.load",
{hlts:this.id,file_name:a},this.userPriority)};b.Highlights.prototype.save=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'save'. Expected 1 argument. Function Signature: save(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'save' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'save' is of type '"+
typeof a+"'. Expected type 'string'. Function Signature: save(string).");return b.messageHandler.sendWithPromise("Highlights.save",{hlts:this.id,file_name:a},this.userPriority)};b.Highlights.prototype.clear=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'clear'. Expected 0 arguments. Function Signature: clear()");return b.messageHandler.sendWithPromise("Highlights.clear",{hlts:this.id},this.userPriority)};b.Highlights.prototype.begin=function(a){if(1!=
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'begin'. Expected 1 argument. Function Signature: begin(PDFDoc)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'begin' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'begin' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: begin(PDFDoc).");
throw new TypeError("1st input argument '"+a+"' in function 'begin' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: begin(PDFDoc).");}return b.messageHandler.sendWithPromise("Highlights.begin",{hlts:this.id,doc:a.id},this.userPriority)};b.Highlights.prototype.hasNext=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'hasNext'. Expected 0 arguments. Function Signature: hasNext()");return b.messageHandler.sendWithPromise("Highlights.hasNext",
{hlts:this.id},this.userPriority)};b.Highlights.prototype.next=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'next'. Expected 0 arguments. Function Signature: next()");return b.messageHandler.sendWithPromise("Highlights.next",{hlts:this.id},this.userPriority)};b.Highlights.prototype.getCurrentPageNumber=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getCurrentPageNumber'. Expected 0 arguments. Function Signature: getCurrentPageNumber()");
return b.messageHandler.sendWithPromise("Highlights.getCurrentPageNumber",{hlts:this.id},this.userPriority)};b.HTML2PDF_Proxy.prototype.destroy=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];
else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("HTML2PDF_Proxy.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.HTML2PDF_Proxy.prototype.setPort=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPort'. Expected 1 argument. Function Signature: setPort(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPort' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setPort' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setPort(number).");return b.messageHandler.sendWithPromise("HTML2PDF_Proxy.setPort",{proxy:this.id,port:a},this.userPriority)};b.HTML2PDF_Proxy.prototype.setHost=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setHost'. Expected 1 argument. Function Signature: setHost(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setHost' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setHost' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setHost(string).");return b.messageHandler.sendWithPromise("HTML2PDF_Proxy.setHost",{proxy:this.id,host:a},this.userPriority)};b.HTML2PDF_Proxy.prototype.setUsername=function(a){if(1!=
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setUsername'. Expected 1 argument. Function Signature: setUsername(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setUsername' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setUsername' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setUsername(string).");
return b.messageHandler.sendWithPromise("HTML2PDF_Proxy.setUsername",{proxy:this.id,username:a},this.userPriority)};b.HTML2PDF_Proxy.prototype.setPassword=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPassword'. Expected 1 argument. Function Signature: setPassword(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPassword' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setPassword' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setPassword(string).");return b.messageHandler.sendWithPromise("HTML2PDF_Proxy.setPassword",{proxy:this.id,password:a},this.userPriority)};b.HTML2PDF_WebPageSettings.prototype.destroy=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");
for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("HTML2PDF_WebPageSettings.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.HTML2PDF_WebPageSettings.prototype.setPrintBackground=
function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPrintBackground'. Expected 1 argument. Function Signature: setPrintBackground(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPrintBackground' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setPrintBackground' is of type '"+typeof a+
"'. Expected type 'boolean'. Function Signature: setPrintBackground(boolean).");return b.messageHandler.sendWithPromise("HTML2PDF_WebPageSettings.setPrintBackground",{settings:this.id,background:a},this.userPriority)};b.HTML2PDF_WebPageSettings.prototype.setLoadImages=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setLoadImages'. Expected 1 argument. Function Signature: setLoadImages(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setLoadImages' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setLoadImages' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setLoadImages(boolean).");return b.messageHandler.sendWithPromise("HTML2PDF_WebPageSettings.setLoadImages",{settings:this.id,load:a},this.userPriority)};b.HTML2PDF_WebPageSettings.prototype.setAllowJavaScript=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setAllowJavaScript'. Expected 1 argument. Function Signature: setAllowJavaScript(boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setAllowJavaScript' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setAllowJavaScript' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setAllowJavaScript(boolean).");return b.messageHandler.sendWithPromise("HTML2PDF_WebPageSettings.setAllowJavaScript",{settings:this.id,enable:a},
this.userPriority)};b.HTML2PDF_WebPageSettings.prototype.setSmartShrinking=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setSmartShrinking'. Expected 1 argument. Function Signature: setSmartShrinking(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setSmartShrinking' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'setSmartShrinking' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setSmartShrinking(boolean).");return b.messageHandler.sendWithPromise("HTML2PDF_WebPageSettings.setSmartShrinking",{settings:this.id,enable:a},this.userPriority)};b.HTML2PDF_WebPageSettings.prototype.setMinimumFontSize=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setMinimumFontSize'. Expected 1 argument. Function Signature: setMinimumFontSize(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setMinimumFontSize' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setMinimumFontSize' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setMinimumFontSize(number).");return b.messageHandler.sendWithPromise("HTML2PDF_WebPageSettings.setMinimumFontSize",{settings:this.id,size:a},this.userPriority)};
b.HTML2PDF_WebPageSettings.prototype.setDefaultEncoding=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setDefaultEncoding'. Expected 1 argument. Function Signature: setDefaultEncoding(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setDefaultEncoding' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+
"' in function 'setDefaultEncoding' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setDefaultEncoding(string).");return b.messageHandler.sendWithPromise("HTML2PDF_WebPageSettings.setDefaultEncoding",{settings:this.id,encoding:a},this.userPriority)};b.HTML2PDF_WebPageSettings.prototype.setUserStyleSheet=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setUserStyleSheet'. Expected 1 argument. Function Signature: setUserStyleSheet(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setUserStyleSheet' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setUserStyleSheet' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setUserStyleSheet(string).");return b.messageHandler.sendWithPromise("HTML2PDF_WebPageSettings.setUserStyleSheet",{settings:this.id,url:a},this.userPriority)};
b.HTML2PDF_WebPageSettings.prototype.setAllowPlugins=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setAllowPlugins'. Expected 1 argument. Function Signature: setAllowPlugins(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setAllowPlugins' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setAllowPlugins' is of type '"+
typeof a+"'. Expected type 'boolean'. Function Signature: setAllowPlugins(boolean).");return b.messageHandler.sendWithPromise("HTML2PDF_WebPageSettings.setAllowPlugins",{settings:this.id,enable:a},this.userPriority)};b.HTML2PDF_WebPageSettings.prototype.setPrintMediaType=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPrintMediaType'. Expected 1 argument. Function Signature: setPrintMediaType(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPrintMediaType' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setPrintMediaType' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setPrintMediaType(boolean).");return b.messageHandler.sendWithPromise("HTML2PDF_WebPageSettings.setPrintMediaType",{settings:this.id,print:a},this.userPriority)};b.HTML2PDF_WebPageSettings.prototype.setIncludeInOutline=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setIncludeInOutline'. Expected 1 argument. Function Signature: setIncludeInOutline(boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setIncludeInOutline' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setIncludeInOutline' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setIncludeInOutline(boolean).");return b.messageHandler.sendWithPromise("HTML2PDF_WebPageSettings.setIncludeInOutline",{settings:this.id,include:a},
this.userPriority)};b.HTML2PDF_WebPageSettings.prototype.setUsername=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setUsername'. Expected 1 argument. Function Signature: setUsername(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setUsername' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setUsername' is of type '"+
typeof a+"'. Expected type 'string'. Function Signature: setUsername(string).");return b.messageHandler.sendWithPromise("HTML2PDF_WebPageSettings.setUsername",{settings:this.id,username:a},this.userPriority)};b.HTML2PDF_WebPageSettings.prototype.setPassword=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPassword'. Expected 1 argument. Function Signature: setPassword(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPassword' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setPassword' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setPassword(string).");return b.messageHandler.sendWithPromise("HTML2PDF_WebPageSettings.setPassword",{settings:this.id,password:a},this.userPriority)};b.HTML2PDF_WebPageSettings.prototype.setJavaScriptDelay=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setJavaScriptDelay'. Expected 1 argument. Function Signature: setJavaScriptDelay(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setJavaScriptDelay' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setJavaScriptDelay' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setJavaScriptDelay(number).");return b.messageHandler.sendWithPromise("HTML2PDF_WebPageSettings.setJavaScriptDelay",{settings:this.id,msec:a},this.userPriority)};
b.HTML2PDF_WebPageSettings.prototype.setZoom=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setZoom'. Expected 1 argument. Function Signature: setZoom(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setZoom' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setZoom' is of type '"+typeof a+
"'. Expected type 'number'. Function Signature: setZoom(number).");return b.messageHandler.sendWithPromise("HTML2PDF_WebPageSettings.setZoom",{settings:this.id,zoom:a},this.userPriority)};b.HTML2PDF_WebPageSettings.prototype.setBlockLocalFileAccess=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setBlockLocalFileAccess'. Expected 1 argument. Function Signature: setBlockLocalFileAccess(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setBlockLocalFileAccess' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setBlockLocalFileAccess' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setBlockLocalFileAccess(boolean).");return b.messageHandler.sendWithPromise("HTML2PDF_WebPageSettings.setBlockLocalFileAccess",{settings:this.id,block:a},this.userPriority)};b.HTML2PDF_WebPageSettings.prototype.setStopSlowScripts=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setStopSlowScripts'. Expected 1 argument. Function Signature: setStopSlowScripts(boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setStopSlowScripts' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setStopSlowScripts' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setStopSlowScripts(boolean).");return b.messageHandler.sendWithPromise("HTML2PDF_WebPageSettings.setStopSlowScripts",{settings:this.id,stop:a},this.userPriority)};
b.HTML2PDF_WebPageSettings.prototype.setDebugJavaScriptOutput=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setDebugJavaScriptOutput'. Expected 1 argument. Function Signature: setDebugJavaScriptOutput(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setDebugJavaScriptOutput' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'setDebugJavaScriptOutput' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setDebugJavaScriptOutput(boolean).");return b.messageHandler.sendWithPromise("HTML2PDF_WebPageSettings.setDebugJavaScriptOutput",{settings:this.id,forward:a},this.userPriority)};b.HTML2PDF_WebPageSettings.prototype.setExternalLinks=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setExternalLinks'. Expected 1 argument. Function Signature: setExternalLinks(boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setExternalLinks' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setExternalLinks' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setExternalLinks(boolean).");return b.messageHandler.sendWithPromise("HTML2PDF_WebPageSettings.setExternalLinks",{settings:this.id,convert:a},this.userPriority)};
b.HTML2PDF_WebPageSettings.prototype.setInternalLinks=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setInternalLinks'. Expected 1 argument. Function Signature: setInternalLinks(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setInternalLinks' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setInternalLinks' is of type '"+
typeof a+"'. Expected type 'boolean'. Function Signature: setInternalLinks(boolean).");return b.messageHandler.sendWithPromise("HTML2PDF_WebPageSettings.setInternalLinks",{settings:this.id,convert:a},this.userPriority)};b.HTML2PDF_WebPageSettings.prototype.setProduceForms=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setProduceForms'. Expected 1 argument. Function Signature: setProduceForms(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setProduceForms' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setProduceForms' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setProduceForms(boolean).");return b.messageHandler.sendWithPromise("HTML2PDF_WebPageSettings.setProduceForms",{settings:this.id,forms:a},this.userPriority)};b.HTML2PDF_WebPageSettings.prototype.setProxy=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setProxy'. Expected 1 argument. Function Signature: setProxy(HTML2PDF_Proxy)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setProxy' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.HTML2PDF_Proxy)){if("object"==typeof a)throw new TypeError("1st input argument in function 'setProxy' is of type '"+a.name+"'. Expected type 'HTML2PDF_Proxy'. Function Signature: setProxy(HTML2PDF_Proxy).");throw new TypeError("1st input argument '"+a+"' in function 'setProxy' is of type '"+typeof a+"'. Expected type 'HTML2PDF_Proxy'. Function Signature: setProxy(HTML2PDF_Proxy).");
}return b.messageHandler.sendWithPromise("HTML2PDF_WebPageSettings.setProxy",{settings:this.id,proxy:a.id},this.userPriority)};b.HTML2PDF_TOCSettings.prototype.destroy=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=
c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("HTML2PDF_TOCSettings.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.HTML2PDF_TOCSettings.prototype.setDottedLines=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setDottedLines'. Expected 1 argument. Function Signature: setDottedLines(boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setDottedLines' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setDottedLines' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setDottedLines(boolean).");return b.messageHandler.sendWithPromise("HTML2PDF_TOCSettings.setDottedLines",{settings:this.id,enable:a},this.userPriority)};
b.HTML2PDF_TOCSettings.prototype.setLinks=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setLinks'. Expected 1 argument. Function Signature: setLinks(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setLinks' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setLinks' is of type '"+typeof a+
"'. Expected type 'boolean'. Function Signature: setLinks(boolean).");return b.messageHandler.sendWithPromise("HTML2PDF_TOCSettings.setLinks",{settings:this.id,enable:a},this.userPriority)};b.HTML2PDF_TOCSettings.prototype.setCaptionText=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setCaptionText'. Expected 1 argument. Function Signature: setCaptionText(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setCaptionText' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setCaptionText' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setCaptionText(string).");return b.messageHandler.sendWithPromise("HTML2PDF_TOCSettings.setCaptionText",{settings:this.id,caption:a},this.userPriority)};b.HTML2PDF_TOCSettings.prototype.setLevelIndentation=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setLevelIndentation'. Expected 1 argument. Function Signature: setLevelIndentation(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setLevelIndentation' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setLevelIndentation' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setLevelIndentation(number).");return b.messageHandler.sendWithPromise("HTML2PDF_TOCSettings.setLevelIndentation",{settings:this.id,indentation:a},
this.userPriority)};b.HTML2PDF_TOCSettings.prototype.setTextSizeShrink=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setTextSizeShrink'. Expected 1 argument. Function Signature: setTextSizeShrink(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setTextSizeShrink' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'setTextSizeShrink' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setTextSizeShrink(number).");return b.messageHandler.sendWithPromise("HTML2PDF_TOCSettings.setTextSizeShrink",{settings:this.id,shrink:a},this.userPriority)};b.HTML2PDF_TOCSettings.prototype.setXsl=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setXsl'. Expected 1 argument. Function Signature: setXsl(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setXsl' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setXsl' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setXsl(string).");return b.messageHandler.sendWithPromise("HTML2PDF_TOCSettings.setXsl",{settings:this.id,style_sheet:a},this.userPriority)};b.HTML2PDF.create=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 0 arguments. Function Signature: create()");return b.messageHandler.sendWithPromise("htmL2PDFCreate",
{},this.userPriority).then(function(a){if("0"==a)return null;a=new b.HTML2PDF(a);createdObjects.push({name:a.name,id:a.id});return a})};b.HTML2PDF.prototype.destroy=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=
c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("HTML2PDF.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.HTML2PDF.prototype.insertFromUrl=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'insertFromUrl'. Expected 1 argument. Function Signature: insertFromUrl(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'insertFromUrl' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'insertFromUrl' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: insertFromUrl(string).");return b.messageHandler.sendWithPromise("HTML2PDF.insertFromUrl",{html2pdf:this.id,url:a},this.userPriority)};b.HTML2PDF.prototype.insertFromUrl2=
function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'insertFromUrl2'. Expected 2 arguments. Function Signature: insertFromUrl2(string, HTML2PDF_WebPageSettings)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'insertFromUrl2' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'insertFromUrl2' is of type '"+
typeof a+"'. Expected type 'string'. Function Signature: insertFromUrl2(string, HTML2PDF_WebPageSettings).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'insertFromUrl2' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.HTML2PDF_WebPageSettings)){if("object"==typeof c)throw new TypeError("2nd input argument in function 'insertFromUrl2' is of type '"+c.name+"'. Expected type 'HTML2PDF_WebPageSettings'. Function Signature: insertFromUrl2(string, HTML2PDF_WebPageSettings).");
throw new TypeError("2nd input argument '"+c+"' in function 'insertFromUrl2' is of type '"+typeof c+"'. Expected type 'HTML2PDF_WebPageSettings'. Function Signature: insertFromUrl2(string, HTML2PDF_WebPageSettings).");}return b.messageHandler.sendWithPromise("HTML2PDF.insertFromUrl2",{html2pdf:this.id,url:a,settings:c.id},this.userPriority)};b.HTML2PDF.prototype.insertFromHtmlString=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'insertFromHtmlString'. Expected 1 argument. Function Signature: insertFromHtmlString(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'insertFromHtmlString' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'insertFromHtmlString' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: insertFromHtmlString(string).");return b.messageHandler.sendWithPromise("HTML2PDF.insertFromHtmlString",{html2pdf:this.id,html:a},this.userPriority)};
b.HTML2PDF.prototype.insertFromHtmlString2=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'insertFromHtmlString2'. Expected 2 arguments. Function Signature: insertFromHtmlString2(string, HTML2PDF_WebPageSettings)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'insertFromHtmlString2' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'insertFromHtmlString2' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: insertFromHtmlString2(string, HTML2PDF_WebPageSettings).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'insertFromHtmlString2' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.HTML2PDF_WebPageSettings)){if("object"==typeof c)throw new TypeError("2nd input argument in function 'insertFromHtmlString2' is of type '"+
c.name+"'. Expected type 'HTML2PDF_WebPageSettings'. Function Signature: insertFromHtmlString2(string, HTML2PDF_WebPageSettings).");throw new TypeError("2nd input argument '"+c+"' in function 'insertFromHtmlString2' is of type '"+typeof c+"'. Expected type 'HTML2PDF_WebPageSettings'. Function Signature: insertFromHtmlString2(string, HTML2PDF_WebPageSettings).");}return b.messageHandler.sendWithPromise("HTML2PDF.insertFromHtmlString2",{html2pdf:this.id,html:a,settings:c.id},this.userPriority)};b.HTML2PDF.prototype.insertTOC=
function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'insertTOC'. Expected 0 arguments. Function Signature: insertTOC()");return b.messageHandler.sendWithPromise("HTML2PDF.insertTOC",{html2pdf:this.id},this.userPriority)};b.HTML2PDF.prototype.insertTOC2=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'insertTOC2'. Expected 1 argument. Function Signature: insertTOC2(HTML2PDF_TOCSettings)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'insertTOC2' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.HTML2PDF_TOCSettings)){if("object"==typeof a)throw new TypeError("1st input argument in function 'insertTOC2' is of type '"+a.name+"'. Expected type 'HTML2PDF_TOCSettings'. Function Signature: insertTOC2(HTML2PDF_TOCSettings).");throw new TypeError("1st input argument '"+a+"' in function 'insertTOC2' is of type '"+
typeof a+"'. Expected type 'HTML2PDF_TOCSettings'. Function Signature: insertTOC2(HTML2PDF_TOCSettings).");}return b.messageHandler.sendWithPromise("HTML2PDF.insertTOC2",{html2pdf:this.id,settings:a.id},this.userPriority)};b.HTML2PDF.prototype.convert=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'convert'. Expected 1 argument. Function Signature: convert(PDFDoc)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'convert' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'convert' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: convert(PDFDoc).");throw new TypeError("1st input argument '"+a+"' in function 'convert' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: convert(PDFDoc).");}return b.messageHandler.sendWithPromise("HTML2PDF.convert",{html2pdf:this.id,doc:a.id},this.userPriority)};
b.HTML2PDF.prototype.getHttpErrorCode=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getHttpErrorCode'. Expected 0 arguments. Function Signature: getHttpErrorCode()");return b.messageHandler.sendWithPromise("HTML2PDF.getHttpErrorCode",{html2pdf:this.id},this.userPriority)};b.HTML2PDF.prototype.getLog=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getLog'. Expected 0 arguments. Function Signature: getLog()");
return b.messageHandler.sendWithPromise("HTML2PDF.getLog",{html2pdf:this.id},this.userPriority)};b.HTML2PDF.prototype.setPaperSize2=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPaperSize2'. Expected 2 arguments. Function Signature: setPaperSize2(string, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPaperSize2' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setPaperSize2' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setPaperSize2(string, string).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setPaperSize2' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setPaperSize2' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: setPaperSize2(string, string).");
return b.messageHandler.sendWithPromise("HTML2PDF.setPaperSize2",{html2pdf:this.id,width:a,height:c},this.userPriority)};b.HTML2PDF.prototype.setLandscape=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setLandscape'. Expected 1 argument. Function Signature: setLandscape(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setLandscape' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setLandscape' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setLandscape(boolean).");return b.messageHandler.sendWithPromise("HTML2PDF.setLandscape",{html2pdf:this.id,enable:a},this.userPriority)};b.HTML2PDF.prototype.setDPI=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setDPI'. Expected 1 argument. Function Signature: setDPI(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setDPI' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setDPI' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setDPI(number).");return b.messageHandler.sendWithPromise("HTML2PDF.setDPI",{html2pdf:this.id,dpi:a},this.userPriority)};b.HTML2PDF.prototype.setOutline=function(a,c){"undefined"===
typeof c&&(c=4);if(1>arguments.length||2<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setOutline'. Expected 1 to 2 arguments. Function Signature: setOutline(boolean, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setOutline' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setOutline' is of type '"+
typeof a+"'. Expected type 'boolean'. Function Signature: setOutline(boolean, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setOutline' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setOutline' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: setOutline(boolean, number).");return b.messageHandler.sendWithPromise("HTML2PDF.setOutline",
{html2pdf:this.id,enable:a,depth:c},this.userPriority)};b.HTML2PDF.prototype.dumpOutline=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'dumpOutline'. Expected 1 argument. Function Signature: dumpOutline(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'dumpOutline' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'dumpOutline' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: dumpOutline(string).");return b.messageHandler.sendWithPromise("HTML2PDF.dumpOutline",{html2pdf:this.id,xml_file:a},this.userPriority)};b.HTML2PDF.prototype.setPDFCompression=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPDFCompression'. Expected 1 argument. Function Signature: setPDFCompression(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPDFCompression' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setPDFCompression' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setPDFCompression(boolean).");return b.messageHandler.sendWithPromise("HTML2PDF.setPDFCompression",{html2pdf:this.id,enable:a},this.userPriority)};b.HTML2PDF.prototype.setMargins=function(a,c,d,e){if(4!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setMargins'. Expected 4 arguments. Function Signature: setMargins(string, string, string, string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setMargins' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setMargins' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setMargins(string, string, string, string).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setMargins' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setMargins' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: setMargins(string, string, string, string).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'setMargins' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'setMargins' is of type '"+typeof d+
"'. Expected type 'string'. Function Signature: setMargins(string, string, string, string).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'setMargins' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof e)throw new TypeError("4th input argument '"+e+"' in function 'setMargins' is of type '"+typeof e+"'. Expected type 'string'. Function Signature: setMargins(string, string, string, string).");return b.messageHandler.sendWithPromise("HTML2PDF.setMargins",
{html2pdf:this.id,top:a,bottom:c,left:d,right:e},this.userPriority)};b.HTML2PDF.prototype.setImageDPI=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setImageDPI'. Expected 1 argument. Function Signature: setImageDPI(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setImageDPI' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'setImageDPI' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setImageDPI(number).");return b.messageHandler.sendWithPromise("HTML2PDF.setImageDPI",{html2pdf:this.id,dpi:a},this.userPriority)};b.HTML2PDF.prototype.setImageQuality=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setImageQuality'. Expected 1 argument. Function Signature: setImageQuality(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setImageQuality' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setImageQuality' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setImageQuality(number).");return b.messageHandler.sendWithPromise("HTML2PDF.setImageQuality",{html2pdf:this.id,quality:a},this.userPriority)};b.HTML2PDF.prototype.setCookieJar=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setCookieJar'. Expected 1 argument. Function Signature: setCookieJar(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setCookieJar' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setCookieJar' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setCookieJar(string).");return b.messageHandler.sendWithPromise("HTML2PDF.setCookieJar",{html2pdf:this.id,path:a},this.userPriority)};b.HTML2PDF.prototype.setQuiet=
function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setQuiet'. Expected 1 argument. Function Signature: setQuiet(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setQuiet' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setQuiet' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setQuiet(boolean).");
return b.messageHandler.sendWithPromise("HTML2PDF.setQuiet",{html2pdf:this.id,quiet:a},this.userPriority)};b.HTML2PDF.setModulePath=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setModulePath'. Expected 1 argument. Function Signature: setModulePath(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setModulePath' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=
typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setModulePath' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setModulePath(string).");return b.messageHandler.sendWithPromise("htmL2PDFSetModulePath",{path:a},this.userPriority)};b.Image.createFromMemory=function(a,c,d,e,f,g,k){"undefined"===typeof k&&(k=new b.Obj("0"));c instanceof Array&&(c=new Float64Array(c));if(6>arguments.length||7<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromMemory'. Expected 6 to 7 arguments. Function Signature: createFromMemory(SDFDoc, ArrayBuffer, number, number, number, ColorSpace, Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromMemory' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromMemory' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: createFromMemory(SDFDoc, ArrayBuffer, number, number, number, ColorSpace, Obj).");throw new TypeError("1st input argument '"+
a+"' in function 'createFromMemory' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: createFromMemory(SDFDoc, ArrayBuffer, number, number, number, ColorSpace, Obj).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createFromMemory' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!h.isArrayBuffer(c.buffer)){if("object"==typeof c)throw new TypeError("2nd input argument in function 'createFromMemory' is of type '"+
c.name+"'. Expected type 'ArrayBuffer'. Function Signature: createFromMemory(SDFDoc, ArrayBuffer, number, number, number, ColorSpace, Obj).");throw new TypeError("2nd input argument '"+c+"' in function 'createFromMemory' is of type '"+typeof c+"'. Expected type 'ArrayBuffer'. Function Signature: createFromMemory(SDFDoc, ArrayBuffer, number, number, number, ColorSpace, Obj).");}if(d instanceof Promise)throw new TypeError("4th input argument in function 'createFromMemory' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof d)throw new TypeError("4th input argument '"+d+"' in function 'createFromMemory' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: createFromMemory(SDFDoc, ArrayBuffer, number, number, number, ColorSpace, Obj).");if(e instanceof Promise)throw new TypeError("5th input argument in function 'createFromMemory' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof e)throw new TypeError("5th input argument '"+e+"' in function 'createFromMemory' is of type '"+
typeof e+"'. Expected type 'number'. Function Signature: createFromMemory(SDFDoc, ArrayBuffer, number, number, number, ColorSpace, Obj).");if(f instanceof Promise)throw new TypeError("6th input argument in function 'createFromMemory' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof f)throw new TypeError("6th input argument '"+f+"' in function 'createFromMemory' is of type '"+typeof f+"'. Expected type 'number'. Function Signature: createFromMemory(SDFDoc, ArrayBuffer, number, number, number, ColorSpace, Obj).");
if(g instanceof Promise)throw new TypeError("7th input argument in function 'createFromMemory' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(g instanceof b.ColorSpace)){if("object"==typeof g)throw new TypeError("7th input argument in function 'createFromMemory' is of type '"+g.name+"'. Expected type 'ColorSpace'. Function Signature: createFromMemory(SDFDoc, ArrayBuffer, number, number, number, ColorSpace, Obj).");throw new TypeError("7th input argument '"+
g+"' in function 'createFromMemory' is of type '"+typeof g+"'. Expected type 'ColorSpace'. Function Signature: createFromMemory(SDFDoc, ArrayBuffer, number, number, number, ColorSpace, Obj).");}if(k instanceof Promise)throw new TypeError("8th input argument in function 'createFromMemory' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(k instanceof b.Obj)){if("object"==typeof k)throw new TypeError("8th input argument in function 'createFromMemory' is of type '"+
k.name+"'. Expected type 'Obj'. Function Signature: createFromMemory(SDFDoc, ArrayBuffer, number, number, number, ColorSpace, Obj).");throw new TypeError("8th input argument '"+k+"' in function 'createFromMemory' is of type '"+typeof k+"'. Expected type 'Obj'. Function Signature: createFromMemory(SDFDoc, ArrayBuffer, number, number, number, ColorSpace, Obj).");}return b.messageHandler.sendWithPromise("imageCreateFromMemory",{doc:a.id,buf:c.buffer,width:d,height:e,bpc:f,color_space:g.id,encoder_hints:k.id},
this.userPriority).then(function(a){return"0"==a?null:new b.Image(a)})};b.Image.createFromMemory2=function(a,c,d){"undefined"===typeof d&&(d=new b.Obj("0"));c instanceof Array&&(c=new Float64Array(c));if(2>arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromMemory2'. Expected 2 to 3 arguments. Function Signature: createFromMemory2(SDFDoc, ArrayBuffer, Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromMemory2' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromMemory2' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: createFromMemory2(SDFDoc, ArrayBuffer, Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromMemory2' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: createFromMemory2(SDFDoc, ArrayBuffer, Obj).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createFromMemory2' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!h.isArrayBuffer(c.buffer)){if("object"==typeof c)throw new TypeError("2nd input argument in function 'createFromMemory2' is of type '"+c.name+"'. Expected type 'ArrayBuffer'. Function Signature: createFromMemory2(SDFDoc, ArrayBuffer, Obj).");throw new TypeError("2nd input argument '"+c+"' in function 'createFromMemory2' is of type '"+typeof c+"'. Expected type 'ArrayBuffer'. Function Signature: createFromMemory2(SDFDoc, ArrayBuffer, Obj).");}if(d instanceof Promise)throw new TypeError("4th input argument in function 'createFromMemory2' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(d instanceof b.Obj)){if("object"==typeof d)throw new TypeError("4th input argument in function 'createFromMemory2' is of type '"+d.name+"'. Expected type 'Obj'. Function Signature: createFromMemory2(SDFDoc, ArrayBuffer, Obj).");throw new TypeError("4th input argument '"+d+"' in function 'createFromMemory2' is of type '"+typeof d+"'. Expected type 'Obj'. Function Signature: createFromMemory2(SDFDoc, ArrayBuffer, Obj).");}return b.messageHandler.sendWithPromise("imageCreateFromMemory2",{doc:a.id,
buf:c.buffer,encoder_hints:d.id},this.userPriority).then(function(a){return"0"==a?null:new b.Image(a)})};b.Image.createFromStream=function(a,c,d,e,f,g,k){"undefined"===typeof k&&(k=new b.Obj("0"));if(6>arguments.length||7<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromStream'. Expected 6 to 7 arguments. Function Signature: createFromStream(SDFDoc, FilterReader, number, number, number, ColorSpace, Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromStream' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromStream' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: createFromStream(SDFDoc, FilterReader, number, number, number, ColorSpace, Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromStream' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: createFromStream(SDFDoc, FilterReader, number, number, number, ColorSpace, Obj).");
}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createFromStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.FilterReader)){if("object"==typeof c)throw new TypeError("2nd input argument in function 'createFromStream' is of type '"+c.name+"'. Expected type 'FilterReader'. Function Signature: createFromStream(SDFDoc, FilterReader, number, number, number, ColorSpace, Obj).");throw new TypeError("2nd input argument '"+
c+"' in function 'createFromStream' is of type '"+typeof c+"'. Expected type 'FilterReader'. Function Signature: createFromStream(SDFDoc, FilterReader, number, number, number, ColorSpace, Obj).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createFromStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'createFromStream' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: createFromStream(SDFDoc, FilterReader, number, number, number, ColorSpace, Obj).");
if(e instanceof Promise)throw new TypeError("4th input argument in function 'createFromStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof e)throw new TypeError("4th input argument '"+e+"' in function 'createFromStream' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: createFromStream(SDFDoc, FilterReader, number, number, number, ColorSpace, Obj).");if(f instanceof Promise)throw new TypeError("5th input argument in function 'createFromStream' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof f)throw new TypeError("5th input argument '"+f+"' in function 'createFromStream' is of type '"+typeof f+"'. Expected type 'number'. Function Signature: createFromStream(SDFDoc, FilterReader, number, number, number, ColorSpace, Obj).");if(g instanceof Promise)throw new TypeError("6th input argument in function 'createFromStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(g instanceof b.ColorSpace)){if("object"==typeof g)throw new TypeError("6th input argument in function 'createFromStream' is of type '"+
g.name+"'. Expected type 'ColorSpace'. Function Signature: createFromStream(SDFDoc, FilterReader, number, number, number, ColorSpace, Obj).");throw new TypeError("6th input argument '"+g+"' in function 'createFromStream' is of type '"+typeof g+"'. Expected type 'ColorSpace'. Function Signature: createFromStream(SDFDoc, FilterReader, number, number, number, ColorSpace, Obj).");}if(k instanceof Promise)throw new TypeError("7th input argument in function 'createFromStream' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(k instanceof b.Obj)){if("object"==typeof k)throw new TypeError("7th input argument in function 'createFromStream' is of type '"+k.name+"'. Expected type 'Obj'. Function Signature: createFromStream(SDFDoc, FilterReader, number, number, number, ColorSpace, Obj).");throw new TypeError("7th input argument '"+k+"' in function 'createFromStream' is of type '"+typeof k+"'. Expected type 'Obj'. Function Signature: createFromStream(SDFDoc, FilterReader, number, number, number, ColorSpace, Obj).");}return b.messageHandler.sendWithPromise("imageCreateFromStream",
{doc:a.id,image_data:c.id,width:d,height:e,bpc:f,color_space:g.id,encoder_hints:k.id},this.userPriority).then(function(a){return"0"==a?null:new b.Image(a)})};b.Image.createFromStream2=function(a,c,d){"undefined"===typeof d&&(d=new b.Obj("0"));if(2>arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromStream2'. Expected 2 to 3 arguments. Function Signature: createFromStream2(SDFDoc, Filter, Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromStream2' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromStream2' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: createFromStream2(SDFDoc, Filter, Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromStream2' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: createFromStream2(SDFDoc, Filter, Obj).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createFromStream2' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.Filter)){if("object"==typeof c)throw new TypeError("2nd input argument in function 'createFromStream2' is of type '"+c.name+"'. Expected type 'Filter'. Function Signature: createFromStream2(SDFDoc, Filter, Obj).");throw new TypeError("2nd input argument '"+c+"' in function 'createFromStream2' is of type '"+typeof c+"'. Expected type 'Filter'. Function Signature: createFromStream2(SDFDoc, Filter, Obj).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createFromStream2' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(d instanceof b.Obj)){if("object"==typeof d)throw new TypeError("3rd input argument in function 'createFromStream2' is of type '"+d.name+"'. Expected type 'Obj'. Function Signature: createFromStream2(SDFDoc, Filter, Obj).");throw new TypeError("3rd input argument '"+d+"' in function 'createFromStream2' is of type '"+typeof d+"'. Expected type 'Obj'. Function Signature: createFromStream2(SDFDoc, Filter, Obj).");}var e=-1;if(0!=c.id){for(var f=createdObjects.length-1;0<=f;f--)if(createdObjects[f].id==
c.id){e=f;break}if(-1!=e)for(createdObjects.splice(e,1),f=deallocStackCounter.length-1;0<=f;f--)if(deallocStackCounter[f]>e)--deallocStackCounter[f];else break;else console.log("[WARNING] Object to remove ownership from was not found in memory deallocation list. Decallocating may cause errors.")}return b.messageHandler.sendWithPromise("imageCreateFromStream2",{doc:a.id,no_own_image_data:c.id,encoder_hints:d.id},this.userPriority).then(function(a){return"0"==a?null:new b.Image(a)})};b.Image.createImageMask=
function(a,c,d,e,f){"undefined"===typeof f&&(f=new b.Obj("0"));c instanceof Array&&(c=new Float64Array(c));if(4>arguments.length||5<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createImageMask'. Expected 4 to 5 arguments. Function Signature: createImageMask(SDFDoc, ArrayBuffer, number, number, Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createImageMask' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createImageMask' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: createImageMask(SDFDoc, ArrayBuffer, number, number, Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createImageMask' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: createImageMask(SDFDoc, ArrayBuffer, number, number, Obj).");
}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createImageMask' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!h.isArrayBuffer(c.buffer)){if("object"==typeof c)throw new TypeError("2nd input argument in function 'createImageMask' is of type '"+c.name+"'. Expected type 'ArrayBuffer'. Function Signature: createImageMask(SDFDoc, ArrayBuffer, number, number, Obj).");throw new TypeError("2nd input argument '"+c+"' in function 'createImageMask' is of type '"+
typeof c+"'. Expected type 'ArrayBuffer'. Function Signature: createImageMask(SDFDoc, ArrayBuffer, number, number, Obj).");}if(d instanceof Promise)throw new TypeError("4th input argument in function 'createImageMask' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof d)throw new TypeError("4th input argument '"+d+"' in function 'createImageMask' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: createImageMask(SDFDoc, ArrayBuffer, number, number, Obj).");
if(e instanceof Promise)throw new TypeError("5th input argument in function 'createImageMask' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof e)throw new TypeError("5th input argument '"+e+"' in function 'createImageMask' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: createImageMask(SDFDoc, ArrayBuffer, number, number, Obj).");if(f instanceof Promise)throw new TypeError("6th input argument in function 'createImageMask' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(f instanceof b.Obj)){if("object"==typeof f)throw new TypeError("6th input argument in function 'createImageMask' is of type '"+f.name+"'. Expected type 'Obj'. Function Signature: createImageMask(SDFDoc, ArrayBuffer, number, number, Obj).");throw new TypeError("6th input argument '"+f+"' in function 'createImageMask' is of type '"+typeof f+"'. Expected type 'Obj'. Function Signature: createImageMask(SDFDoc, ArrayBuffer, number, number, Obj).");}return b.messageHandler.sendWithPromise("imageCreateImageMask",
{doc:a.id,buf:c.buffer,width:d,height:e,encoder_hints:f.id},this.userPriority).then(function(a){return"0"==a?null:new b.Image(a)})};b.Image.createImageMaskFromStream=function(a,c,d,e,f){"undefined"===typeof f&&(f=new b.Obj("0"));if(4>arguments.length||5<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createImageMaskFromStream'. Expected 4 to 5 arguments. Function Signature: createImageMaskFromStream(SDFDoc, FilterReader, number, number, Obj)");if(a instanceof
Promise)throw new TypeError("1st input argument in function 'createImageMaskFromStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createImageMaskFromStream' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: createImageMaskFromStream(SDFDoc, FilterReader, number, number, Obj).");throw new TypeError("1st input argument '"+
a+"' in function 'createImageMaskFromStream' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: createImageMaskFromStream(SDFDoc, FilterReader, number, number, Obj).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createImageMaskFromStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.FilterReader)){if("object"==typeof c)throw new TypeError("2nd input argument in function 'createImageMaskFromStream' is of type '"+
c.name+"'. Expected type 'FilterReader'. Function Signature: createImageMaskFromStream(SDFDoc, FilterReader, number, number, Obj).");throw new TypeError("2nd input argument '"+c+"' in function 'createImageMaskFromStream' is of type '"+typeof c+"'. Expected type 'FilterReader'. Function Signature: createImageMaskFromStream(SDFDoc, FilterReader, number, number, Obj).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createImageMaskFromStream' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'createImageMaskFromStream' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: createImageMaskFromStream(SDFDoc, FilterReader, number, number, Obj).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'createImageMaskFromStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof e)throw new TypeError("4th input argument '"+
e+"' in function 'createImageMaskFromStream' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: createImageMaskFromStream(SDFDoc, FilterReader, number, number, Obj).");if(f instanceof Promise)throw new TypeError("5th input argument in function 'createImageMaskFromStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(f instanceof b.Obj)){if("object"==typeof f)throw new TypeError("5th input argument in function 'createImageMaskFromStream' is of type '"+
f.name+"'. Expected type 'Obj'. Function Signature: createImageMaskFromStream(SDFDoc, FilterReader, number, number, Obj).");throw new TypeError("5th input argument '"+f+"' in function 'createImageMaskFromStream' is of type '"+typeof f+"'. Expected type 'Obj'. Function Signature: createImageMaskFromStream(SDFDoc, FilterReader, number, number, Obj).");}return b.messageHandler.sendWithPromise("imageCreateImageMaskFromStream",{doc:a.id,image_data:c.id,width:d,height:e,encoder_hints:f.id},this.userPriority).then(function(a){return"0"==
a?null:new b.Image(a)})};b.Image.createSoftMask=function(a,c,d,e,f,g){"undefined"===typeof g&&(g=new b.Obj("0"));c instanceof Array&&(c=new Float64Array(c));if(5>arguments.length||6<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createSoftMask'. Expected 5 to 6 arguments. Function Signature: createSoftMask(SDFDoc, ArrayBuffer, number, number, number, Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createSoftMask' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createSoftMask' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: createSoftMask(SDFDoc, ArrayBuffer, number, number, number, Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createSoftMask' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: createSoftMask(SDFDoc, ArrayBuffer, number, number, number, Obj).");
}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createSoftMask' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!h.isArrayBuffer(c.buffer)){if("object"==typeof c)throw new TypeError("2nd input argument in function 'createSoftMask' is of type '"+c.name+"'. Expected type 'ArrayBuffer'. Function Signature: createSoftMask(SDFDoc, ArrayBuffer, number, number, number, Obj).");throw new TypeError("2nd input argument '"+c+"' in function 'createSoftMask' is of type '"+
typeof c+"'. Expected type 'ArrayBuffer'. Function Signature: createSoftMask(SDFDoc, ArrayBuffer, number, number, number, Obj).");}if(d instanceof Promise)throw new TypeError("4th input argument in function 'createSoftMask' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof d)throw new TypeError("4th input argument '"+d+"' in function 'createSoftMask' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: createSoftMask(SDFDoc, ArrayBuffer, number, number, number, Obj).");
if(e instanceof Promise)throw new TypeError("5th input argument in function 'createSoftMask' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof e)throw new TypeError("5th input argument '"+e+"' in function 'createSoftMask' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: createSoftMask(SDFDoc, ArrayBuffer, number, number, number, Obj).");if(f instanceof Promise)throw new TypeError("6th input argument in function 'createSoftMask' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof f)throw new TypeError("6th input argument '"+f+"' in function 'createSoftMask' is of type '"+typeof f+"'. Expected type 'number'. Function Signature: createSoftMask(SDFDoc, ArrayBuffer, number, number, number, Obj).");if(g instanceof Promise)throw new TypeError("7th input argument in function 'createSoftMask' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(g instanceof b.Obj)){if("object"==typeof g)throw new TypeError("7th input argument in function 'createSoftMask' is of type '"+
g.name+"'. Expected type 'Obj'. Function Signature: createSoftMask(SDFDoc, ArrayBuffer, number, number, number, Obj).");throw new TypeError("7th input argument '"+g+"' in function 'createSoftMask' is of type '"+typeof g+"'. Expected type 'Obj'. Function Signature: createSoftMask(SDFDoc, ArrayBuffer, number, number, number, Obj).");}return b.messageHandler.sendWithPromise("imageCreateSoftMask",{doc:a.id,buf:c.buffer,width:d,height:e,bpc:f,encoder_hints:g.id},this.userPriority).then(function(a){return"0"==
a?null:new b.Image(a)})};b.Image.createSoftMaskFromStream=function(a,c,d,e,f,g){"undefined"===typeof g&&(g=new b.Obj("0"));if(5>arguments.length||6<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createSoftMaskFromStream'. Expected 5 to 6 arguments. Function Signature: createSoftMaskFromStream(SDFDoc, FilterReader, number, number, number, Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createSoftMaskFromStream' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createSoftMaskFromStream' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: createSoftMaskFromStream(SDFDoc, FilterReader, number, number, number, Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createSoftMaskFromStream' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: createSoftMaskFromStream(SDFDoc, FilterReader, number, number, number, Obj).");
}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createSoftMaskFromStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.FilterReader)){if("object"==typeof c)throw new TypeError("2nd input argument in function 'createSoftMaskFromStream' is of type '"+c.name+"'. Expected type 'FilterReader'. Function Signature: createSoftMaskFromStream(SDFDoc, FilterReader, number, number, number, Obj).");throw new TypeError("2nd input argument '"+
c+"' in function 'createSoftMaskFromStream' is of type '"+typeof c+"'. Expected type 'FilterReader'. Function Signature: createSoftMaskFromStream(SDFDoc, FilterReader, number, number, number, Obj).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createSoftMaskFromStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'createSoftMaskFromStream' is of type '"+
typeof d+"'. Expected type 'number'. Function Signature: createSoftMaskFromStream(SDFDoc, FilterReader, number, number, number, Obj).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'createSoftMaskFromStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof e)throw new TypeError("4th input argument '"+e+"' in function 'createSoftMaskFromStream' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: createSoftMaskFromStream(SDFDoc, FilterReader, number, number, number, Obj).");
if(f instanceof Promise)throw new TypeError("5th input argument in function 'createSoftMaskFromStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof f)throw new TypeError("5th input argument '"+f+"' in function 'createSoftMaskFromStream' is of type '"+typeof f+"'. Expected type 'number'. Function Signature: createSoftMaskFromStream(SDFDoc, FilterReader, number, number, number, Obj).");if(g instanceof Promise)throw new TypeError("6th input argument in function 'createSoftMaskFromStream' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(g instanceof b.Obj)){if("object"==typeof g)throw new TypeError("6th input argument in function 'createSoftMaskFromStream' is of type '"+g.name+"'. Expected type 'Obj'. Function Signature: createSoftMaskFromStream(SDFDoc, FilterReader, number, number, number, Obj).");throw new TypeError("6th input argument '"+g+"' in function 'createSoftMaskFromStream' is of type '"+typeof g+"'. Expected type 'Obj'. Function Signature: createSoftMaskFromStream(SDFDoc, FilterReader, number, number, number, Obj).");
}return b.messageHandler.sendWithPromise("imageCreateSoftMaskFromStream",{doc:a.id,image_data:c.id,width:d,height:e,bpc:f,encoder_hints:g.id},this.userPriority).then(function(a){return"0"==a?null:new b.Image(a)})};b.Image.createDirectFromMemory=function(a,c,d,e,f,g,k){c instanceof Array&&(c=new Float64Array(c));if(7!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createDirectFromMemory'. Expected 7 arguments. Function Signature: createDirectFromMemory(SDFDoc, ArrayBuffer, number, number, number, ColorSpace, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createDirectFromMemory' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createDirectFromMemory' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: createDirectFromMemory(SDFDoc, ArrayBuffer, number, number, number, ColorSpace, number).");
throw new TypeError("1st input argument '"+a+"' in function 'createDirectFromMemory' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: createDirectFromMemory(SDFDoc, ArrayBuffer, number, number, number, ColorSpace, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createDirectFromMemory' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!h.isArrayBuffer(c.buffer)){if("object"==typeof c)throw new TypeError("2nd input argument in function 'createDirectFromMemory' is of type '"+
c.name+"'. Expected type 'ArrayBuffer'. Function Signature: createDirectFromMemory(SDFDoc, ArrayBuffer, number, number, number, ColorSpace, number).");throw new TypeError("2nd input argument '"+c+"' in function 'createDirectFromMemory' is of type '"+typeof c+"'. Expected type 'ArrayBuffer'. Function Signature: createDirectFromMemory(SDFDoc, ArrayBuffer, number, number, number, ColorSpace, number).");}if(d instanceof Promise)throw new TypeError("4th input argument in function 'createDirectFromMemory' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof d)throw new TypeError("4th input argument '"+d+"' in function 'createDirectFromMemory' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: createDirectFromMemory(SDFDoc, ArrayBuffer, number, number, number, ColorSpace, number).");if(e instanceof Promise)throw new TypeError("5th input argument in function 'createDirectFromMemory' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof e)throw new TypeError("5th input argument '"+
e+"' in function 'createDirectFromMemory' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: createDirectFromMemory(SDFDoc, ArrayBuffer, number, number, number, ColorSpace, number).");if(f instanceof Promise)throw new TypeError("6th input argument in function 'createDirectFromMemory' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof f)throw new TypeError("6th input argument '"+f+"' in function 'createDirectFromMemory' is of type '"+
typeof f+"'. Expected type 'number'. Function Signature: createDirectFromMemory(SDFDoc, ArrayBuffer, number, number, number, ColorSpace, number).");if(g instanceof Promise)throw new TypeError("7th input argument in function 'createDirectFromMemory' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(g instanceof b.ColorSpace)){if("object"==typeof g)throw new TypeError("7th input argument in function 'createDirectFromMemory' is of type '"+g.name+"'. Expected type 'ColorSpace'. Function Signature: createDirectFromMemory(SDFDoc, ArrayBuffer, number, number, number, ColorSpace, number).");
throw new TypeError("7th input argument '"+g+"' in function 'createDirectFromMemory' is of type '"+typeof g+"'. Expected type 'ColorSpace'. Function Signature: createDirectFromMemory(SDFDoc, ArrayBuffer, number, number, number, ColorSpace, number).");}if(k instanceof Promise)throw new TypeError("8th input argument in function 'createDirectFromMemory' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof k)throw new TypeError("8th input argument '"+
k+"' in function 'createDirectFromMemory' is of type '"+typeof k+"'. Expected type 'number'. Function Signature: createDirectFromMemory(SDFDoc, ArrayBuffer, number, number, number, ColorSpace, number).");return b.messageHandler.sendWithPromise("imageCreateDirectFromMemory",{doc:a.id,buf:c.buffer,width:d,height:e,bpc:f,color_space:g.id,input_format:k},this.userPriority).then(function(a){return"0"==a?null:new b.Image(a)})};b.Image.createDirectFromStream=function(a,c,d,e,f,g,k){if(7!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'createDirectFromStream'. Expected 7 arguments. Function Signature: createDirectFromStream(SDFDoc, FilterReader, number, number, number, ColorSpace, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createDirectFromStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createDirectFromStream' is of type '"+
a.name+"'. Expected type 'SDFDoc'. Function Signature: createDirectFromStream(SDFDoc, FilterReader, number, number, number, ColorSpace, number).");throw new TypeError("1st input argument '"+a+"' in function 'createDirectFromStream' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: createDirectFromStream(SDFDoc, FilterReader, number, number, number, ColorSpace, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createDirectFromStream' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.FilterReader)){if("object"==typeof c)throw new TypeError("2nd input argument in function 'createDirectFromStream' is of type '"+c.name+"'. Expected type 'FilterReader'. Function Signature: createDirectFromStream(SDFDoc, FilterReader, number, number, number, ColorSpace, number).");throw new TypeError("2nd input argument '"+c+"' in function 'createDirectFromStream' is of type '"+typeof c+"'. Expected type 'FilterReader'. Function Signature: createDirectFromStream(SDFDoc, FilterReader, number, number, number, ColorSpace, number).");
}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createDirectFromStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'createDirectFromStream' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: createDirectFromStream(SDFDoc, FilterReader, number, number, number, ColorSpace, number).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'createDirectFromStream' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof e)throw new TypeError("4th input argument '"+e+"' in function 'createDirectFromStream' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: createDirectFromStream(SDFDoc, FilterReader, number, number, number, ColorSpace, number).");if(f instanceof Promise)throw new TypeError("5th input argument in function 'createDirectFromStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof f)throw new TypeError("5th input argument '"+
f+"' in function 'createDirectFromStream' is of type '"+typeof f+"'. Expected type 'number'. Function Signature: createDirectFromStream(SDFDoc, FilterReader, number, number, number, ColorSpace, number).");if(g instanceof Promise)throw new TypeError("6th input argument in function 'createDirectFromStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(g instanceof b.ColorSpace)){if("object"==typeof g)throw new TypeError("6th input argument in function 'createDirectFromStream' is of type '"+
g.name+"'. Expected type 'ColorSpace'. Function Signature: createDirectFromStream(SDFDoc, FilterReader, number, number, number, ColorSpace, number).");throw new TypeError("6th input argument '"+g+"' in function 'createDirectFromStream' is of type '"+typeof g+"'. Expected type 'ColorSpace'. Function Signature: createDirectFromStream(SDFDoc, FilterReader, number, number, number, ColorSpace, number).");}if(k instanceof Promise)throw new TypeError("7th input argument in function 'createDirectFromStream' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof k)throw new TypeError("7th input argument '"+k+"' in function 'createDirectFromStream' is of type '"+typeof k+"'. Expected type 'number'. Function Signature: createDirectFromStream(SDFDoc, FilterReader, number, number, number, ColorSpace, number).");return b.messageHandler.sendWithPromise("imageCreateDirectFromStream",{doc:a.id,image_data:c.id,width:d,height:e,bpc:f,color_space:g.id,input_format:k},this.userPriority).then(function(a){return"0"==a?null:new b.Image(a)})};b.Image.createFromObj=
function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected at most 1 arguments. Function Signature: createFromObj(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+
a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");}return b.messageHandler.sendWithPromise("imageCreateFromObj",{image_xobject:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.Image(a)})};b.Image.prototype.copy=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'copy'. Expected 0 arguments. Function Signature: copy()");
return b.messageHandler.sendWithPromise("Image.copy",{c:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Image(a)})};b.Image.prototype.getSDFObj=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSDFObj'. Expected 0 arguments. Function Signature: getSDFObj()");return b.messageHandler.sendWithPromise("Image.getSDFObj",{img:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Image.prototype.isValid=
function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isValid'. Expected 0 arguments. Function Signature: isValid()");return b.messageHandler.sendWithPromise("Image.isValid",{img:this.id},this.userPriority)};b.Image.prototype.getImageData=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getImageData'. Expected 0 arguments. Function Signature: getImageData()");return b.messageHandler.sendWithPromise("Image.getImageData",
{img:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Filter(a)})};b.Image.prototype.getImageDataSize=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getImageDataSize'. Expected 0 arguments. Function Signature: getImageDataSize()");return b.messageHandler.sendWithPromise("Image.getImageDataSize",{img:this.id},this.userPriority)};b.Image.prototype.getImageColorSpace=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getImageColorSpace'. Expected 0 arguments. Function Signature: getImageColorSpace()");return b.messageHandler.sendWithPromise("Image.getImageColorSpace",{img:this.id},this.userPriority).then(function(a){if("0"==a)return null;a=new b.ColorSpace(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Image.prototype.getImageWidth=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getImageWidth'. Expected 0 arguments. Function Signature: getImageWidth()");
return b.messageHandler.sendWithPromise("Image.getImageWidth",{img:this.id},this.userPriority)};b.Image.prototype.getImageHeight=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getImageHeight'. Expected 0 arguments. Function Signature: getImageHeight()");return b.messageHandler.sendWithPromise("Image.getImageHeight",{img:this.id},this.userPriority)};b.Image.prototype.getDecodeArray=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getDecodeArray'. Expected 0 arguments. Function Signature: getDecodeArray()");return b.messageHandler.sendWithPromise("Image.getDecodeArray",{img:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Image.prototype.getBitsPerComponent=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getBitsPerComponent'. Expected 0 arguments. Function Signature: getBitsPerComponent()");return b.messageHandler.sendWithPromise("Image.getBitsPerComponent",
{img:this.id},this.userPriority)};b.Image.prototype.getComponentNum=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getComponentNum'. Expected 0 arguments. Function Signature: getComponentNum()");return b.messageHandler.sendWithPromise("Image.getComponentNum",{img:this.id},this.userPriority)};b.Image.prototype.isImageMask=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isImageMask'. Expected 0 arguments. Function Signature: isImageMask()");
return b.messageHandler.sendWithPromise("Image.isImageMask",{img:this.id},this.userPriority)};b.Image.prototype.isImageInterpolate=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isImageInterpolate'. Expected 0 arguments. Function Signature: isImageInterpolate()");return b.messageHandler.sendWithPromise("Image.isImageInterpolate",{img:this.id},this.userPriority)};b.Image.prototype.getMask=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getMask'. Expected 0 arguments. Function Signature: getMask()");return b.messageHandler.sendWithPromise("Image.getMask",{img:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Image.prototype.setMask=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setMask'. Expected 1 argument. Function Signature: setMask(Image)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setMask' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Image)){if("object"==typeof a)throw new TypeError("1st input argument in function 'setMask' is of type '"+a.name+"'. Expected type 'Image'. Function Signature: setMask(Image).");throw new TypeError("1st input argument '"+a+"' in function 'setMask' is of type '"+typeof a+"'. Expected type 'Image'. Function Signature: setMask(Image).");}return b.messageHandler.sendWithPromise("Image.setMask",{img:this.id,image_mask:a.id},this.userPriority)};b.Image.prototype.setMaskWithObj=function(a){if(1!=
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setMaskWithObj'. Expected 1 argument. Function Signature: setMaskWithObj(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setMaskWithObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'setMaskWithObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: setMaskWithObj(Obj).");
throw new TypeError("1st input argument '"+a+"' in function 'setMaskWithObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: setMaskWithObj(Obj).");}return b.messageHandler.sendWithPromise("Image.setMaskWithObj",{img:this.id,mask:a.id},this.userPriority)};b.Image.prototype.getSoftMask=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSoftMask'. Expected 0 arguments. Function Signature: getSoftMask()");return b.messageHandler.sendWithPromise("Image.getSoftMask",
{img:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Image.prototype.setSoftMask=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setSoftMask'. Expected 1 argument. Function Signature: setSoftMask(Image)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setSoftMask' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Image)){if("object"==
typeof a)throw new TypeError("1st input argument in function 'setSoftMask' is of type '"+a.name+"'. Expected type 'Image'. Function Signature: setSoftMask(Image).");throw new TypeError("1st input argument '"+a+"' in function 'setSoftMask' is of type '"+typeof a+"'. Expected type 'Image'. Function Signature: setSoftMask(Image).");}return b.messageHandler.sendWithPromise("Image.setSoftMask",{img:this.id,soft_mask:a.id},this.userPriority)};b.Image.prototype.getImageRenderingIntent=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getImageRenderingIntent'. Expected 0 arguments. Function Signature: getImageRenderingIntent()");return b.messageHandler.sendWithPromise("Image.getImageRenderingIntent",{img:this.id},this.userPriority)};b.Image.prototype.exportFromStream=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'exportFromStream'. Expected 1 argument. Function Signature: exportFromStream(FilterWriter)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'exportFromStream' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.FilterWriter)){if("object"==typeof a)throw new TypeError("1st input argument in function 'exportFromStream' is of type '"+a.name+"'. Expected type 'FilterWriter'. Function Signature: exportFromStream(FilterWriter).");throw new TypeError("1st input argument '"+a+"' in function 'exportFromStream' is of type '"+typeof a+"'. Expected type 'FilterWriter'. Function Signature: exportFromStream(FilterWriter).");}return b.messageHandler.sendWithPromise("Image.exportFromStream",{img:this.id,
writer:a.id},this.userPriority)};b.Image.prototype.exportAsTiffFromStream=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'exportAsTiffFromStream'. Expected 1 argument. Function Signature: exportAsTiffFromStream(FilterWriter)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'exportAsTiffFromStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.FilterWriter)){if("object"==
typeof a)throw new TypeError("1st input argument in function 'exportAsTiffFromStream' is of type '"+a.name+"'. Expected type 'FilterWriter'. Function Signature: exportAsTiffFromStream(FilterWriter).");throw new TypeError("1st input argument '"+a+"' in function 'exportAsTiffFromStream' is of type '"+typeof a+"'. Expected type 'FilterWriter'. Function Signature: exportAsTiffFromStream(FilterWriter).");}return b.messageHandler.sendWithPromise("Image.exportAsTiffFromStream",{img:this.id,writer:a.id},
this.userPriority)};b.Image.prototype.exportAsPngFromStream=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'exportAsPngFromStream'. Expected 1 argument. Function Signature: exportAsPngFromStream(FilterWriter)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'exportAsPngFromStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.FilterWriter)){if("object"==
typeof a)throw new TypeError("1st input argument in function 'exportAsPngFromStream' is of type '"+a.name+"'. Expected type 'FilterWriter'. Function Signature: exportAsPngFromStream(FilterWriter).");throw new TypeError("1st input argument '"+a+"' in function 'exportAsPngFromStream' is of type '"+typeof a+"'. Expected type 'FilterWriter'. Function Signature: exportAsPngFromStream(FilterWriter).");}return b.messageHandler.sendWithPromise("Image.exportAsPngFromStream",{img:this.id,writer:a.id},this.userPriority)};
b.Optimizer.imageSettingsInit=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'imageSettingsInit'. Expected 0 arguments. Function Signature: imageSettingsInit()");return b.messageHandler.sendWithPromise("optimizerImageSettingsInit",{},this.userPriority)};b.Optimizer.monoImageSettingsInit=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'monoImageSettingsInit'. Expected 0 arguments. Function Signature: monoImageSettingsInit()");
return b.messageHandler.sendWithPromise("optimizerMonoImageSettingsInit",{},this.userPriority)};b.Optimizer.textSettingsInit=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'textSettingsInit'. Expected 0 arguments. Function Signature: textSettingsInit()");return b.messageHandler.sendWithPromise("optimizerTextSettingsInit",{},this.userPriority)};b.Optimizer.optimize=function(a,c,d,e,f,g){"undefined"===typeof c&&(c=new b.OptimizerSettings("0"));
if(5>arguments.length||6<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'optimize'. Expected 5 to 6 arguments. Function Signature: optimize(PDFDoc, OptimizerImageSettings, OptimizerImageSettings, OptimizerMonoImageSettings, OptimizerTextSettings, boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'optimize' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof
b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'optimize' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: optimize(PDFDoc, OptimizerImageSettings, OptimizerImageSettings, OptimizerMonoImageSettings, OptimizerTextSettings, boolean).");throw new TypeError("1st input argument '"+a+"' in function 'optimize' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: optimize(PDFDoc, OptimizerImageSettings, OptimizerImageSettings, OptimizerMonoImageSettings, OptimizerTextSettings, boolean).");
}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'optimize' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.OptimizerImageSettings)&&"OptimizerImageSettings"!=c.name){if("object"==typeof c)throw new TypeError("2nd input argument in function 'optimize' is of type '"+c.name+"'. Expected type 'OptimizerImageSettings'. Function Signature: optimize(PDFDoc, OptimizerImageSettings, OptimizerImageSettings, OptimizerMonoImageSettings, OptimizerTextSettings, boolean).");
throw new TypeError("2nd input argument '"+c+"' in function 'optimize' is of type '"+typeof c+"'. Expected type 'OptimizerImageSettings'. Function Signature: optimize(PDFDoc, OptimizerImageSettings, OptimizerImageSettings, OptimizerMonoImageSettings, OptimizerTextSettings, boolean).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'optimize' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(d instanceof b.OptimizerImageSettings)&&
"OptimizerImageSettings"!=d.name){if("object"==typeof d)throw new TypeError("3rd input argument in function 'optimize' is of type '"+d.name+"'. Expected type 'OptimizerImageSettings'. Function Signature: optimize(PDFDoc, OptimizerImageSettings, OptimizerImageSettings, OptimizerMonoImageSettings, OptimizerTextSettings, boolean).");throw new TypeError("3rd input argument '"+d+"' in function 'optimize' is of type '"+typeof d+"'. Expected type 'OptimizerImageSettings'. Function Signature: optimize(PDFDoc, OptimizerImageSettings, OptimizerImageSettings, OptimizerMonoImageSettings, OptimizerTextSettings, boolean).");
}if(e instanceof Promise)throw new TypeError("4th input argument in function 'optimize' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(e instanceof b.OptimizerMonoImageSettings)&&"OptimizerMonoImageSettings"!=e.name){if("object"==typeof e)throw new TypeError("4th input argument in function 'optimize' is of type '"+e.name+"'. Expected type 'OptimizerMonoImageSettings'. Function Signature: optimize(PDFDoc, OptimizerImageSettings, OptimizerImageSettings, OptimizerMonoImageSettings, OptimizerTextSettings, boolean).");
throw new TypeError("4th input argument '"+e+"' in function 'optimize' is of type '"+typeof e+"'. Expected type 'OptimizerMonoImageSettings'. Function Signature: optimize(PDFDoc, OptimizerImageSettings, OptimizerImageSettings, OptimizerMonoImageSettings, OptimizerTextSettings, boolean).");}if(f instanceof Promise)throw new TypeError("5th input argument in function 'optimize' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(f instanceof b.OptimizerTextSettings)&&
"OptimizerTextSettings"!=f.name){if("object"==typeof f)throw new TypeError("5th input argument in function 'optimize' is of type '"+f.name+"'. Expected type 'OptimizerTextSettings'. Function Signature: optimize(PDFDoc, OptimizerImageSettings, OptimizerImageSettings, OptimizerMonoImageSettings, OptimizerTextSettings, boolean).");throw new TypeError("5th input argument '"+f+"' in function 'optimize' is of type '"+typeof f+"'. Expected type 'OptimizerTextSettings'. Function Signature: optimize(PDFDoc, OptimizerImageSettings, OptimizerImageSettings, OptimizerMonoImageSettings, OptimizerTextSettings, boolean).");
}if(g instanceof Promise)throw new TypeError("6th input argument in function 'optimize' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof g)throw new TypeError("6th input argument '"+g+"' in function 'optimize' is of type '"+typeof g+"'. Expected type 'boolean'. Function Signature: optimize(PDFDoc, OptimizerImageSettings, OptimizerImageSettings, OptimizerMonoImageSettings, OptimizerTextSettings, boolean).");if("undefined"!=typeof c.yieldFunction)throw Error("Function '"+
c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'optimize'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");if("undefined"!=typeof d.yieldFunction)throw Error("Function '"+d.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 3rd input argument in function 'optimize'. Perhaps a yield statement is required for '"+d.yieldFunction+"'?");
if("undefined"!=typeof e.yieldFunction)throw Error("Function '"+e.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 4th input argument in function 'optimize'. Perhaps a yield statement is required for '"+e.yieldFunction+"'?");if("undefined"!=typeof f.yieldFunction)throw Error("Function '"+f.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 5th input argument in function 'optimize'. Perhaps a yield statement is required for '"+
f.yieldFunction+"'?");return b.messageHandler.sendWithPromise("optimizerOptimize",{doc:a.id,color_image_settings:c,grayscale_image_settings:d,mono_image_settings:e,text_settings:f,remove_custom:g},this.userPriority)};b.PageLabel.create=function(a,c,d,e){"undefined"===typeof d&&(d="");"undefined"===typeof e&&(e=1);if(2>arguments.length||4<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 2 to 4 arguments. Function Signature: create(SDFDoc, number, string, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: create(SDFDoc, number, string, number).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+
typeof a+"'. Expected type 'SDFDoc'. Function Signature: create(SDFDoc, number, string, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: create(SDFDoc, number, string, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'create' is of type '"+typeof d+"'. Expected type 'string'. Function Signature: create(SDFDoc, number, string, number).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof e)throw new TypeError("4th input argument '"+e+"' in function 'create' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: create(SDFDoc, number, string, number).");
return b.messageHandler.sendWithPromise("pageLabelCreate",{doc:a.id,style:c,prefix:d,start_at:e},this.userPriority).then(function(a){return"0"==a?null:new b.PageLabel(a)})};b.PageLabel.createFromObj=function(a,c,d){"undefined"===typeof a&&(a=new b.Obj("0"));"undefined"===typeof c&&(c=-1);"undefined"===typeof d&&(d=-1);if(3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected at most 3 arguments. Function Signature: createFromObj(Obj, number, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj, number, number).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj, number, number).");
}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createFromObj' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: createFromObj(Obj, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'createFromObj' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: createFromObj(Obj, number, number).");return b.messageHandler.sendWithPromise("pageLabelCreateFromObj",{l:a.id,first_page:c,last_page:d},this.userPriority).then(function(a){return"0"==a?null:new b.PageLabel(a)})};b.PageLabel.prototype.assign=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'assign'. Expected 1 argument. Function Signature: assign(PageLabel)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'assign' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PageLabel)&&"PageLabel"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'assign' is of type '"+a.name+"'. Expected type 'PageLabel'. Function Signature: assign(PageLabel).");throw new TypeError("1st input argument '"+a+"' in function 'assign' is of type '"+typeof a+"'. Expected type 'PageLabel'. Function Signature: assign(PageLabel).");
}if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'assign'. Perhaps a yield statement is required for "+this.yieldFunction+"?");if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'assign'. Perhaps a yield statement is required for '"+
a.yieldFunction+"'?");var c=this;this.yieldFunction="PageLabel.assign";return b.messageHandler.sendWithPromise("PageLabel.assign",{left:this,right:a},this.userPriority).then(function(a){c.yieldFunction=void 0;copyFunc(a.left,c)})};b.PageLabel.prototype.compare=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'compare'. Expected 1 argument. Function Signature: compare(PageLabel)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'compare' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PageLabel)&&"PageLabel"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'compare' is of type '"+a.name+"'. Expected type 'PageLabel'. Function Signature: compare(PageLabel).");throw new TypeError("1st input argument '"+a+"' in function 'compare' is of type '"+typeof a+"'. Expected type 'PageLabel'. Function Signature: compare(PageLabel).");}if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'compare'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'compare'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");var c=this;this.yieldFunction="PageLabel.compare";return b.messageHandler.sendWithPromise("PageLabel.compare",{l:this,d:a},this.userPriority).then(function(a){c.yieldFunction=void 0;copyFunc(a.l,
c);return a.result})};b.PageLabel.prototype.isValid=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isValid'. Expected 0 arguments. Function Signature: isValid()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'isValid'. Perhaps a yield statement is required for "+this.yieldFunction+"?");return b.messageHandler.sendWithPromise("PageLabel.isValid",
{l:this},this.userPriority)};b.PageLabel.prototype.getLabelTitle=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getLabelTitle'. Expected 1 argument. Function Signature: getLabelTitle(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getLabelTitle' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getLabelTitle' is of type '"+
typeof a+"'. Expected type 'number'. Function Signature: getLabelTitle(number).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getLabelTitle'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var c=this;this.yieldFunction="PageLabel.getLabelTitle";return b.messageHandler.sendWithPromise("PageLabel.getLabelTitle",{l:this,page_num:a},this.userPriority).then(function(a){c.yieldFunction=
void 0;copyFunc(a.l,c);return a.result})};b.PageLabel.prototype.setStyle=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setStyle'. Expected 1 argument. Function Signature: setStyle(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setStyle' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setStyle' is of type '"+
typeof a+"'. Expected type 'number'. Function Signature: setStyle(number).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'setStyle'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var c=this;this.yieldFunction="PageLabel.setStyle";return b.messageHandler.sendWithPromise("PageLabel.setStyle",{l:this,style:a},this.userPriority).then(function(a){c.yieldFunction=
void 0;copyFunc(a.l,c)})};b.PageLabel.prototype.getStyle=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getStyle'. Expected 0 arguments. Function Signature: getStyle()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getStyle'. Perhaps a yield statement is required for "+this.yieldFunction+"?");return b.messageHandler.sendWithPromise("PageLabel.getStyle",
{l:this},this.userPriority)};b.PageLabel.prototype.getPrefix=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPrefix'. Expected 0 arguments. Function Signature: getPrefix()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getPrefix'. Perhaps a yield statement is required for "+this.yieldFunction+"?");
return b.messageHandler.sendWithPromise("PageLabel.getPrefix",{l:this},this.userPriority)};b.PageLabel.prototype.setPrefix=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPrefix'. Expected 1 argument. Function Signature: setPrefix(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPrefix' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'setPrefix' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setPrefix(string).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'setPrefix'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var c=this;this.yieldFunction="PageLabel.setPrefix";return b.messageHandler.sendWithPromise("PageLabel.setPrefix",
{l:this,prefix:a},this.userPriority).then(function(a){c.yieldFunction=void 0;copyFunc(a.l,c)})};b.PageLabel.prototype.getStart=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getStart'. Expected 0 arguments. Function Signature: getStart()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getStart'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("PageLabel.getStart",{l:this},this.userPriority)};b.PageLabel.prototype.setStart=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setStart'. Expected 1 argument. Function Signature: setStart(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setStart' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=
typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setStart' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setStart(number).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'setStart'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var c=this;this.yieldFunction="PageLabel.setStart";return b.messageHandler.sendWithPromise("PageLabel.setStart",
{l:this,start_at:a},this.userPriority).then(function(a){c.yieldFunction=void 0;copyFunc(a.l,c)})};b.PageLabel.prototype.getFirstPageNum=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFirstPageNum'. Expected 0 arguments. Function Signature: getFirstPageNum()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getFirstPageNum'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");var a=this;this.yieldFunction="PageLabel.getFirstPageNum";return b.messageHandler.sendWithPromise("PageLabel.getFirstPageNum",{l:this},this.userPriority).then(function(b){a.yieldFunction=void 0;copyFunc(b.l,a);return b.result})};b.PageLabel.prototype.getLastPageNum=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getLastPageNum'. Expected 0 arguments. Function Signature: getLastPageNum()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+
this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getLastPageNum'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction="PageLabel.getLastPageNum";return b.messageHandler.sendWithPromise("PageLabel.getLastPageNum",{l:this},this.userPriority).then(function(b){a.yieldFunction=void 0;copyFunc(b.l,a);return b.result})};b.PageLabel.prototype.getSDFObj=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getSDFObj'. Expected 0 arguments. Function Signature: getSDFObj()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getSDFObj'. Perhaps a yield statement is required for "+this.yieldFunction+"?");return b.messageHandler.sendWithPromise("PageLabel.getSDFObj",{l:this},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};
b.PageSet.create=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 0 arguments. Function Signature: create()");return b.messageHandler.sendWithPromise("pageSetCreate",{},this.userPriority).then(function(a){if("0"==a)return null;a=new b.PageSet(a);createdObjects.push({name:a.name,id:a.id});return a})};b.PageSet.createSinglePage=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createSinglePage'. Expected 1 argument. Function Signature: createSinglePage(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createSinglePage' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createSinglePage' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: createSinglePage(number).");return b.messageHandler.sendWithPromise("pageSetCreateSinglePage",{one_page:a},this.userPriority).then(function(a){if("0"==
a)return null;a=new b.PageSet(a);createdObjects.push({name:a.name,id:a.id});return a})};b.PageSet.createRange=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createRange'. Expected 2 arguments. Function Signature: createRange(number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createRange' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'createRange' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: createRange(number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createRange' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createRange' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: createRange(number, number).");
return b.messageHandler.sendWithPromise("pageSetCreateRange",{range_start:a,range_end:c},this.userPriority).then(function(a){if("0"==a)return null;a=new b.PageSet(a);createdObjects.push({name:a.name,id:a.id});return a})};b.PageSet.createFilteredRange=function(a,c,d){"undefined"===typeof d&&(d=b.PageSet.Filter.e_all);if(2>arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFilteredRange'. Expected 2 to 3 arguments. Function Signature: createFilteredRange(number, number, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFilteredRange' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createFilteredRange' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: createFilteredRange(number, number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createFilteredRange' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createFilteredRange' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: createFilteredRange(number, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createFilteredRange' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'createFilteredRange' is of type '"+
typeof d+"'. Expected type 'number'. Function Signature: createFilteredRange(number, number, number).");return b.messageHandler.sendWithPromise("pageSetCreateFilteredRange",{range_start:a,range_end:c,filter:d},this.userPriority).then(function(a){if("0"==a)return null;a=new b.PageSet(a);createdObjects.push({name:a.name,id:a.id});return a})};b.PageSet.prototype.destroy=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");
for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("PageSet.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.PageSet.prototype.addPage=function(a){if(1!=
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'addPage'. Expected 1 argument. Function Signature: addPage(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'addPage' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'addPage' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: addPage(number).");
return b.messageHandler.sendWithPromise("PageSet.addPage",{page_set:this.id,one_page:a},this.userPriority)};b.PageSet.prototype.addRange=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'addRange'. Expected 2 arguments. Function Signature: addRange(number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'addRange' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=
typeof a)throw new TypeError("1st input argument '"+a+"' in function 'addRange' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: addRange(number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'addRange' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'addRange' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: addRange(number, number).");
return b.messageHandler.sendWithPromise("PageSet.addRange",{page_set:this.id,range_start:a,range_end:c},this.userPriority)};b.PageSet.prototype.addFilteredRange=function(a,c,d){"undefined"===typeof c&&(c=b.PageSet.Filter.e_all);if(2>arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'addFilteredRange'. Expected 2 to 3 arguments. Function Signature: addFilteredRange(number, number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'addFilteredRange' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'addFilteredRange' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: addFilteredRange(number, number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'addFilteredRange' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'addFilteredRange' is of type '"+
typeof c+"'. Expected type 'number'. Function Signature: addFilteredRange(number, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'addFilteredRange' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'addFilteredRange' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: addFilteredRange(number, number, number).");return b.messageHandler.sendWithPromise("PageSet.addFilteredRange",
{page_set:this.id,range_start:a,range_end:c,filter:d},this.userPriority)};b.PatternColor.create=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 1 argument. Function Signature: create(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'create' is of type '"+
a.name+"'. Expected type 'Obj'. Function Signature: create(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: create(Obj).");}return b.messageHandler.sendWithPromise("patternColorCreate",{pattern:a.id},this.userPriority).then(function(a){if("0"==a)return null;a=new b.PatternColor(a);createdObjects.push({name:a.name,id:a.id});return a})};b.PatternColor.prototype.destroy=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("PatternColor.destroy",
{auto_dealloc_obj:this.id},this.userPriority)};b.PatternColor.prototype.assign=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'assign'. Expected 1 argument. Function Signature: assign(PatternColor)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'assign' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PatternColor)){if("object"==typeof a)throw new TypeError("1st input argument in function 'assign' is of type '"+
a.name+"'. Expected type 'PatternColor'. Function Signature: assign(PatternColor).");throw new TypeError("1st input argument '"+a+"' in function 'assign' is of type '"+typeof a+"'. Expected type 'PatternColor'. Function Signature: assign(PatternColor).");}return b.messageHandler.sendWithPromise("PatternColor.assign",{left:this.id,right:a.id},this.userPriority)};b.PatternColor.getTypeFromObj=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTypeFromObj'. Expected 1 argument. Function Signature: getTypeFromObj(Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'getTypeFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'getTypeFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: getTypeFromObj(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'getTypeFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: getTypeFromObj(Obj).");
}return b.messageHandler.sendWithPromise("patternColorGetTypeFromObj",{pattern:a.id},this.userPriority)};b.PatternColor.prototype.getType=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getType'. Expected 0 arguments. Function Signature: getType()");return b.messageHandler.sendWithPromise("PatternColor.getType",{pc:this.id},this.userPriority)};b.PatternColor.prototype.getSDFObj=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getSDFObj'. Expected 0 arguments. Function Signature: getSDFObj()");return b.messageHandler.sendWithPromise("PatternColor.getSDFObj",{pc:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.PatternColor.prototype.getMatrix=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getMatrix'. Expected 0 arguments. Function Signature: getMatrix()");return b.messageHandler.sendWithPromise("PatternColor.getMatrix",
{pc:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Matrix2D(a)})};b.PatternColor.prototype.getShading=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getShading'. Expected 0 arguments. Function Signature: getShading()");return b.messageHandler.sendWithPromise("PatternColor.getShading",{pc:this.id},this.userPriority).then(function(a){if("0"==a)return null;a=new b.Shading(a);createdObjects.push({name:a.name,id:a.id});return a})};
b.PatternColor.prototype.getTilingType=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTilingType'. Expected 0 arguments. Function Signature: getTilingType()");return b.messageHandler.sendWithPromise("PatternColor.getTilingType",{pc:this.id},this.userPriority)};b.PatternColor.prototype.getBBox=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getBBox'. Expected 0 arguments. Function Signature: getBBox()");
return b.messageHandler.sendWithPromise("PatternColor.getBBox",{pc:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Rect(a)})};b.PatternColor.prototype.getXStep=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getXStep'. Expected 0 arguments. Function Signature: getXStep()");return b.messageHandler.sendWithPromise("PatternColor.getXStep",{pc:this.id},this.userPriority)};b.PatternColor.prototype.getYStep=function(){if(0!=
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getYStep'. Expected 0 arguments. Function Signature: getYStep()");return b.messageHandler.sendWithPromise("PatternColor.getYStep",{pc:this.id},this.userPriority)};b.GeometryCollection.prototype.snapToNearest=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'snapToNearest'. Expected 2 arguments. Function Signature: snapToNearest(number, number)");if(a instanceof
Promise)throw new TypeError("1st input argument in function 'snapToNearest' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'snapToNearest' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: snapToNearest(number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'snapToNearest' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'snapToNearest' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: snapToNearest(number, number).");return b.messageHandler.sendWithPromise("GeometryCollection.snapToNearest",{self:this.id,x:a,y:c},this.userPriority)};b.GeometryCollection.prototype.snapToNearestPixel=function(a,c,d){if(3!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'snapToNearestPixel'. Expected 3 arguments. Function Signature: snapToNearestPixel(number, number, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'snapToNearestPixel' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'snapToNearestPixel' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: snapToNearestPixel(number, number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'snapToNearestPixel' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'snapToNearestPixel' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: snapToNearestPixel(number, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'snapToNearestPixel' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'snapToNearestPixel' is of type '"+
typeof d+"'. Expected type 'number'. Function Signature: snapToNearestPixel(number, number, number).");return b.messageHandler.sendWithPromise("GeometryCollection.snapToNearestPixel",{self:this.id,x:a,y:c,dpi:d},this.userPriority)};b.GeometryCollection.prototype.destroy=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==
this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("GeometryCollection.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.PDFDoc.prototype.getTriggerAction=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getTriggerAction'. Expected 1 argument. Function Signature: getTriggerAction(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getTriggerAction' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getTriggerAction' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getTriggerAction(number).");return b.messageHandler.sendWithPromise("PDFDoc.getTriggerAction",
{doc:this.id,trigger:a},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.PDFDoc.prototype.appearancesToXodBuffer=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'appearancesToXodBuffer'. Expected 1 argument. Function Signature: appearancesToXodBuffer(AppearanceReferenceList)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'appearancesToXodBuffer' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.AppearanceReferenceList)){if("object"==typeof a)throw new TypeError("1st input argument in function 'appearancesToXodBuffer' is of type '"+a.name+"'. Expected type 'AppearanceReferenceList'. Function Signature: appearancesToXodBuffer(AppearanceReferenceList).");throw new TypeError("1st input argument '"+a+"' in function 'appearancesToXodBuffer' is of type '"+typeof a+"'. Expected type 'AppearanceReferenceList'. Function Signature: appearancesToXodBuffer(AppearanceReferenceList).");
}return b.messageHandler.sendWithPromise("PDFDoc.appearancesToXodBuffer",{in_pdfdoc:this.id,reference_list:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.Vector(a)})};b.PDFDoc.create=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 0 arguments. Function Signature: create()");return b.messageHandler.sendWithPromise("pdfDocCreate",{},this.userPriority).then(function(a){if("0"==a)return null;a=new b.PDFDoc(a);
createdObjects.push({name:a.name,id:a.id});return a})};b.PDFDoc.createFromFilter=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromFilter'. Expected 1 argument. Function Signature: createFromFilter(Filter)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromFilter' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Filter)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromFilter' is of type '"+
a.name+"'. Expected type 'Filter'. Function Signature: createFromFilter(Filter).");throw new TypeError("1st input argument '"+a+"' in function 'createFromFilter' is of type '"+typeof a+"'. Expected type 'Filter'. Function Signature: createFromFilter(Filter).");}var c=-1;if(0!=a.id){for(var d=createdObjects.length-1;0<=d;d--)if(createdObjects[d].id==a.id){c=d;break}if(-1!=c)for(createdObjects.splice(c,1),d=deallocStackCounter.length-1;0<=d;d--)if(deallocStackCounter[d]>c)--deallocStackCounter[d];else break;
else console.log("[WARNING] Object to remove ownership from was not found in memory deallocation list. Decallocating may cause errors.")}return b.messageHandler.sendWithPromise("pdfDocCreateFromFilter",{no_own_stream:a.id},this.userPriority).then(function(a){if("0"==a)return null;a=new b.PDFDoc(a);createdObjects.push({name:a.name,id:a.id});return a})};b.PDFDoc.createFromBuffer=function(a){a instanceof Array&&(a=new Float64Array(a));if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromBuffer'. Expected 1 argument. Function Signature: createFromBuffer(ArrayBuffer)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromBuffer' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!h.isArrayBuffer(a.buffer)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromBuffer' is of type '"+a.name+"'. Expected type 'ArrayBuffer'. Function Signature: createFromBuffer(ArrayBuffer).");throw new TypeError("1st input argument '"+a+"' in function 'createFromBuffer' is of type '"+
typeof a+"'. Expected type 'ArrayBuffer'. Function Signature: createFromBuffer(ArrayBuffer).");}return b.messageHandler.sendWithPromise("pdfDocCreateFromBuffer",{buf:a.buffer},this.userPriority).then(function(a){if("0"==a)return null;a=new b.PDFDoc(a);createdObjects.push({name:a.name,id:a.id});return a})};b.PDFDoc.createFromLayoutEls=function(a){a instanceof Array&&(a=new Float64Array(a));if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromLayoutEls'. Expected 1 argument. Function Signature: createFromLayoutEls(ArrayBuffer)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromLayoutEls' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!h.isArrayBuffer(a.buffer)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromLayoutEls' is of type '"+a.name+"'. Expected type 'ArrayBuffer'. Function Signature: createFromLayoutEls(ArrayBuffer).");throw new TypeError("1st input argument '"+a+"' in function 'createFromLayoutEls' is of type '"+
typeof a+"'. Expected type 'ArrayBuffer'. Function Signature: createFromLayoutEls(ArrayBuffer).");}return b.messageHandler.sendWithPromise("pdfDocCreateFromLayoutEls",{buf:a.buffer},this.userPriority).then(function(a){if("0"==a)return null;a=new b.PDFDoc(a);createdObjects.push({name:a.name,id:a.id});return a})};b.PDFDoc.prototype.createShallowCopy=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createShallowCopy'. Expected 0 arguments. Function Signature: createShallowCopy()");
return b.messageHandler.sendWithPromise("PDFDoc.createShallowCopy",{source:this.id},this.userPriority).then(function(a){if("0"==a)return null;a=new b.PDFDoc(a);createdObjects.push({name:a.name,id:a.id});return a})};b.PDFDoc.prototype.destroy=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=
a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("PDFDoc.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.PDFDoc.prototype.isEncrypted=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isEncrypted'. Expected 0 arguments. Function Signature: isEncrypted()");
return b.messageHandler.sendWithPromise("PDFDoc.isEncrypted",{doc:this.id},this.userPriority)};b.PDFDoc.prototype.initStdSecurityHandler=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'initStdSecurityHandler'. Expected 2 arguments. Function Signature: initStdSecurityHandler(string, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'initStdSecurityHandler' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'initStdSecurityHandler' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: initStdSecurityHandler(string, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'initStdSecurityHandler' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'initStdSecurityHandler' is of type '"+
typeof c+"'. Expected type 'number'. Function Signature: initStdSecurityHandler(string, number).");return b.messageHandler.sendWithPromise("PDFDoc.initStdSecurityHandler",{doc:this.id,password:a,password_sz:c},this.userPriority)};b.PDFDoc.prototype.initStdSecurityHandlerUString=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'initStdSecurityHandlerUString'. Expected 1 argument. Function Signature: initStdSecurityHandlerUString(string)");if(a instanceof
Promise)throw new TypeError("1st input argument in function 'initStdSecurityHandlerUString' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'initStdSecurityHandlerUString' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: initStdSecurityHandlerUString(string).");return b.messageHandler.sendWithPromise("PDFDoc.initStdSecurityHandlerUString",{doc:this.id,password:a},
this.userPriority)};b.PDFDoc.prototype.initStdSecurityHandlerBuffer=function(a){a instanceof Array&&(a=new Float64Array(a));if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'initStdSecurityHandlerBuffer'. Expected 1 argument. Function Signature: initStdSecurityHandlerBuffer(ArrayBuffer)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'initStdSecurityHandlerBuffer' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!h.isArrayBuffer(a.buffer)){if("object"==typeof a)throw new TypeError("1st input argument in function 'initStdSecurityHandlerBuffer' is of type '"+a.name+"'. Expected type 'ArrayBuffer'. Function Signature: initStdSecurityHandlerBuffer(ArrayBuffer).");throw new TypeError("1st input argument '"+a+"' in function 'initStdSecurityHandlerBuffer' is of type '"+typeof a+"'. Expected type 'ArrayBuffer'. Function Signature: initStdSecurityHandlerBuffer(ArrayBuffer).");}return b.messageHandler.sendWithPromise("PDFDoc.initStdSecurityHandlerBuffer",
{doc:this.id,password_buf:a.buffer},this.userPriority)};b.PDFDoc.prototype.getSecurityHandler=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSecurityHandler'. Expected 0 arguments. Function Signature: getSecurityHandler()");return b.messageHandler.sendWithPromise("PDFDoc.getSecurityHandler",{doc:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.SecurityHandler(a)})};b.PDFDoc.prototype.setSecurityHandler=function(a){if(1!=
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setSecurityHandler'. Expected 1 argument. Function Signature: setSecurityHandler(SecurityHandler)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setSecurityHandler' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.SecurityHandler)){if("object"==typeof a)throw new TypeError("1st input argument in function 'setSecurityHandler' is of type '"+
a.name+"'. Expected type 'SecurityHandler'. Function Signature: setSecurityHandler(SecurityHandler).");throw new TypeError("1st input argument '"+a+"' in function 'setSecurityHandler' is of type '"+typeof a+"'. Expected type 'SecurityHandler'. Function Signature: setSecurityHandler(SecurityHandler).");}var c=-1;if(0!=a.id){for(var d=createdObjects.length-1;0<=d;d--)if(createdObjects[d].id==a.id){c=d;break}if(-1!=c)for(createdObjects.splice(c,1),d=deallocStackCounter.length-1;0<=d;d--)if(deallocStackCounter[d]>
c)--deallocStackCounter[d];else break;else console.log("[WARNING] Object to remove ownership from was not found in memory deallocation list. Decallocating may cause errors.")}return b.messageHandler.sendWithPromise("PDFDoc.setSecurityHandler",{doc:this.id,no_own_handler:a.id},this.userPriority)};b.PDFDoc.prototype.removeSecurity=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'removeSecurity'. Expected 0 arguments. Function Signature: removeSecurity()");
return b.messageHandler.sendWithPromise("PDFDoc.removeSecurity",{doc:this.id},this.userPriority)};b.PDFDoc.prototype.getDocInfo=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getDocInfo'. Expected 0 arguments. Function Signature: getDocInfo()");return b.messageHandler.sendWithPromise("PDFDoc.getDocInfo",{doc:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.PDFDocInfo(a)})};b.PDFDoc.prototype.getViewPrefs=function(){if(0!=
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getViewPrefs'. Expected 0 arguments. Function Signature: getViewPrefs()");return b.messageHandler.sendWithPromise("PDFDoc.getViewPrefs",{doc:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.PDFDocViewPrefs(a)})};b.PDFDoc.prototype.isModified=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isModified'. Expected 0 arguments. Function Signature: isModified()");
return b.messageHandler.sendWithPromise("PDFDoc.isModified",{doc:this.id},this.userPriority)};b.PDFDoc.prototype.hasRepairedXRef=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'hasRepairedXRef'. Expected 0 arguments. Function Signature: hasRepairedXRef()");return b.messageHandler.sendWithPromise("PDFDoc.hasRepairedXRef",{doc:this.id},this.userPriority)};b.PDFDoc.prototype.isLinearized=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'isLinearized'. Expected 0 arguments. Function Signature: isLinearized()");return b.messageHandler.sendWithPromise("PDFDoc.isLinearized",{doc:this.id},this.userPriority)};b.PDFDoc.prototype.saveMemoryBuffer=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'saveMemoryBuffer'. Expected 1 argument. Function Signature: saveMemoryBuffer(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'saveMemoryBuffer' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'saveMemoryBuffer' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: saveMemoryBuffer(number).");return b.messageHandler.sendWithPromise("PDFDoc.saveMemoryBuffer",{doc:this.id,flags:a},this.userPriority).then(function(a){return new Uint8Array(a)})};b.PDFDoc.prototype.saveStream=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'saveStream'. Expected 2 arguments. Function Signature: saveStream(Filter, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'saveStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Filter)){if("object"==typeof a)throw new TypeError("1st input argument in function 'saveStream' is of type '"+a.name+"'. Expected type 'Filter'. Function Signature: saveStream(Filter, number).");throw new TypeError("1st input argument '"+a+"' in function 'saveStream' is of type '"+typeof a+"'. Expected type 'Filter'. Function Signature: saveStream(Filter, number).");
}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'saveStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'saveStream' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: saveStream(Filter, number).");return b.messageHandler.sendWithPromise("PDFDoc.saveStream",{doc:this.id,stream:a.id,flags:c},this.userPriority)};b.PDFDoc.prototype.getPageIterator=
function(a){"undefined"===typeof a&&(a=1);if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPageIterator'. Expected at most 1 arguments. Function Signature: getPageIterator(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getPageIterator' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getPageIterator' is of type '"+
typeof a+"'. Expected type 'number'. Function Signature: getPageIterator(number).");return b.messageHandler.sendWithPromise("PDFDoc.getPageIterator",{doc:this.id,page_number:a},this.userPriority).then(function(a){if("0"==a)return null;a=new b.Iterator(a);createdObjects.push({name:a.name,id:a.id});return a})};b.PDFDoc.prototype.getPage=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPage'. Expected 1 argument. Function Signature: getPage(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'getPage' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getPage' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getPage(number).");return b.messageHandler.sendWithPromise("PDFDoc.getPage",{doc:this.id,page_number:a},this.userPriority).then(function(a){return"0"==a?null:new b.Page(a)})};
b.PDFDoc.prototype.pageRemove=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'pageRemove'. Expected 1 argument. Function Signature: pageRemove(Iterator)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'pageRemove' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Iterator)){if("object"==typeof a)throw new TypeError("1st input argument in function 'pageRemove' is of type '"+
a.name+"'. Expected type 'Iterator'. Function Signature: pageRemove(Iterator).");throw new TypeError("1st input argument '"+a+"' in function 'pageRemove' is of type '"+typeof a+"'. Expected type 'Iterator'. Function Signature: pageRemove(Iterator).");}return b.messageHandler.sendWithPromise("PDFDoc.pageRemove",{doc:this.id,page_itr:a.id},this.userPriority)};b.PDFDoc.prototype.pageInsert=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'pageInsert'. Expected 2 arguments. Function Signature: pageInsert(Iterator, Page)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'pageInsert' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Iterator)){if("object"==typeof a)throw new TypeError("1st input argument in function 'pageInsert' is of type '"+a.name+"'. Expected type 'Iterator'. Function Signature: pageInsert(Iterator, Page).");throw new TypeError("1st input argument '"+a+"' in function 'pageInsert' is of type '"+typeof a+"'. Expected type 'Iterator'. Function Signature: pageInsert(Iterator, Page).");
}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'pageInsert' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Page)){if("object"==typeof c)throw new TypeError("2nd input argument in function 'pageInsert' is of type '"+c.name+"'. Expected type 'Page'. Function Signature: pageInsert(Iterator, Page).");throw new TypeError("2nd input argument '"+c+"' in function 'pageInsert' is of type '"+typeof c+"'. Expected type 'Page'. Function Signature: pageInsert(Iterator, Page).");
}return b.messageHandler.sendWithPromise("PDFDoc.pageInsert",{doc:this.id,where:a.id,page:c.id},this.userPriority)};b.PDFDoc.prototype.insertPages=function(a,c,d,e,f){"undefined"===typeof f&&(f=0);if(4>arguments.length||5<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'insertPages'. Expected 4 to 5 arguments. Function Signature: insertPages(number, PDFDoc, number, number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'insertPages' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'insertPages' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: insertPages(number, PDFDoc, number, number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'insertPages' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.PDFDoc||c instanceof b.SDFDoc||c instanceof b.FDFDoc)){if("object"==typeof c)throw new TypeError("2nd input argument in function 'insertPages' is of type '"+
c.name+"'. Expected type 'PDFDoc'. Function Signature: insertPages(number, PDFDoc, number, number, number).");throw new TypeError("2nd input argument '"+c+"' in function 'insertPages' is of type '"+typeof c+"'. Expected type 'PDFDoc'. Function Signature: insertPages(number, PDFDoc, number, number, number).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'insertPages' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof d)throw new TypeError("3rd input argument '"+
d+"' in function 'insertPages' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: insertPages(number, PDFDoc, number, number, number).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'insertPages' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof e)throw new TypeError("4th input argument '"+e+"' in function 'insertPages' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: insertPages(number, PDFDoc, number, number, number).");
if(f instanceof Promise)throw new TypeError("5th input argument in function 'insertPages' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof f)throw new TypeError("5th input argument '"+f+"' in function 'insertPages' is of type '"+typeof f+"'. Expected type 'number'. Function Signature: insertPages(number, PDFDoc, number, number, number).");return b.messageHandler.sendWithPromise("PDFDoc.insertPages",{dest_doc:this.id,insert_before_page_number:a,
src_doc:c.id,start_page:d,end_page:e,flag:f},this.userPriority)};b.PDFDoc.prototype.insertPageSet=function(a,c,d,e){"undefined"===typeof e&&(e=0);if(3>arguments.length||4<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'insertPageSet'. Expected 3 to 4 arguments. Function Signature: insertPageSet(number, PDFDoc, PageSet, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'insertPageSet' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'insertPageSet' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: insertPageSet(number, PDFDoc, PageSet, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'insertPageSet' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.PDFDoc||c instanceof b.SDFDoc||c instanceof b.FDFDoc)){if("object"==typeof c)throw new TypeError("2nd input argument in function 'insertPageSet' is of type '"+
c.name+"'. Expected type 'PDFDoc'. Function Signature: insertPageSet(number, PDFDoc, PageSet, number).");throw new TypeError("2nd input argument '"+c+"' in function 'insertPageSet' is of type '"+typeof c+"'. Expected type 'PDFDoc'. Function Signature: insertPageSet(number, PDFDoc, PageSet, number).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'insertPageSet' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(d instanceof b.PageSet)){if("object"==
typeof d)throw new TypeError("3rd input argument in function 'insertPageSet' is of type '"+d.name+"'. Expected type 'PageSet'. Function Signature: insertPageSet(number, PDFDoc, PageSet, number).");throw new TypeError("3rd input argument '"+d+"' in function 'insertPageSet' is of type '"+typeof d+"'. Expected type 'PageSet'. Function Signature: insertPageSet(number, PDFDoc, PageSet, number).");}if(e instanceof Promise)throw new TypeError("4th input argument in function 'insertPageSet' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof e)throw new TypeError("4th input argument '"+e+"' in function 'insertPageSet' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: insertPageSet(number, PDFDoc, PageSet, number).");return b.messageHandler.sendWithPromise("PDFDoc.insertPageSet",{dest_doc:this.id,insert_before_page_number:a,src_doc:c.id,source_page_set:d.id,flag:e},this.userPriority)};b.PDFDoc.prototype.movePages=function(a,c,d,e,f){"undefined"===typeof f&&(f=0);if(4>arguments.length||5<arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'movePages'. Expected 4 to 5 arguments. Function Signature: movePages(number, PDFDoc, number, number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'movePages' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'movePages' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: movePages(number, PDFDoc, number, number, number).");
if(c instanceof Promise)throw new TypeError("2nd input argument in function 'movePages' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.PDFDoc||c instanceof b.SDFDoc||c instanceof b.FDFDoc)){if("object"==typeof c)throw new TypeError("2nd input argument in function 'movePages' is of type '"+c.name+"'. Expected type 'PDFDoc'. Function Signature: movePages(number, PDFDoc, number, number, number).");throw new TypeError("2nd input argument '"+c+"' in function 'movePages' is of type '"+
typeof c+"'. Expected type 'PDFDoc'. Function Signature: movePages(number, PDFDoc, number, number, number).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'movePages' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'movePages' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: movePages(number, PDFDoc, number, number, number).");if(e instanceof
Promise)throw new TypeError("4th input argument in function 'movePages' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof e)throw new TypeError("4th input argument '"+e+"' in function 'movePages' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: movePages(number, PDFDoc, number, number, number).");if(f instanceof Promise)throw new TypeError("5th input argument in function 'movePages' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof f)throw new TypeError("5th input argument '"+f+"' in function 'movePages' is of type '"+typeof f+"'. Expected type 'number'. Function Signature: movePages(number, PDFDoc, number, number, number).");return b.messageHandler.sendWithPromise("PDFDoc.movePages",{dest_doc:this.id,move_before_page_number:a,src_doc:c.id,start_page:d,end_page:e,flag:f},this.userPriority)};b.PDFDoc.prototype.movePageSet=function(a,c,d,e){"undefined"===typeof e&&(e=0);if(3>arguments.length||4<arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'movePageSet'. Expected 3 to 4 arguments. Function Signature: movePageSet(number, PDFDoc, PageSet, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'movePageSet' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'movePageSet' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: movePageSet(number, PDFDoc, PageSet, number).");
if(c instanceof Promise)throw new TypeError("2nd input argument in function 'movePageSet' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.PDFDoc||c instanceof b.SDFDoc||c instanceof b.FDFDoc)){if("object"==typeof c)throw new TypeError("2nd input argument in function 'movePageSet' is of type '"+c.name+"'. Expected type 'PDFDoc'. Function Signature: movePageSet(number, PDFDoc, PageSet, number).");throw new TypeError("2nd input argument '"+c+"' in function 'movePageSet' is of type '"+
typeof c+"'. Expected type 'PDFDoc'. Function Signature: movePageSet(number, PDFDoc, PageSet, number).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'movePageSet' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(d instanceof b.PageSet)){if("object"==typeof d)throw new TypeError("3rd input argument in function 'movePageSet' is of type '"+d.name+"'. Expected type 'PageSet'. Function Signature: movePageSet(number, PDFDoc, PageSet, number).");
throw new TypeError("3rd input argument '"+d+"' in function 'movePageSet' is of type '"+typeof d+"'. Expected type 'PageSet'. Function Signature: movePageSet(number, PDFDoc, PageSet, number).");}if(e instanceof Promise)throw new TypeError("4th input argument in function 'movePageSet' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof e)throw new TypeError("4th input argument '"+e+"' in function 'movePageSet' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: movePageSet(number, PDFDoc, PageSet, number).");
return b.messageHandler.sendWithPromise("PDFDoc.movePageSet",{dest_doc:this.id,move_before_page_number:a,src_doc:c.id,source_page_set:d.id,flag:e},this.userPriority)};b.PDFDoc.prototype.pagePushFront=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'pagePushFront'. Expected 1 argument. Function Signature: pagePushFront(Page)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'pagePushFront' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Page)){if("object"==typeof a)throw new TypeError("1st input argument in function 'pagePushFront' is of type '"+a.name+"'. Expected type 'Page'. Function Signature: pagePushFront(Page).");throw new TypeError("1st input argument '"+a+"' in function 'pagePushFront' is of type '"+typeof a+"'. Expected type 'Page'. Function Signature: pagePushFront(Page).");}return b.messageHandler.sendWithPromise("PDFDoc.pagePushFront",{doc:this.id,page:a.id},this.userPriority)};b.PDFDoc.prototype.pagePushBack=
function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'pagePushBack'. Expected 1 argument. Function Signature: pagePushBack(Page)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'pagePushBack' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Page)){if("object"==typeof a)throw new TypeError("1st input argument in function 'pagePushBack' is of type '"+a.name+"'. Expected type 'Page'. Function Signature: pagePushBack(Page).");
throw new TypeError("1st input argument '"+a+"' in function 'pagePushBack' is of type '"+typeof a+"'. Expected type 'Page'. Function Signature: pagePushBack(Page).");}return b.messageHandler.sendWithPromise("PDFDoc.pagePushBack",{doc:this.id,page:a.id},this.userPriority)};b.PDFDoc.prototype.pageCreate=function(a){"undefined"===typeof a&&(a=new b.Rect(0,0,612,792));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'pageCreate'. Expected at most 1 arguments. Function Signature: pageCreate(Rect)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'pageCreate' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Rect)&&"Rect"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'pageCreate' is of type '"+a.name+"'. Expected type 'Rect'. Function Signature: pageCreate(Rect).");throw new TypeError("1st input argument '"+a+"' in function 'pageCreate' is of type '"+typeof a+"'. Expected type 'Rect'. Function Signature: pageCreate(Rect).");
}if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'pageCreate'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("PDFDoc.pageCreate",{doc:this.id,media_box:a},this.userPriority).then(function(a){return"0"==a?null:new b.Page(a)})};b.PDFDoc.prototype.getFirstBookmark=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getFirstBookmark'. Expected 0 arguments. Function Signature: getFirstBookmark()");return b.messageHandler.sendWithPromise("PDFDoc.getFirstBookmark",{doc:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Bookmark(a)})};b.PDFDoc.prototype.addRootBookmark=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'addRootBookmark'. Expected 1 argument. Function Signature: addRootBookmark(Bookmark)");if(a instanceof
Promise)throw new TypeError("1st input argument in function 'addRootBookmark' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Bookmark)){if("object"==typeof a)throw new TypeError("1st input argument in function 'addRootBookmark' is of type '"+a.name+"'. Expected type 'Bookmark'. Function Signature: addRootBookmark(Bookmark).");throw new TypeError("1st input argument '"+a+"' in function 'addRootBookmark' is of type '"+typeof a+"'. Expected type 'Bookmark'. Function Signature: addRootBookmark(Bookmark).");
}return b.messageHandler.sendWithPromise("PDFDoc.addRootBookmark",{doc:this.id,root_bookmark:a.id},this.userPriority)};b.PDFDoc.prototype.getTrailer=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTrailer'. Expected 0 arguments. Function Signature: getTrailer()");return b.messageHandler.sendWithPromise("PDFDoc.getTrailer",{doc:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.PDFDoc.prototype.getRoot=function(){if(0!=
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getRoot'. Expected 0 arguments. Function Signature: getRoot()");return b.messageHandler.sendWithPromise("PDFDoc.getRoot",{doc:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.PDFDoc.prototype.jsContextInitialize=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'jsContextInitialize'. Expected 0 arguments. Function Signature: jsContextInitialize()");
return b.messageHandler.sendWithPromise("PDFDoc.jsContextInitialize",{doc:this.id},this.userPriority)};b.PDFDoc.prototype.getPages=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPages'. Expected 0 arguments. Function Signature: getPages()");return b.messageHandler.sendWithPromise("PDFDoc.getPages",{doc:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.PDFDoc.prototype.getPageCount=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getPageCount'. Expected 0 arguments. Function Signature: getPageCount()");return b.messageHandler.sendWithPromise("PDFDoc.getPageCount",{doc:this.id},this.userPriority)};b.pdfGetDownloadedByteCount=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'pdfGetDownloadedByteCount'. Expected 1 argument. Function Signature: pdfGetDownloadedByteCount(PDFDoc)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'pdfGetDownloadedByteCount' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'pdfGetDownloadedByteCount' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: pdfGetDownloadedByteCount(PDFDoc).");throw new TypeError("1st input argument '"+a+"' in function 'pdfGetDownloadedByteCount' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: pdfGetDownloadedByteCount(PDFDoc).");}return b.messageHandler.sendWithPromise("pdfGetDownloadedByteCount",
{doc:a.id},this.userPriority)};b.pdfGetTotalRemoteByteCount=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'pdfGetTotalRemoteByteCount'. Expected 1 argument. Function Signature: pdfGetTotalRemoteByteCount(PDFDoc)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'pdfGetTotalRemoteByteCount' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof
b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'pdfGetTotalRemoteByteCount' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: pdfGetTotalRemoteByteCount(PDFDoc).");throw new TypeError("1st input argument '"+a+"' in function 'pdfGetTotalRemoteByteCount' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: pdfGetTotalRemoteByteCount(PDFDoc).");}return b.messageHandler.sendWithPromise("pdfGetTotalRemoteByteCount",
{doc:a.id},this.userPriority)};b.PDFDoc.prototype.getFieldIteratorBegin=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFieldIteratorBegin'. Expected 0 arguments. Function Signature: getFieldIteratorBegin()");return b.messageHandler.sendWithPromise("PDFDoc.getFieldIteratorBegin",{doc:this.id},this.userPriority).then(function(a){if("0"==a)return null;a=new b.Iterator(a);createdObjects.push({name:a.name,id:a.id});return a})};b.PDFDoc.prototype.getFieldIterator=
function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFieldIterator'. Expected 1 argument. Function Signature: getFieldIterator(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getFieldIterator' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getFieldIterator' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: getFieldIterator(string).");
return b.messageHandler.sendWithPromise("PDFDoc.getFieldIterator",{doc:this.id,field_name:a},this.userPriority).then(function(a){if("0"==a)return null;a=new b.Iterator(a);createdObjects.push({name:a.name,id:a.id});return a})};b.PDFDoc.prototype.getField=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getField'. Expected 1 argument. Function Signature: getField(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getField' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getField' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: getField(string).");return b.messageHandler.sendWithPromise("PDFDoc.getField",{doc:this.id,field_name:a},this.userPriority).then(function(a){return"0"==a?null:new b.Field(a)})};b.PDFDoc.prototype.fieldCreate=function(a,c,d,e){"undefined"===typeof d&&(d=new b.Obj("0"));"undefined"===typeof e&&(e=new b.Obj("0"));if(2>arguments.length||4<
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'fieldCreate'. Expected 2 to 4 arguments. Function Signature: fieldCreate(string, number, Obj, Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'fieldCreate' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'fieldCreate' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: fieldCreate(string, number, Obj, Obj).");
if(c instanceof Promise)throw new TypeError("2nd input argument in function 'fieldCreate' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'fieldCreate' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: fieldCreate(string, number, Obj, Obj).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'fieldCreate' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(d instanceof b.Obj)){if("object"==typeof d)throw new TypeError("3rd input argument in function 'fieldCreate' is of type '"+d.name+"'. Expected type 'Obj'. Function Signature: fieldCreate(string, number, Obj, Obj).");throw new TypeError("3rd input argument '"+d+"' in function 'fieldCreate' is of type '"+typeof d+"'. Expected type 'Obj'. Function Signature: fieldCreate(string, number, Obj, Obj).");}if(e instanceof Promise)throw new TypeError("4th input argument in function 'fieldCreate' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(e instanceof b.Obj)){if("object"==typeof e)throw new TypeError("4th input argument in function 'fieldCreate' is of type '"+e.name+"'. Expected type 'Obj'. Function Signature: fieldCreate(string, number, Obj, Obj).");throw new TypeError("4th input argument '"+e+"' in function 'fieldCreate' is of type '"+typeof e+"'. Expected type 'Obj'. Function Signature: fieldCreate(string, number, Obj, Obj).");}return b.messageHandler.sendWithPromise("PDFDoc.fieldCreate",{doc:this.id,field_name:a,type:c,field_value:d.id,
def_field_value:e.id},this.userPriority).then(function(a){return"0"==a?null:new b.Field(a)})};b.PDFDoc.prototype.fieldCreateFromStrings=function(a,c,d,e){if(4!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'fieldCreateFromStrings'. Expected 4 arguments. Function Signature: fieldCreateFromStrings(string, number, string, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'fieldCreateFromStrings' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'fieldCreateFromStrings' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: fieldCreateFromStrings(string, number, string, string).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'fieldCreateFromStrings' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'fieldCreateFromStrings' is of type '"+
typeof c+"'. Expected type 'number'. Function Signature: fieldCreateFromStrings(string, number, string, string).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'fieldCreateFromStrings' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'fieldCreateFromStrings' is of type '"+typeof d+"'. Expected type 'string'. Function Signature: fieldCreateFromStrings(string, number, string, string).");
if(e instanceof Promise)throw new TypeError("4th input argument in function 'fieldCreateFromStrings' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof e)throw new TypeError("4th input argument '"+e+"' in function 'fieldCreateFromStrings' is of type '"+typeof e+"'. Expected type 'string'. Function Signature: fieldCreateFromStrings(string, number, string, string).");return b.messageHandler.sendWithPromise("PDFDoc.fieldCreateFromStrings",{doc:this.id,
field_name:a,type:c,field_value:d,def_field_value:e},this.userPriority).then(function(a){return"0"==a?null:new b.Field(a)})};b.PDFDoc.prototype.refreshFieldAppearances=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'refreshFieldAppearances'. Expected 0 arguments. Function Signature: refreshFieldAppearances()");return b.messageHandler.sendWithPromise("PDFDoc.refreshFieldAppearances",{doc:this.id},this.userPriority)};b.PDFDoc.prototype.flattenAnnotations=
function(a){"undefined"===typeof a&&(a=!1);if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'flattenAnnotations'. Expected at most 1 arguments. Function Signature: flattenAnnotations(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'flattenAnnotations' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'flattenAnnotations' is of type '"+
typeof a+"'. Expected type 'boolean'. Function Signature: flattenAnnotations(boolean).");return b.messageHandler.sendWithPromise("PDFDoc.flattenAnnotations",{doc:this.id,forms_only:a},this.userPriority)};b.PDFDoc.prototype.flattenAnnotationsAdvanced=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'flattenAnnotationsAdvanced'. Expected 1 argument. Function Signature: flattenAnnotationsAdvanced(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'flattenAnnotationsAdvanced' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'flattenAnnotationsAdvanced' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: flattenAnnotationsAdvanced(number).");return b.messageHandler.sendWithPromise("PDFDoc.flattenAnnotationsAdvanced",{doc:this.id,flags:a},this.userPriority)};b.PDFDoc.prototype.getAcroForm=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getAcroForm'. Expected 0 arguments. Function Signature: getAcroForm()");
return b.messageHandler.sendWithPromise("PDFDoc.getAcroForm",{doc:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.PDFDoc.prototype.fdfExtract=function(a){"undefined"===typeof a&&(a=b.PDFDoc.ExtractFlag.e_forms_only);if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'fdfExtract'. Expected at most 1 arguments. Function Signature: fdfExtract(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'fdfExtract' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'fdfExtract' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: fdfExtract(number).");return b.messageHandler.sendWithPromise("PDFDoc.fdfExtract",{doc:this.id,flag:a},this.userPriority).then(function(a){if("0"==a)return null;a=new b.FDFDoc(a);createdObjects.push({name:a.name,id:a.id});return a})};b.PDFDoc.prototype.fdfExtractPageSet=function(a,c){"undefined"===typeof c&&(c=b.PDFDoc.ExtractFlag.e_forms_only);
if(1>arguments.length||2<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'fdfExtractPageSet'. Expected 1 to 2 arguments. Function Signature: fdfExtractPageSet(PageSet, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'fdfExtractPageSet' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PageSet)){if("object"==typeof a)throw new TypeError("1st input argument in function 'fdfExtractPageSet' is of type '"+
a.name+"'. Expected type 'PageSet'. Function Signature: fdfExtractPageSet(PageSet, number).");throw new TypeError("1st input argument '"+a+"' in function 'fdfExtractPageSet' is of type '"+typeof a+"'. Expected type 'PageSet'. Function Signature: fdfExtractPageSet(PageSet, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'fdfExtractPageSet' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+
c+"' in function 'fdfExtractPageSet' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: fdfExtractPageSet(PageSet, number).");return b.messageHandler.sendWithPromise("PDFDoc.fdfExtractPageSet",{doc:this.id,pages_to_extract:a.id,flag:c},this.userPriority).then(function(a){if("0"==a)return null;a=new b.FDFDoc(a);createdObjects.push({name:a.name,id:a.id});return a})};b.PDFDoc.prototype.fdfExtractAnnots=function(a){a instanceof Array&&(a=new Float64Array(a));if(1!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'fdfExtractAnnots'. Expected 1 argument. Function Signature: fdfExtractAnnots(ArrayBuffer)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'fdfExtractAnnots' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!h.isArrayBuffer(a.buffer)){if("object"==typeof a)throw new TypeError("1st input argument in function 'fdfExtractAnnots' is of type '"+a.name+"'. Expected type 'ArrayBuffer'. Function Signature: fdfExtractAnnots(ArrayBuffer).");
throw new TypeError("1st input argument '"+a+"' in function 'fdfExtractAnnots' is of type '"+typeof a+"'. Expected type 'ArrayBuffer'. Function Signature: fdfExtractAnnots(ArrayBuffer).");}return b.messageHandler.sendWithPromise("PDFDoc.fdfExtractAnnots",{doc:this.id,annot_buf:a.buffer},this.userPriority).then(function(a){if("0"==a)return null;a=new b.FDFDoc(a);createdObjects.push({name:a.name,id:a.id});return a})};b.PDFDoc.prototype.fdfExtractCommand=function(a,c,d){a instanceof Array&&(a=new Float64Array(a));
c instanceof Array&&(c=new Float64Array(c));d instanceof Array&&(d=new Float64Array(d));if(3!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'fdfExtractCommand'. Expected 3 arguments. Function Signature: fdfExtractCommand(ArrayBuffer, ArrayBuffer, ArrayBuffer)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'fdfExtractCommand' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!h.isArrayBuffer(a.buffer)){if("object"==
typeof a)throw new TypeError("1st input argument in function 'fdfExtractCommand' is of type '"+a.name+"'. Expected type 'ArrayBuffer'. Function Signature: fdfExtractCommand(ArrayBuffer, ArrayBuffer, ArrayBuffer).");throw new TypeError("1st input argument '"+a+"' in function 'fdfExtractCommand' is of type '"+typeof a+"'. Expected type 'ArrayBuffer'. Function Signature: fdfExtractCommand(ArrayBuffer, ArrayBuffer, ArrayBuffer).");}if(c instanceof Promise)throw new TypeError("3rd input argument in function 'fdfExtractCommand' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!h.isArrayBuffer(c.buffer)){if("object"==typeof c)throw new TypeError("3rd input argument in function 'fdfExtractCommand' is of type '"+c.name+"'. Expected type 'ArrayBuffer'. Function Signature: fdfExtractCommand(ArrayBuffer, ArrayBuffer, ArrayBuffer).");throw new TypeError("3rd input argument '"+c+"' in function 'fdfExtractCommand' is of type '"+typeof c+"'. Expected type 'ArrayBuffer'. Function Signature: fdfExtractCommand(ArrayBuffer, ArrayBuffer, ArrayBuffer).");}if(d instanceof Promise)throw new TypeError("5th input argument in function 'fdfExtractCommand' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!h.isArrayBuffer(d.buffer)){if("object"==typeof d)throw new TypeError("5th input argument in function 'fdfExtractCommand' is of type '"+d.name+"'. Expected type 'ArrayBuffer'. Function Signature: fdfExtractCommand(ArrayBuffer, ArrayBuffer, ArrayBuffer).");throw new TypeError("5th input argument '"+d+"' in function 'fdfExtractCommand' is of type '"+typeof d+"'. Expected type 'ArrayBuffer'. Function Signature: fdfExtractCommand(ArrayBuffer, ArrayBuffer, ArrayBuffer).");}return b.messageHandler.sendWithPromise("PDFDoc.fdfExtractCommand",
{doc:this.id,annot_added_buf:a.buffer,annot_modified_buf:c.buffer,annot_deleted_buf:d.buffer},this.userPriority).then(function(a){if("0"==a)return null;a=new b.FDFDoc(a);createdObjects.push({name:a.name,id:a.id});return a})};b.PDFDoc.prototype.fdfMerge=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'fdfMerge'. Expected 1 argument. Function Signature: fdfMerge(FDFDoc)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'fdfMerge' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'fdfMerge' is of type '"+a.name+"'. Expected type 'FDFDoc'. Function Signature: fdfMerge(FDFDoc).");throw new TypeError("1st input argument '"+a+"' in function 'fdfMerge' is of type '"+typeof a+"'. Expected type 'FDFDoc'. Function Signature: fdfMerge(FDFDoc).");}return b.messageHandler.sendWithPromise("PDFDoc.fdfMerge",{doc:this.id,fdf_doc:a.id},this.userPriority)};
b.PDFDoc.prototype.fdfUpdate=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'fdfUpdate'. Expected 1 argument. Function Signature: fdfUpdate(FDFDoc)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'fdfUpdate' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'fdfUpdate' is of type '"+
a.name+"'. Expected type 'FDFDoc'. Function Signature: fdfUpdate(FDFDoc).");throw new TypeError("1st input argument '"+a+"' in function 'fdfUpdate' is of type '"+typeof a+"'. Expected type 'FDFDoc'. Function Signature: fdfUpdate(FDFDoc).");}return b.messageHandler.sendWithPromise("PDFDoc.fdfUpdate",{doc:this.id,fdf_doc:a.id},this.userPriority)};b.PDFDoc.prototype.getOpenAction=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getOpenAction'. Expected 0 arguments. Function Signature: getOpenAction()");
return b.messageHandler.sendWithPromise("PDFDoc.getOpenAction",{doc:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Action(a)})};b.PDFDoc.prototype.setOpenAction=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setOpenAction'. Expected 1 argument. Function Signature: setOpenAction(Action)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setOpenAction' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Action)){if("object"==typeof a)throw new TypeError("1st input argument in function 'setOpenAction' is of type '"+a.name+"'. Expected type 'Action'. Function Signature: setOpenAction(Action).");throw new TypeError("1st input argument '"+a+"' in function 'setOpenAction' is of type '"+typeof a+"'. Expected type 'Action'. Function Signature: setOpenAction(Action).");}return b.messageHandler.sendWithPromise("PDFDoc.setOpenAction",{doc:this.id,action:a.id},this.userPriority)};b.PDFDoc.prototype.addFileAttachment=
function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'addFileAttachment'. Expected 2 arguments. Function Signature: addFileAttachment(string, FileSpec)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'addFileAttachment' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'addFileAttachment' is of type '"+
typeof a+"'. Expected type 'string'. Function Signature: addFileAttachment(string, FileSpec).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'addFileAttachment' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.FileSpec)){if("object"==typeof c)throw new TypeError("2nd input argument in function 'addFileAttachment' is of type '"+c.name+"'. Expected type 'FileSpec'. Function Signature: addFileAttachment(string, FileSpec).");
throw new TypeError("2nd input argument '"+c+"' in function 'addFileAttachment' is of type '"+typeof c+"'. Expected type 'FileSpec'. Function Signature: addFileAttachment(string, FileSpec).");}return b.messageHandler.sendWithPromise("PDFDoc.addFileAttachment",{doc:this.id,file_key:a,embedded_file:c.id},this.userPriority)};b.PDFDoc.prototype.getPageLabel=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPageLabel'. Expected 1 argument. Function Signature: getPageLabel(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'getPageLabel' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getPageLabel' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getPageLabel(number).");return b.messageHandler.sendWithPromise("PDFDoc.getPageLabel",{doc:this.id,page_num:a},this.userPriority).then(function(a){return"0"==a?
null:new b.PageLabel(a)})};b.PDFDoc.prototype.setPageLabel=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPageLabel'. Expected 2 arguments. Function Signature: setPageLabel(number, PageLabel)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPageLabel' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setPageLabel' is of type '"+
typeof a+"'. Expected type 'number'. Function Signature: setPageLabel(number, PageLabel).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setPageLabel' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.PageLabel)&&"PageLabel"!=c.name){if("object"==typeof c)throw new TypeError("2nd input argument in function 'setPageLabel' is of type '"+c.name+"'. Expected type 'PageLabel'. Function Signature: setPageLabel(number, PageLabel).");
throw new TypeError("2nd input argument '"+c+"' in function 'setPageLabel' is of type '"+typeof c+"'. Expected type 'PageLabel'. Function Signature: setPageLabel(number, PageLabel).");}if("undefined"!=typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'setPageLabel'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");var d=this;this.yieldFunction=
"PDFDoc.setPageLabel";return b.messageHandler.sendWithPromise("PDFDoc.setPageLabel",{doc:this.id,page_num:a,label:c},this.userPriority).then(function(a){d.yieldFunction=void 0;copyFunc(a.label,d)})};b.PDFDoc.prototype.removePageLabel=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'removePageLabel'. Expected 1 argument. Function Signature: removePageLabel(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'removePageLabel' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'removePageLabel' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: removePageLabel(number).");return b.messageHandler.sendWithPromise("PDFDoc.removePageLabel",{doc:this.id,page_num:a},this.userPriority)};b.PDFDoc.prototype.getStructTree=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getStructTree'. Expected 0 arguments. Function Signature: getStructTree()");
return b.messageHandler.sendWithPromise("PDFDoc.getStructTree",{doc:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.STree(a)})};b.PDFDoc.prototype.hasOC=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'hasOC'. Expected 0 arguments. Function Signature: hasOC()");return b.messageHandler.sendWithPromise("PDFDoc.hasOC",{doc:this.id},this.userPriority)};b.PDFDoc.prototype.getOCGs=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getOCGs'. Expected 0 arguments. Function Signature: getOCGs()");return b.messageHandler.sendWithPromise("PDFDoc.getOCGs",{doc:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.PDFDoc.prototype.getOCGConfig=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getOCGConfig'. Expected 0 arguments. Function Signature: getOCGConfig()");return b.messageHandler.sendWithPromise("PDFDoc.getOCGConfig",
{doc:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.OCGConfig(a)})};b.PDFDoc.prototype.createIndirectName=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createIndirectName'. Expected 1 argument. Function Signature: createIndirectName(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createIndirectName' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createIndirectName' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: createIndirectName(string).");return b.messageHandler.sendWithPromise("PDFDoc.createIndirectName",{doc:this.id,name:a},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.PDFDoc.prototype.createIndirectArray=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createIndirectArray'. Expected 0 arguments. Function Signature: createIndirectArray()");
return b.messageHandler.sendWithPromise("PDFDoc.createIndirectArray",{doc:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.PDFDoc.prototype.createIndirectBool=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createIndirectBool'. Expected 1 argument. Function Signature: createIndirectBool(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createIndirectBool' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createIndirectBool' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: createIndirectBool(boolean).");return b.messageHandler.sendWithPromise("PDFDoc.createIndirectBool",{doc:this.id,value:a},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.PDFDoc.prototype.createIndirectDict=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createIndirectDict'. Expected 0 arguments. Function Signature: createIndirectDict()");
return b.messageHandler.sendWithPromise("PDFDoc.createIndirectDict",{doc:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.PDFDoc.prototype.createIndirectNull=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createIndirectNull'. Expected 0 arguments. Function Signature: createIndirectNull()");return b.messageHandler.sendWithPromise("PDFDoc.createIndirectNull",{doc:this.id},this.userPriority).then(function(a){return"0"==
a?null:new b.Obj(a)})};b.PDFDoc.prototype.createIndirectNumber=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createIndirectNumber'. Expected 1 argument. Function Signature: createIndirectNumber(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createIndirectNumber' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'createIndirectNumber' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: createIndirectNumber(number).");return b.messageHandler.sendWithPromise("PDFDoc.createIndirectNumber",{doc:this.id,value:a},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.PDFDoc.prototype.createIndirectString=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createIndirectString'. Expected 2 arguments. Function Signature: createIndirectString(number, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createIndirectString' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createIndirectString' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: createIndirectString(number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createIndirectString' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createIndirectString' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: createIndirectString(number, number).");return b.messageHandler.sendWithPromise("PDFDoc.createIndirectString",{doc:this.id,value:a,buf_size:c},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.PDFDoc.prototype.createIndirectStringFromUString=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'createIndirectStringFromUString'. Expected 1 argument. Function Signature: createIndirectStringFromUString(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createIndirectStringFromUString' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createIndirectStringFromUString' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: createIndirectStringFromUString(string).");
return b.messageHandler.sendWithPromise("PDFDoc.createIndirectStringFromUString",{doc:this.id,str:a},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.PDFDoc.prototype.createIndirectStreamFromFilter=function(a,c){"undefined"===typeof c&&(c=new b.Filter("0"));if(1>arguments.length||2<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createIndirectStreamFromFilter'. Expected 1 to 2 arguments. Function Signature: createIndirectStreamFromFilter(FilterReader, Filter)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createIndirectStreamFromFilter' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.FilterReader)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createIndirectStreamFromFilter' is of type '"+a.name+"'. Expected type 'FilterReader'. Function Signature: createIndirectStreamFromFilter(FilterReader, Filter).");throw new TypeError("1st input argument '"+
a+"' in function 'createIndirectStreamFromFilter' is of type '"+typeof a+"'. Expected type 'FilterReader'. Function Signature: createIndirectStreamFromFilter(FilterReader, Filter).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createIndirectStreamFromFilter' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Filter)){if("object"==typeof c)throw new TypeError("2nd input argument in function 'createIndirectStreamFromFilter' is of type '"+
c.name+"'. Expected type 'Filter'. Function Signature: createIndirectStreamFromFilter(FilterReader, Filter).");throw new TypeError("2nd input argument '"+c+"' in function 'createIndirectStreamFromFilter' is of type '"+typeof c+"'. Expected type 'Filter'. Function Signature: createIndirectStreamFromFilter(FilterReader, Filter).");}var d=-1;if(0!=c.id){for(var e=createdObjects.length-1;0<=e;e--)if(createdObjects[e].id==c.id){d=e;break}if(-1!=d)for(createdObjects.splice(d,1),e=deallocStackCounter.length-
1;0<=e;e--)if(deallocStackCounter[e]>d)--deallocStackCounter[e];else break;else console.log("[WARNING] Object to remove ownership from was not found in memory deallocation list. Decallocating may cause errors.")}return b.messageHandler.sendWithPromise("PDFDoc.createIndirectStreamFromFilter",{doc:this.id,data:a.id,no_own_filter_chain:c.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.PDFDoc.prototype.createIndirectStream=function(a,c,d){"undefined"===typeof d&&(d=new b.Filter("0"));
if(2>arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createIndirectStream'. Expected 2 to 3 arguments. Function Signature: createIndirectStream(string, number, Filter)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createIndirectStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a&&null!==a)throw new TypeError("1st input argument '"+a+"' in function 'createIndirectStream' is of type '"+
typeof a+"'. Expected type 'string'. Function Signature: createIndirectStream(string, number, Filter).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createIndirectStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createIndirectStream' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: createIndirectStream(string, number, Filter).");
if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createIndirectStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(d instanceof b.Filter)){if("object"==typeof d)throw new TypeError("3rd input argument in function 'createIndirectStream' is of type '"+d.name+"'. Expected type 'Filter'. Function Signature: createIndirectStream(string, number, Filter).");throw new TypeError("3rd input argument '"+d+"' in function 'createIndirectStream' is of type '"+
typeof d+"'. Expected type 'Filter'. Function Signature: createIndirectStream(string, number, Filter).");}var e=-1;if(0!=d.id){for(var f=createdObjects.length-1;0<=f;f--)if(createdObjects[f].id==d.id){e=f;break}if(-1!=e)for(createdObjects.splice(e,1),f=deallocStackCounter.length-1;0<=f;f--)if(deallocStackCounter[f]>e)--deallocStackCounter[f];else break;else console.log("[WARNING] Object to remove ownership from was not found in memory deallocation list. Decallocating may cause errors.")}return b.messageHandler.sendWithPromise("PDFDoc.createIndirectStream",
{doc:this.id,data:a,data_size:c,no_own_filter_chain:d.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.PDFDoc.prototype.getSDFDoc=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSDFDoc'. Expected 0 arguments. Function Signature: getSDFDoc()");return b.messageHandler.sendWithPromise("PDFDoc.getSDFDoc",{doc:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.SDFDoc(a)})};b.PDFDoc.prototype.addHighlights=
function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'addHighlights'. Expected 1 argument. Function Signature: addHighlights(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'addHighlights' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'addHighlights' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: addHighlights(string).");
return b.messageHandler.sendWithPromise("PDFDoc.addHighlights",{doc:this.id,hilite:a},this.userPriority)};b.PDFDoc.prototype.isTagged=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isTagged'. Expected 0 arguments. Function Signature: isTagged()");return b.messageHandler.sendWithPromise("PDFDoc.isTagged",{doc:this.id},this.userPriority)};b.PDFDoc.prototype.hasSignatures=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'hasSignatures'. Expected 0 arguments. Function Signature: hasSignatures()");return b.messageHandler.sendWithPromise("PDFDoc.hasSignatures",{doc:this.id},this.userPriority)};b.PDFDoc.prototype.addSignatureHandler=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'addSignatureHandler'. Expected 1 argument. Function Signature: addSignatureHandler(SignatureHandler)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'addSignatureHandler' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.SignatureHandler)){if("object"==typeof a)throw new TypeError("1st input argument in function 'addSignatureHandler' is of type '"+a.name+"'. Expected type 'SignatureHandler'. Function Signature: addSignatureHandler(SignatureHandler).");throw new TypeError("1st input argument '"+a+"' in function 'addSignatureHandler' is of type '"+typeof a+"'. Expected type 'SignatureHandler'. Function Signature: addSignatureHandler(SignatureHandler).");}return b.messageHandler.sendWithPromise("PDFDoc.addSignatureHandler",
{doc:this.id,signature_handler:a.id},this.userPriority)};b.PDFDoc.prototype.addStdSignatureHandlerFromBuffer=function(a,c){a instanceof Array&&(a=new Float64Array(a));if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'addStdSignatureHandlerFromBuffer'. Expected 2 arguments. Function Signature: addStdSignatureHandlerFromBuffer(ArrayBuffer, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'addStdSignatureHandlerFromBuffer' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!h.isArrayBuffer(a.buffer)){if("object"==typeof a)throw new TypeError("1st input argument in function 'addStdSignatureHandlerFromBuffer' is of type '"+a.name+"'. Expected type 'ArrayBuffer'. Function Signature: addStdSignatureHandlerFromBuffer(ArrayBuffer, string).");throw new TypeError("1st input argument '"+a+"' in function 'addStdSignatureHandlerFromBuffer' is of type '"+typeof a+"'. Expected type 'ArrayBuffer'. Function Signature: addStdSignatureHandlerFromBuffer(ArrayBuffer, string).");}if(c instanceof
Promise)throw new TypeError("3rd input argument in function 'addStdSignatureHandlerFromBuffer' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof c)throw new TypeError("3rd input argument '"+c+"' in function 'addStdSignatureHandlerFromBuffer' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: addStdSignatureHandlerFromBuffer(ArrayBuffer, string).");return b.messageHandler.sendWithPromise("PDFDoc.addStdSignatureHandlerFromBuffer",
{doc:this.id,pkcs12_buffer:a.buffer,pkcs12_pass:c},this.userPriority)};b.PDFDoc.prototype.removeSignatureHandler=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'removeSignatureHandler'. Expected 1 argument. Function Signature: removeSignatureHandler(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'removeSignatureHandler' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'removeSignatureHandler' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: removeSignatureHandler(number).");return b.messageHandler.sendWithPromise("PDFDoc.removeSignatureHandler",{doc:this.id,signature_handler_id:a},this.userPriority)};b.PDFDoc.prototype.getSignatureHandler=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSignatureHandler'. Expected 1 argument. Function Signature: getSignatureHandler(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'getSignatureHandler' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getSignatureHandler' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getSignatureHandler(number).");return b.messageHandler.sendWithPromise("PDFDoc.getSignatureHandler",{doc:this.id,signature_handler_id:a},this.userPriority).then(function(a){return"0"==
a?null:new b.SignatureHandler(a)})};b.PDFDoc.prototype.generateThumbnails=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'generateThumbnails'. Expected 1 argument. Function Signature: generateThumbnails(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'generateThumbnails' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'generateThumbnails' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: generateThumbnails(number).");return b.messageHandler.sendWithPromise("PDFDoc.generateThumbnails",{doc:this.id,size:a},this.userPriority)};b.PDFDoc.prototype.appendVisualDiff=function(a,c,d){if(2>arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'appendVisualDiff'.  Expected 2 to 3 arguments. Function Signature: appendVisualDiff(Page, Page, OptionBase)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'appendVisualDiff' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Page)){if("object"==typeof a)throw new TypeError("1st input argument in function 'appendVisualDiff' is of type '"+a.name+"'. Expected type 'Page'. Function Signature: appendVisualDiff(Page, Page, OptionBase).");throw new TypeError("1st input argument '"+a+"' in function 'appendVisualDiff' is of type '"+
typeof a+"'. Expected type 'Page'. Function Signature: appendVisualDiff(Page, Page, OptionBase).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'appendVisualDiff' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Page)){if("object"==typeof c)throw new TypeError("2nd input argument in function 'appendVisualDiff' is of type '"+c.name+"'. Expected type 'Page'. Function Signature: appendVisualDiff(Page, Page, OptionBase).");
throw new TypeError("2nd input argument '"+c+"' in function 'appendVisualDiff' is of type '"+typeof c+"'. Expected type 'Page'. Function Signature: appendVisualDiff(Page, Page, OptionBase).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'appendVisualDiff' is a Promise object. Promises require a 'yield' statement before being accessed.");if(d)if("object"===typeof d)if("function"===typeof d.getJsonString)d=d.getJsonString();else throw new TypeError("3rd input argument in function 'appendVisualDiff' is an 'oject' which is expected to have the 'getJsonString' function");
else throw new TypeError("3rd input argument in function 'appendVisualDiff' is of type '"+d.name+"'. Expected type 'object'. Function Signature: appendVisualDiff(Page, Page, OptionBase).");else d="{}";if("undefined"!=typeof d.yieldFunction)throw Error("Function '"+d.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 3rd input argument in function 'appendVisualDiff'. Perhaps a yield statement is required for '"+d.yieldFunction+"'?");var e=this;
this.yieldFunction="PDFDoc.appendVisualDiff";return b.messageHandler.sendWithPromise("PDFDoc.appendVisualDiff",{doc:this.id,p1:a.id,p2:c.id,opts:d},this.userPriority).then(function(a){e.yieldFunction=void 0;copyFunc(a.opts,e)})};b.PDFDoc.prototype.getGeometryCollectionForPage=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getGeometryCollectionForPage'. Expected 1 argument. Function Signature: getGeometryCollectionForPage(number)");if(a instanceof
Promise)throw new TypeError("1st input argument in function 'getGeometryCollectionForPage' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getGeometryCollectionForPage' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getGeometryCollectionForPage(number).");return b.messageHandler.sendWithPromise("PDFDoc.getGeometryCollectionForPage",{in_pdfdoc:this.id,page_num:a},
this.userPriority).then(function(a){if("0"==a)return null;a=new b.GeometryCollection(a);createdObjects.push({name:a.name,id:a.id});return a})};b.PDFDocInfo.prototype.getTitle=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTitle'. Expected 0 arguments. Function Signature: getTitle()");return b.messageHandler.sendWithPromise("PDFDocInfo.getTitle",{info:this.id},this.userPriority)};b.PDFDocInfo.prototype.getTitleObj=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getTitleObj'. Expected 0 arguments. Function Signature: getTitleObj()");return b.messageHandler.sendWithPromise("PDFDocInfo.getTitleObj",{info:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.PDFDocInfo.prototype.setTitle=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setTitle'. Expected 1 argument. Function Signature: setTitle(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setTitle' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setTitle' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setTitle(string).");return b.messageHandler.sendWithPromise("PDFDocInfo.setTitle",{info:this.id,title:a},this.userPriority)};b.PDFDocInfo.prototype.getAuthor=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getAuthor'. Expected 0 arguments. Function Signature: getAuthor()");return b.messageHandler.sendWithPromise("PDFDocInfo.getAuthor",
{info:this.id},this.userPriority)};b.PDFDocInfo.prototype.getAuthorObj=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getAuthorObj'. Expected 0 arguments. Function Signature: getAuthorObj()");return b.messageHandler.sendWithPromise("PDFDocInfo.getAuthorObj",{info:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.PDFDocInfo.prototype.setAuthor=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'setAuthor'. Expected 1 argument. Function Signature: setAuthor(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setAuthor' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setAuthor' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setAuthor(string).");return b.messageHandler.sendWithPromise("PDFDocInfo.setAuthor",
{info:this.id,author:a},this.userPriority)};b.PDFDocInfo.prototype.getSubject=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSubject'. Expected 0 arguments. Function Signature: getSubject()");return b.messageHandler.sendWithPromise("PDFDocInfo.getSubject",{info:this.id},this.userPriority)};b.PDFDocInfo.prototype.getSubjectObj=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSubjectObj'. Expected 0 arguments. Function Signature: getSubjectObj()");
return b.messageHandler.sendWithPromise("PDFDocInfo.getSubjectObj",{info:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.PDFDocInfo.prototype.setSubject=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setSubject'. Expected 1 argument. Function Signature: setSubject(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setSubject' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setSubject' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setSubject(string).");return b.messageHandler.sendWithPromise("PDFDocInfo.setSubject",{info:this.id,subject:a},this.userPriority)};b.PDFDocInfo.prototype.getKeywords=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getKeywords'. Expected 0 arguments. Function Signature: getKeywords()");
return b.messageHandler.sendWithPromise("PDFDocInfo.getKeywords",{info:this.id},this.userPriority)};b.PDFDocInfo.prototype.getKeywordsObj=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getKeywordsObj'. Expected 0 arguments. Function Signature: getKeywordsObj()");return b.messageHandler.sendWithPromise("PDFDocInfo.getKeywordsObj",{info:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.PDFDocInfo.prototype.setKeywords=
function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setKeywords'. Expected 1 argument. Function Signature: setKeywords(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setKeywords' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setKeywords' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setKeywords(string).");
return b.messageHandler.sendWithPromise("PDFDocInfo.setKeywords",{info:this.id,keywords:a},this.userPriority)};b.PDFDocInfo.prototype.getCreator=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getCreator'. Expected 0 arguments. Function Signature: getCreator()");return b.messageHandler.sendWithPromise("PDFDocInfo.getCreator",{info:this.id},this.userPriority)};b.PDFDocInfo.prototype.getCreatorObj=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getCreatorObj'. Expected 0 arguments. Function Signature: getCreatorObj()");return b.messageHandler.sendWithPromise("PDFDocInfo.getCreatorObj",{info:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.PDFDocInfo.prototype.setCreator=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setCreator'. Expected 1 argument. Function Signature: setCreator(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setCreator' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setCreator' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setCreator(string).");return b.messageHandler.sendWithPromise("PDFDocInfo.setCreator",{info:this.id,creator:a},this.userPriority)};b.PDFDocInfo.prototype.getProducer=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getProducer'. Expected 0 arguments. Function Signature: getProducer()");
return b.messageHandler.sendWithPromise("PDFDocInfo.getProducer",{info:this.id},this.userPriority)};b.PDFDocInfo.prototype.getProducerObj=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getProducerObj'. Expected 0 arguments. Function Signature: getProducerObj()");return b.messageHandler.sendWithPromise("PDFDocInfo.getProducerObj",{info:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.PDFDocInfo.prototype.setProducer=
function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setProducer'. Expected 1 argument. Function Signature: setProducer(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setProducer' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setProducer' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setProducer(string).");
return b.messageHandler.sendWithPromise("PDFDocInfo.setProducer",{info:this.id,producer:a},this.userPriority)};b.PDFDocInfo.prototype.getCreationDate=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getCreationDate'. Expected 0 arguments. Function Signature: getCreationDate()");return b.messageHandler.sendWithPromise("PDFDocInfo.getCreationDate",{info:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Date(a)})};b.PDFDocInfo.prototype.setCreationDate=
function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setCreationDate'. Expected 1 argument. Function Signature: setCreationDate(Date)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setCreationDate' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Date)&&"Date"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'setCreationDate' is of type '"+
a.name+"'. Expected type 'Date'. Function Signature: setCreationDate(Date).");throw new TypeError("1st input argument '"+a+"' in function 'setCreationDate' is of type '"+typeof a+"'. Expected type 'Date'. Function Signature: setCreationDate(Date).");}if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setCreationDate'. Perhaps a yield statement is required for '"+
a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("PDFDocInfo.setCreationDate",{info:this.id,creation_date:a},this.userPriority)};b.PDFDocInfo.prototype.getModDate=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getModDate'. Expected 0 arguments. Function Signature: getModDate()");return b.messageHandler.sendWithPromise("PDFDocInfo.getModDate",{info:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Date(a)})};
b.PDFDocInfo.prototype.setModDate=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setModDate'. Expected 1 argument. Function Signature: setModDate(Date)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setModDate' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Date)&&"Date"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'setModDate' is of type '"+
a.name+"'. Expected type 'Date'. Function Signature: setModDate(Date).");throw new TypeError("1st input argument '"+a+"' in function 'setModDate' is of type '"+typeof a+"'. Expected type 'Date'. Function Signature: setModDate(Date).");}if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setModDate'. Perhaps a yield statement is required for '"+
a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("PDFDocInfo.setModDate",{info:this.id,mod_date:a},this.userPriority)};b.PDFDocInfo.prototype.getSDFObj=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSDFObj'. Expected 0 arguments. Function Signature: getSDFObj()");return b.messageHandler.sendWithPromise("PDFDocInfo.getSDFObj",{info:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.PDFDocInfo.create=
function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 1 argument. Function Signature: create(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: create(Obj).");
throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: create(Obj).");}return b.messageHandler.sendWithPromise("pdfDocInfoCreate",{tr:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.PDFDocInfo(a)})};b.PDFDocInfo.prototype.copy=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'copy'. Expected 0 arguments. Function Signature: copy()");return b.messageHandler.sendWithPromise("PDFDocInfo.copy",
{info:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.PDFDocInfo(a)})};b.PDFDocViewPrefs.prototype.setInitialPage=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setInitialPage'. Expected 1 argument. Function Signature: setInitialPage(Destination)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setInitialPage' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Destination)){if("object"==typeof a)throw new TypeError("1st input argument in function 'setInitialPage' is of type '"+a.name+"'. Expected type 'Destination'. Function Signature: setInitialPage(Destination).");throw new TypeError("1st input argument '"+a+"' in function 'setInitialPage' is of type '"+typeof a+"'. Expected type 'Destination'. Function Signature: setInitialPage(Destination).");}return b.messageHandler.sendWithPromise("PDFDocViewPrefs.setInitialPage",{p:this.id,dest:a.id},
this.userPriority)};b.PDFDocViewPrefs.prototype.setPageMode=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPageMode'. Expected 1 argument. Function Signature: setPageMode(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPageMode' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setPageMode' is of type '"+
typeof a+"'. Expected type 'number'. Function Signature: setPageMode(number).");return b.messageHandler.sendWithPromise("PDFDocViewPrefs.setPageMode",{p:this.id,mode:a},this.userPriority)};b.PDFDocViewPrefs.prototype.getPageMode=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPageMode'. Expected 0 arguments. Function Signature: getPageMode()");return b.messageHandler.sendWithPromise("PDFDocViewPrefs.getPageMode",{p:this.id},this.userPriority)};
b.PDFDocViewPrefs.prototype.setLayoutMode=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setLayoutMode'. Expected 1 argument. Function Signature: setLayoutMode(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setLayoutMode' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setLayoutMode' is of type '"+
typeof a+"'. Expected type 'number'. Function Signature: setLayoutMode(number).");return b.messageHandler.sendWithPromise("PDFDocViewPrefs.setLayoutMode",{p:this.id,mode:a},this.userPriority)};b.PDFDocViewPrefs.prototype.getLayoutMode=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getLayoutMode'. Expected 0 arguments. Function Signature: getLayoutMode()");return b.messageHandler.sendWithPromise("PDFDocViewPrefs.getLayoutMode",{p:this.id},
this.userPriority)};b.PDFDocViewPrefs.prototype.setPref=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPref'. Expected 2 arguments. Function Signature: setPref(number, boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPref' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setPref' is of type '"+
typeof a+"'. Expected type 'number'. Function Signature: setPref(number, boolean).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setPref' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setPref' is of type '"+typeof c+"'. Expected type 'boolean'. Function Signature: setPref(number, boolean).");return b.messageHandler.sendWithPromise("PDFDocViewPrefs.setPref",
{p:this.id,pref:a,value:c},this.userPriority)};b.PDFDocViewPrefs.prototype.getPref=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPref'. Expected 1 argument. Function Signature: getPref(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getPref' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getPref' is of type '"+
typeof a+"'. Expected type 'number'. Function Signature: getPref(number).");return b.messageHandler.sendWithPromise("PDFDocViewPrefs.getPref",{p:this.id,pref:a},this.userPriority)};b.PDFDocViewPrefs.prototype.setNonFullScreenPageMode=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setNonFullScreenPageMode'. Expected 1 argument. Function Signature: setNonFullScreenPageMode(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setNonFullScreenPageMode' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setNonFullScreenPageMode' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setNonFullScreenPageMode(number).");return b.messageHandler.sendWithPromise("PDFDocViewPrefs.setNonFullScreenPageMode",{p:this.id,mode:a},this.userPriority)};b.PDFDocViewPrefs.prototype.getNonFullScreenPageMode=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getNonFullScreenPageMode'. Expected 0 arguments. Function Signature: getNonFullScreenPageMode()");
return b.messageHandler.sendWithPromise("PDFDocViewPrefs.getNonFullScreenPageMode",{p:this.id},this.userPriority)};b.PDFDocViewPrefs.prototype.setDirection=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setDirection'. Expected 1 argument. Function Signature: setDirection(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setDirection' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setDirection' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setDirection(boolean).");return b.messageHandler.sendWithPromise("PDFDocViewPrefs.setDirection",{p:this.id,left_to_right:a},this.userPriority)};b.PDFDocViewPrefs.prototype.getDirection=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getDirection'. Expected 0 arguments. Function Signature: getDirection()");
return b.messageHandler.sendWithPromise("PDFDocViewPrefs.getDirection",{p:this.id},this.userPriority)};b.PDFDocViewPrefs.prototype.setViewArea=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setViewArea'. Expected 1 argument. Function Signature: setViewArea(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setViewArea' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=
typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setViewArea' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setViewArea(number).");return b.messageHandler.sendWithPromise("PDFDocViewPrefs.setViewArea",{p:this.id,box:a},this.userPriority)};b.PDFDocViewPrefs.prototype.getViewArea=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getViewArea'. Expected 0 arguments. Function Signature: getViewArea()");
return b.messageHandler.sendWithPromise("PDFDocViewPrefs.getViewArea",{p:this.id},this.userPriority)};b.PDFDocViewPrefs.prototype.setViewClip=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setViewClip'. Expected 1 argument. Function Signature: setViewClip(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setViewClip' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=
typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setViewClip' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setViewClip(number).");return b.messageHandler.sendWithPromise("PDFDocViewPrefs.setViewClip",{p:this.id,box:a},this.userPriority)};b.PDFDocViewPrefs.prototype.getViewClip=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getViewClip'. Expected 0 arguments. Function Signature: getViewClip()");
return b.messageHandler.sendWithPromise("PDFDocViewPrefs.getViewClip",{p:this.id},this.userPriority)};b.PDFDocViewPrefs.prototype.setPrintArea=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPrintArea'. Expected 1 argument. Function Signature: setPrintArea(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPrintArea' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setPrintArea' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setPrintArea(number).");return b.messageHandler.sendWithPromise("PDFDocViewPrefs.setPrintArea",{p:this.id,box:a},this.userPriority)};b.PDFDocViewPrefs.prototype.getPrintArea=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPrintArea'. Expected 0 arguments. Function Signature: getPrintArea()");
return b.messageHandler.sendWithPromise("PDFDocViewPrefs.getPrintArea",{p:this.id},this.userPriority)};b.PDFDocViewPrefs.prototype.setPrintClip=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPrintClip'. Expected 1 argument. Function Signature: setPrintClip(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPrintClip' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setPrintClip' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setPrintClip(number).");return b.messageHandler.sendWithPromise("PDFDocViewPrefs.setPrintClip",{p:this.id,box:a},this.userPriority)};b.PDFDocViewPrefs.prototype.getPrintClip=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPrintClip'. Expected 0 arguments. Function Signature: getPrintClip()");
return b.messageHandler.sendWithPromise("PDFDocViewPrefs.getPrintClip",{p:this.id},this.userPriority)};b.PDFDocViewPrefs.prototype.getSDFObj=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSDFObj'. Expected 0 arguments. Function Signature: getSDFObj()");return b.messageHandler.sendWithPromise("PDFDocViewPrefs.getSDFObj",{p:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.PDFDocViewPrefs.create=function(a){if(1!=
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 1 argument. Function Signature: create(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: create(Obj).");
throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: create(Obj).");}return b.messageHandler.sendWithPromise("pdfDocViewPrefsCreate",{tr:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.PDFDocViewPrefs(a)})};b.PDFDocViewPrefs.prototype.copy=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'copy'. Expected 0 arguments. Function Signature: copy()");
return b.messageHandler.sendWithPromise("PDFDocViewPrefs.copy",{prefs:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.PDFDocViewPrefs(a)})};b.PDFRasterizer.create=function(a){"undefined"===typeof a&&(a=b.PDFRasterizer.Type.e_BuiltIn);if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected at most 1 arguments. Function Signature: create(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: create(number).");return b.messageHandler.sendWithPromise("pdfRasterizerCreate",{type:a},this.userPriority).then(function(a){if("0"==a)return null;a=new b.PDFRasterizer(a);createdObjects.push({name:a.name,id:a.id});return a})};b.PDFRasterizer.prototype.destroy=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");
for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("PDFRasterizer.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.PDFRasterizer.prototype.getChunkRendererPath=
function(a,c,d,e,f,g,k,l,h){if(9!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getChunkRendererPath'. Expected 9 arguments. Function Signature: getChunkRendererPath(Page, string, number, number, boolean, Matrix2D, Rect, Rect, boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getChunkRendererPath' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Page)){if("object"==
typeof a)throw new TypeError("1st input argument in function 'getChunkRendererPath' is of type '"+a.name+"'. Expected type 'Page'. Function Signature: getChunkRendererPath(Page, string, number, number, boolean, Matrix2D, Rect, Rect, boolean).");throw new TypeError("1st input argument '"+a+"' in function 'getChunkRendererPath' is of type '"+typeof a+"'. Expected type 'Page'. Function Signature: getChunkRendererPath(Page, string, number, number, boolean, Matrix2D, Rect, Rect, boolean).");}if(c instanceof
Promise)throw new TypeError("2nd input argument in function 'getChunkRendererPath' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'getChunkRendererPath' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: getChunkRendererPath(Page, string, number, number, boolean, Matrix2D, Rect, Rect, boolean).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'getChunkRendererPath' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'getChunkRendererPath' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: getChunkRendererPath(Page, string, number, number, boolean, Matrix2D, Rect, Rect, boolean).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'getChunkRendererPath' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof e)throw new TypeError("4th input argument '"+
e+"' in function 'getChunkRendererPath' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: getChunkRendererPath(Page, string, number, number, boolean, Matrix2D, Rect, Rect, boolean).");if(f instanceof Promise)throw new TypeError("5th input argument in function 'getChunkRendererPath' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof f)throw new TypeError("5th input argument '"+f+"' in function 'getChunkRendererPath' is of type '"+
typeof f+"'. Expected type 'boolean'. Function Signature: getChunkRendererPath(Page, string, number, number, boolean, Matrix2D, Rect, Rect, boolean).");if(g instanceof Promise)throw new TypeError("6th input argument in function 'getChunkRendererPath' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(g instanceof b.Matrix2D)&&"Matrix2D"!=g.name){if("object"==typeof g)throw new TypeError("6th input argument in function 'getChunkRendererPath' is of type '"+g.name+
"'. Expected type 'Matrix2D'. Function Signature: getChunkRendererPath(Page, string, number, number, boolean, Matrix2D, Rect, Rect, boolean).");throw new TypeError("6th input argument '"+g+"' in function 'getChunkRendererPath' is of type '"+typeof g+"'. Expected type 'Matrix2D'. Function Signature: getChunkRendererPath(Page, string, number, number, boolean, Matrix2D, Rect, Rect, boolean).");}if(k instanceof Promise)throw new TypeError("7th input argument in function 'getChunkRendererPath' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(k instanceof b.Rect)&&"Rect"!=k.name){if("object"==typeof k)throw new TypeError("7th input argument in function 'getChunkRendererPath' is of type '"+k.name+"'. Expected type 'Rect'. Function Signature: getChunkRendererPath(Page, string, number, number, boolean, Matrix2D, Rect, Rect, boolean).");throw new TypeError("7th input argument '"+k+"' in function 'getChunkRendererPath' is of type '"+typeof k+"'. Expected type 'Rect'. Function Signature: getChunkRendererPath(Page, string, number, number, boolean, Matrix2D, Rect, Rect, boolean).");
}if(l instanceof Promise)throw new TypeError("8th input argument in function 'getChunkRendererPath' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(l instanceof b.Rect)&&"Rect"!=l.name){if("object"==typeof l)throw new TypeError("8th input argument in function 'getChunkRendererPath' is of type '"+l.name+"'. Expected type 'Rect'. Function Signature: getChunkRendererPath(Page, string, number, number, boolean, Matrix2D, Rect, Rect, boolean).");throw new TypeError("8th input argument '"+
l+"' in function 'getChunkRendererPath' is of type '"+typeof l+"'. Expected type 'Rect'. Function Signature: getChunkRendererPath(Page, string, number, number, boolean, Matrix2D, Rect, Rect, boolean).");}if(h instanceof Promise)throw new TypeError("9th input argument in function 'getChunkRendererPath' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof h)throw new TypeError("9th input argument '"+h+"' in function 'getChunkRendererPath' is of type '"+
typeof h+"'. Expected type 'boolean'. Function Signature: getChunkRendererPath(Page, string, number, number, boolean, Matrix2D, Rect, Rect, boolean).");if("undefined"!=typeof g.yieldFunction)throw Error("Function '"+g.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 6th input argument in function 'getChunkRendererPath'. Perhaps a yield statement is required for '"+g.yieldFunction+"'?");if("undefined"!=typeof k.yieldFunction)throw Error("Function '"+
k.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 7th input argument in function 'getChunkRendererPath'. Perhaps a yield statement is required for '"+k.yieldFunction+"'?");if("undefined"!=typeof l.yieldFunction)throw Error("Function '"+l.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 8th input argument in function 'getChunkRendererPath'. Perhaps a yield statement is required for '"+
l.yieldFunction+"'?");return b.messageHandler.sendWithPromise("PDFRasterizer.getChunkRendererPath",{r:this.id,page:a.id,file_path:c,width:d,height:e,demult:f,device_mtx:g,clip:k,scrl_clp_regions:l,cancel:h},this.userPriority).then(function(a){return"0"==a?null:new b.ChunkRenderer(a)})};b.PDFRasterizer.prototype.setDrawAnnotations=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setDrawAnnotations'. Expected 1 argument. Function Signature: setDrawAnnotations(boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setDrawAnnotations' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setDrawAnnotations' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setDrawAnnotations(boolean).");return b.messageHandler.sendWithPromise("PDFRasterizer.setDrawAnnotations",{r:this.id,render_annots:a},this.userPriority)};
b.PDFRasterizer.prototype.setHighlightFields=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setHighlightFields'. Expected 1 argument. Function Signature: setHighlightFields(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setHighlightFields' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setHighlightFields' is of type '"+
typeof a+"'. Expected type 'boolean'. Function Signature: setHighlightFields(boolean).");return b.messageHandler.sendWithPromise("PDFRasterizer.setHighlightFields",{r:this.id,highlight:a},this.userPriority)};b.PDFRasterizer.prototype.setAntiAliasing=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setAntiAliasing'. Expected 1 argument. Function Signature: setAntiAliasing(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setAntiAliasing' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setAntiAliasing' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setAntiAliasing(boolean).");return b.messageHandler.sendWithPromise("PDFRasterizer.setAntiAliasing",{r:this.id,enable_aa:a},this.userPriority)};b.PDFRasterizer.prototype.setPathHinting=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPathHinting'. Expected 1 argument. Function Signature: setPathHinting(boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPathHinting' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setPathHinting' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setPathHinting(boolean).");return b.messageHandler.sendWithPromise("PDFRasterizer.setPathHinting",{r:this.id,enable_hinting:a},this.userPriority)};b.PDFRasterizer.prototype.setThinLineAdjustment=
function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setThinLineAdjustment'. Expected 2 arguments. Function Signature: setThinLineAdjustment(boolean, boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setThinLineAdjustment' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setThinLineAdjustment' is of type '"+
typeof a+"'. Expected type 'boolean'. Function Signature: setThinLineAdjustment(boolean, boolean).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setThinLineAdjustment' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setThinLineAdjustment' is of type '"+typeof c+"'. Expected type 'boolean'. Function Signature: setThinLineAdjustment(boolean, boolean).");
return b.messageHandler.sendWithPromise("PDFRasterizer.setThinLineAdjustment",{r:this.id,grid_fit:a,stroke_adjust:c},this.userPriority)};b.PDFRasterizer.prototype.setGamma=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setGamma'. Expected 1 argument. Function Signature: setGamma(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setGamma' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setGamma' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setGamma(number).");return b.messageHandler.sendWithPromise("PDFRasterizer.setGamma",{r:this.id,expgamma:a},this.userPriority)};b.PDFRasterizer.prototype.setOCGContext=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setOCGContext'. Expected 1 argument. Function Signature: setOCGContext(OCGContext)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setOCGContext' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.OCGContext)){if("object"==typeof a)throw new TypeError("1st input argument in function 'setOCGContext' is of type '"+a.name+"'. Expected type 'OCGContext'. Function Signature: setOCGContext(OCGContext).");throw new TypeError("1st input argument '"+a+"' in function 'setOCGContext' is of type '"+typeof a+"'. Expected type 'OCGContext'. Function Signature: setOCGContext(OCGContext).");
}return b.messageHandler.sendWithPromise("PDFRasterizer.setOCGContext",{r:this.id,ctx:a.id},this.userPriority)};b.PDFRasterizer.prototype.setPrintMode=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPrintMode'. Expected 1 argument. Function Signature: setPrintMode(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPrintMode' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setPrintMode' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setPrintMode(boolean).");return b.messageHandler.sendWithPromise("PDFRasterizer.setPrintMode",{r:this.id,is_printing:a},this.userPriority)};b.PDFRasterizer.prototype.setImageSmoothing=function(a,c){"undefined"===typeof a&&(a=!0);"undefined"===typeof c&&(c=!1);if(2<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setImageSmoothing'. Expected at most 2 arguments. Function Signature: setImageSmoothing(boolean, boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setImageSmoothing' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setImageSmoothing' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setImageSmoothing(boolean, boolean).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setImageSmoothing' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setImageSmoothing' is of type '"+typeof c+"'. Expected type 'boolean'. Function Signature: setImageSmoothing(boolean, boolean).");return b.messageHandler.sendWithPromise("PDFRasterizer.setImageSmoothing",{r:this.id,smoothing_enabled:a,hq_image_resampling:c},this.userPriority)};b.PDFRasterizer.prototype.setOverprint=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setOverprint'. Expected 1 argument. Function Signature: setOverprint(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setOverprint' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setOverprint' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setOverprint(number).");return b.messageHandler.sendWithPromise("PDFRasterizer.setOverprint",{r:this.id,op:a},this.userPriority)};b.PDFRasterizer.prototype.setCaching=
function(a){"undefined"===typeof a&&(a=!0);if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setCaching'. Expected at most 1 arguments. Function Signature: setCaching(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setCaching' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setCaching' is of type '"+
typeof a+"'. Expected type 'boolean'. Function Signature: setCaching(boolean).");return b.messageHandler.sendWithPromise("PDFRasterizer.setCaching",{r:this.id,enabled:a},this.userPriority)};b.PDFDraw.prototype.setOCGContext=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setOCGContext'. Expected 1 argument. Function Signature: setOCGContext(OCGContext)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setOCGContext' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.OCGContext)){if("object"==typeof a)throw new TypeError("1st input argument in function 'setOCGContext' is of type '"+a.name+"'. Expected type 'OCGContext'. Function Signature: setOCGContext(OCGContext).");throw new TypeError("1st input argument '"+a+"' in function 'setOCGContext' is of type '"+typeof a+"'. Expected type 'OCGContext'. Function Signature: setOCGContext(OCGContext).");}return b.messageHandler.sendWithPromise("PDFDraw.setOCGContext",{r:this.id,ctx:a.id},this.userPriority)};
b.PDFRasterizer.prototype.setAnnotationState=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setAnnotationState'. Expected 2 arguments. Function Signature: setAnnotationState(Annot, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setAnnotationState' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Annot)){if("object"==typeof a)throw new TypeError("1st input argument in function 'setAnnotationState' is of type '"+
a.name+"'. Expected type 'Annot'. Function Signature: setAnnotationState(Annot, number).");throw new TypeError("1st input argument '"+a+"' in function 'setAnnotationState' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: setAnnotationState(Annot, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setAnnotationState' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+
c+"' in function 'setAnnotationState' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: setAnnotationState(Annot, number).");return b.messageHandler.sendWithPromise("PDFRasterizer.setAnnotationState",{r:this.id,annot:a.id,new_view_state:c},this.userPriority)};b.PDFRasterizer.prototype.setRasterizerType=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setRasterizerType'. Expected 1 argument. Function Signature: setRasterizerType(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setRasterizerType' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setRasterizerType' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setRasterizerType(number).");return b.messageHandler.sendWithPromise("PDFRasterizer.setRasterizerType",{r:this.id,type:a},this.userPriority)};b.PDFRasterizer.prototype.getRasterizerType=
function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getRasterizerType'. Expected 0 arguments. Function Signature: getRasterizerType()");return b.messageHandler.sendWithPromise("PDFRasterizer.getRasterizerType",{r:this.id},this.userPriority)};b.PDFRasterizer.prototype.setColorPostProcessMode=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setColorPostProcessMode'. Expected 1 argument. Function Signature: setColorPostProcessMode(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setColorPostProcessMode' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setColorPostProcessMode' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setColorPostProcessMode(number).");return b.messageHandler.sendWithPromise("PDFRasterizer.setColorPostProcessMode",{r:this.id,mode:a},this.userPriority)};
b.PDFRasterizer.prototype.getColorPostProcessMode=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getColorPostProcessMode'. Expected 0 arguments. Function Signature: getColorPostProcessMode()");return b.messageHandler.sendWithPromise("PDFRasterizer.getColorPostProcessMode",{r:this.id},this.userPriority)};b.PDFRasterizer.prototype.enableDisplayListCaching=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'enableDisplayListCaching'. Expected 1 argument. Function Signature: enableDisplayListCaching(boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'enableDisplayListCaching' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'enableDisplayListCaching' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: enableDisplayListCaching(boolean).");return b.messageHandler.sendWithPromise("PDFRasterizer.enableDisplayListCaching",{r:this.id,enabled:a},
this.userPriority)};b.PDFRasterizer.prototype.updateBuffer=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'updateBuffer'. Expected 0 arguments. Function Signature: updateBuffer()");return b.messageHandler.sendWithPromise("PDFRasterizer.updateBuffer",{r:this.id},this.userPriority)};b.PDFRasterizer.prototype.rasterizeAnnot=function(a,c,d,e,f){if(5!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'rasterizeAnnot'. Expected 5 arguments. Function Signature: rasterizeAnnot(Annot, Page, Matrix2D, boolean, boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'rasterizeAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Annot)){if("object"==typeof a)throw new TypeError("1st input argument in function 'rasterizeAnnot' is of type '"+a.name+"'. Expected type 'Annot'. Function Signature: rasterizeAnnot(Annot, Page, Matrix2D, boolean, boolean).");throw new TypeError("1st input argument '"+a+"' in function 'rasterizeAnnot' is of type '"+
typeof a+"'. Expected type 'Annot'. Function Signature: rasterizeAnnot(Annot, Page, Matrix2D, boolean, boolean).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'rasterizeAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Page)){if("object"==typeof c)throw new TypeError("2nd input argument in function 'rasterizeAnnot' is of type '"+c.name+"'. Expected type 'Page'. Function Signature: rasterizeAnnot(Annot, Page, Matrix2D, boolean, boolean).");
throw new TypeError("2nd input argument '"+c+"' in function 'rasterizeAnnot' is of type '"+typeof c+"'. Expected type 'Page'. Function Signature: rasterizeAnnot(Annot, Page, Matrix2D, boolean, boolean).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'rasterizeAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(d instanceof b.Matrix2D)&&"Matrix2D"!=d.name){if("object"==typeof d)throw new TypeError("3rd input argument in function 'rasterizeAnnot' is of type '"+
d.name+"'. Expected type 'Matrix2D'. Function Signature: rasterizeAnnot(Annot, Page, Matrix2D, boolean, boolean).");throw new TypeError("3rd input argument '"+d+"' in function 'rasterizeAnnot' is of type '"+typeof d+"'. Expected type 'Matrix2D'. Function Signature: rasterizeAnnot(Annot, Page, Matrix2D, boolean, boolean).");}if(e instanceof Promise)throw new TypeError("4th input argument in function 'rasterizeAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!=typeof e)throw new TypeError("4th input argument '"+e+"' in function 'rasterizeAnnot' is of type '"+typeof e+"'. Expected type 'boolean'. Function Signature: rasterizeAnnot(Annot, Page, Matrix2D, boolean, boolean).");if(f instanceof Promise)throw new TypeError("5th input argument in function 'rasterizeAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof f)throw new TypeError("5th input argument '"+f+"' in function 'rasterizeAnnot' is of type '"+
typeof f+"'. Expected type 'boolean'. Function Signature: rasterizeAnnot(Annot, Page, Matrix2D, boolean, boolean).");if("undefined"!=typeof d.yieldFunction)throw Error("Function '"+d.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 3rd input argument in function 'rasterizeAnnot'. Perhaps a yield statement is required for '"+d.yieldFunction+"'?");return b.messageHandler.sendWithPromise("PDFRasterizer.rasterizeAnnot",{r:this.id,annot:a.id,
page:c.id,device_mtx:d,demult:e,cancel:f},this.userPriority).then(function(a){return"0"==a?null:new b.OwnedBitmap(a)})};b.PDFRasterizer.prototype.rasterizeSeparations=function(a,c,d,e,f,g){if(6!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'rasterizeSeparations'. Expected 6 arguments. Function Signature: rasterizeSeparations(Page, number, number, Matrix2D, Rect, boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'rasterizeSeparations' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Page)){if("object"==typeof a)throw new TypeError("1st input argument in function 'rasterizeSeparations' is of type '"+a.name+"'. Expected type 'Page'. Function Signature: rasterizeSeparations(Page, number, number, Matrix2D, Rect, boolean).");throw new TypeError("1st input argument '"+a+"' in function 'rasterizeSeparations' is of type '"+typeof a+"'. Expected type 'Page'. Function Signature: rasterizeSeparations(Page, number, number, Matrix2D, Rect, boolean).");}if(c instanceof
Promise)throw new TypeError("2nd input argument in function 'rasterizeSeparations' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'rasterizeSeparations' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: rasterizeSeparations(Page, number, number, Matrix2D, Rect, boolean).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'rasterizeSeparations' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'rasterizeSeparations' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: rasterizeSeparations(Page, number, number, Matrix2D, Rect, boolean).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'rasterizeSeparations' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(e instanceof b.Matrix2D)&&"Matrix2D"!=e.name){if("object"==typeof e)throw new TypeError("4th input argument in function 'rasterizeSeparations' is of type '"+
e.name+"'. Expected type 'Matrix2D'. Function Signature: rasterizeSeparations(Page, number, number, Matrix2D, Rect, boolean).");throw new TypeError("4th input argument '"+e+"' in function 'rasterizeSeparations' is of type '"+typeof e+"'. Expected type 'Matrix2D'. Function Signature: rasterizeSeparations(Page, number, number, Matrix2D, Rect, boolean).");}if(f instanceof Promise)throw new TypeError("5th input argument in function 'rasterizeSeparations' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(f instanceof b.Rect)&&"Rect"!=f.name){if("object"==typeof f)throw new TypeError("5th input argument in function 'rasterizeSeparations' is of type '"+f.name+"'. Expected type 'Rect'. Function Signature: rasterizeSeparations(Page, number, number, Matrix2D, Rect, boolean).");throw new TypeError("5th input argument '"+f+"' in function 'rasterizeSeparations' is of type '"+typeof f+"'. Expected type 'Rect'. Function Signature: rasterizeSeparations(Page, number, number, Matrix2D, Rect, boolean).");
}if(g instanceof Promise)throw new TypeError("6th input argument in function 'rasterizeSeparations' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof g)throw new TypeError("6th input argument '"+g+"' in function 'rasterizeSeparations' is of type '"+typeof g+"'. Expected type 'boolean'. Function Signature: rasterizeSeparations(Page, number, number, Matrix2D, Rect, boolean).");if("undefined"!=typeof e.yieldFunction)throw Error("Function '"+e.yieldFunction+
"' recently altered a struct object without yielding. That object is now being accessed by the 4th input argument in function 'rasterizeSeparations'. Perhaps a yield statement is required for '"+e.yieldFunction+"'?");if("undefined"!=typeof f.yieldFunction)throw Error("Function '"+f.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 5th input argument in function 'rasterizeSeparations'. Perhaps a yield statement is required for '"+f.yieldFunction+
"'?");return b.messageHandler.sendWithPromise("PDFRasterizer.rasterizeSeparations",{r:this.id,page:a.id,width:c,height:d,mtx:e,clip:f,cancel:g},this.userPriority).then(function(a){return"0"==a?null:new b.Vector(a)})};b.PDFDraw.create=function(a){"undefined"===typeof a&&(a=92);if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected at most 1 arguments. Function Signature: create(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: create(number).");return b.messageHandler.sendWithPromise("pdfDrawCreate",{dpi:a},this.userPriority).then(function(a){if("0"==a)return null;a=new b.PDFDraw(a);createdObjects.push({name:a.name,id:a.id});return a})};b.PDFDraw.prototype.destroy=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");
for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("PDFDraw.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.PDFDraw.prototype.setRasterizerType=
function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setRasterizerType'. Expected 1 argument. Function Signature: setRasterizerType(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setRasterizerType' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setRasterizerType' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setRasterizerType(number).");
return b.messageHandler.sendWithPromise("PDFDraw.setRasterizerType",{d:this.id,type:a},this.userPriority)};b.PDFDraw.prototype.setDPI=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setDPI'. Expected 1 argument. Function Signature: setDPI(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setDPI' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'setDPI' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setDPI(number).");return b.messageHandler.sendWithPromise("PDFDraw.setDPI",{d:this.id,dpi:a},this.userPriority)};b.PDFDraw.prototype.setImageSize=function(a,c,d){"undefined"===typeof d&&(d=!0);if(2>arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setImageSize'. Expected 2 to 3 arguments. Function Signature: setImageSize(number, number, boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setImageSize' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setImageSize' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setImageSize(number, number, boolean).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setImageSize' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setImageSize' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: setImageSize(number, number, boolean).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'setImageSize' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'setImageSize' is of type '"+typeof d+
"'. Expected type 'boolean'. Function Signature: setImageSize(number, number, boolean).");return b.messageHandler.sendWithPromise("PDFDraw.setImageSize",{d:this.id,width:a,height:c,preserve_aspect_ratio:d},this.userPriority)};b.PDFDraw.prototype.setPageBox=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPageBox'. Expected 1 argument. Function Signature: setPageBox(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPageBox' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setPageBox' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setPageBox(number).");return b.messageHandler.sendWithPromise("PDFDraw.setPageBox",{d:this.id,region:a},this.userPriority)};b.PDFDraw.prototype.setClipRect=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setClipRect'. Expected 1 argument. Function Signature: setClipRect(Rect)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setClipRect' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Rect)&&"Rect"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'setClipRect' is of type '"+a.name+"'. Expected type 'Rect'. Function Signature: setClipRect(Rect).");throw new TypeError("1st input argument '"+a+"' in function 'setClipRect' is of type '"+typeof a+"'. Expected type 'Rect'. Function Signature: setClipRect(Rect).");
}if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setClipRect'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("PDFDraw.setClipRect",{d:this.id,rect:a},this.userPriority)};b.PDFDraw.prototype.setFlipYAxis=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setFlipYAxis'. Expected 1 argument. Function Signature: setFlipYAxis(boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setFlipYAxis' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setFlipYAxis' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setFlipYAxis(boolean).");return b.messageHandler.sendWithPromise("PDFDraw.setFlipYAxis",{d:this.id,flip_y:a},this.userPriority)};b.PDFDraw.prototype.setRotate=
function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setRotate'. Expected 1 argument. Function Signature: setRotate(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setRotate' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setRotate' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setRotate(number).");
return b.messageHandler.sendWithPromise("PDFDraw.setRotate",{d:this.id,angle:a},this.userPriority)};b.PDFDraw.prototype.setDrawAnnotations=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setDrawAnnotations'. Expected 1 argument. Function Signature: setDrawAnnotations(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setDrawAnnotations' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setDrawAnnotations' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setDrawAnnotations(boolean).");return b.messageHandler.sendWithPromise("PDFDraw.setDrawAnnotations",{d:this.id,render_annots:a},this.userPriority)};b.PDFDraw.prototype.setHighlightFields=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setHighlightFields'. Expected 1 argument. Function Signature: setHighlightFields(boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setHighlightFields' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setHighlightFields' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setHighlightFields(boolean).");return b.messageHandler.sendWithPromise("PDFDraw.setHighlightFields",{d:this.id,highlight:a},this.userPriority)};b.PDFDraw.prototype.setAntiAliasing=
function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setAntiAliasing'. Expected 1 argument. Function Signature: setAntiAliasing(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setAntiAliasing' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setAntiAliasing' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setAntiAliasing(boolean).");
return b.messageHandler.sendWithPromise("PDFDraw.setAntiAliasing",{d:this.id,enable_aa:a},this.userPriority)};b.PDFDraw.prototype.setPathHinting=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPathHinting'. Expected 1 argument. Function Signature: setPathHinting(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPathHinting' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setPathHinting' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setPathHinting(boolean).");return b.messageHandler.sendWithPromise("PDFDraw.setPathHinting",{d:this.id,enable_hinting:a},this.userPriority)};b.PDFDraw.prototype.setThinLineAdjustment=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setThinLineAdjustment'. Expected 2 arguments. Function Signature: setThinLineAdjustment(boolean, boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setThinLineAdjustment' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setThinLineAdjustment' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setThinLineAdjustment(boolean, boolean).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setThinLineAdjustment' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setThinLineAdjustment' is of type '"+typeof c+"'. Expected type 'boolean'. Function Signature: setThinLineAdjustment(boolean, boolean).");return b.messageHandler.sendWithPromise("PDFDraw.setThinLineAdjustment",{d:this.id,grid_fit:a,stroke_adjust:c},this.userPriority)};b.PDFDraw.prototype.setGamma=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setGamma'. Expected 1 argument. Function Signature: setGamma(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setGamma' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setGamma' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setGamma(number).");return b.messageHandler.sendWithPromise("PDFDraw.setGamma",{d:this.id,exp:a},this.userPriority)};b.PDFDraw.prototype.setPrintMode=function(a){if(1!=
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPrintMode'. Expected 1 argument. Function Signature: setPrintMode(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPrintMode' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setPrintMode' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setPrintMode(boolean).");
return b.messageHandler.sendWithPromise("PDFDraw.setPrintMode",{d:this.id,is_printing:a},this.userPriority)};b.PDFDraw.prototype.setPageTransparent=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPageTransparent'. Expected 1 argument. Function Signature: setPageTransparent(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPageTransparent' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setPageTransparent' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setPageTransparent(boolean).");return b.messageHandler.sendWithPromise("PDFDraw.setPageTransparent",{d:this.id,is_transparent:a},this.userPriority)};b.PDFDraw.prototype.setDefaultPageColor=function(a,c,d){if(3!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setDefaultPageColor'. Expected 3 arguments. Function Signature: setDefaultPageColor(number, number, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setDefaultPageColor' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setDefaultPageColor' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setDefaultPageColor(number, number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setDefaultPageColor' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setDefaultPageColor' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: setDefaultPageColor(number, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'setDefaultPageColor' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'setDefaultPageColor' is of type '"+
typeof d+"'. Expected type 'number'. Function Signature: setDefaultPageColor(number, number, number).");return b.messageHandler.sendWithPromise("PDFDraw.setDefaultPageColor",{d:this.id,r:a,g:c,b:d},this.userPriority)};b.PDFDraw.prototype.setOverprint=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setOverprint'. Expected 1 argument. Function Signature: setOverprint(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setOverprint' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setOverprint' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setOverprint(number).");return b.messageHandler.sendWithPromise("PDFDraw.setOverprint",{d:this.id,op:a},this.userPriority)};b.PDFDraw.prototype.setImageSmoothing=function(a,c){"undefined"===typeof a&&(a=!0);"undefined"===typeof c&&(c=!1);if(2<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setImageSmoothing'. Expected at most 2 arguments. Function Signature: setImageSmoothing(boolean, boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setImageSmoothing' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setImageSmoothing' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setImageSmoothing(boolean, boolean).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setImageSmoothing' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setImageSmoothing' is of type '"+typeof c+"'. Expected type 'boolean'. Function Signature: setImageSmoothing(boolean, boolean).");return b.messageHandler.sendWithPromise("PDFDraw.setImageSmoothing",{d:this.id,smoothing_enabled:a,hq_image_resampling:c},this.userPriority)};b.PDFDraw.prototype.setCaching=function(a){"undefined"===typeof a&&(a=!0);if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setCaching'. Expected at most 1 arguments. Function Signature: setCaching(boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setCaching' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setCaching' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setCaching(boolean).");return b.messageHandler.sendWithPromise("PDFDraw.setCaching",{d:this.id,enabled:a},this.userPriority)};b.PDFDraw.prototype.setColorPostProcessMode=
function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setColorPostProcessMode'. Expected 1 argument. Function Signature: setColorPostProcessMode(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setColorPostProcessMode' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setColorPostProcessMode' is of type '"+
typeof a+"'. Expected type 'number'. Function Signature: setColorPostProcessMode(number).");return b.messageHandler.sendWithPromise("PDFDraw.setColorPostProcessMode",{d:this.id,mode:a},this.userPriority)};b.enableJavaScript=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'enableJavaScript'. Expected 1 argument. Function Signature: enableJavaScript(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'enableJavaScript' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'enableJavaScript' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: enableJavaScript(boolean).");return b.messageHandler.sendWithPromise("pdfNetEnableJavaScript",{enable:a},this.userPriority)};b.isJavaScriptEnabled=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isJavaScriptEnabled'. Expected 0 arguments. Function Signature: isJavaScriptEnabled()");
return b.messageHandler.sendWithPromise("pdfNetIsJavaScriptEnabled",{},this.userPriority)};b.addResourceSearchPath=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'addResourceSearchPath'. Expected 1 argument. Function Signature: addResourceSearchPath(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'addResourceSearchPath' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'addResourceSearchPath' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: addResourceSearchPath(string).");return b.messageHandler.sendWithPromise("pdfNetAddResourceSearchPath",{path:a},this.userPriority)};b.setColorManagement=function(a){"undefined"===typeof a&&(a=b.CMSType.e_lcms);if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setColorManagement'. Expected at most 1 arguments. Function Signature: setColorManagement(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setColorManagement' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setColorManagement' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setColorManagement(number).");return b.messageHandler.sendWithPromise("pdfNetSetColorManagement",{t:a},this.userPriority)};b.setDefaultDeviceRGBProfile=
function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setDefaultDeviceRGBProfile'. Expected 1 argument. Function Signature: setDefaultDeviceRGBProfile(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setDefaultDeviceRGBProfile' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setDefaultDeviceRGBProfile' is of type '"+
typeof a+"'. Expected type 'string'. Function Signature: setDefaultDeviceRGBProfile(string).");return b.messageHandler.sendWithPromise("pdfNetSetDefaultDeviceRGBProfile",{icc_filename:a},this.userPriority)};b.setDefaultFlateCompressionLevel=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setDefaultFlateCompressionLevel'. Expected 1 argument. Function Signature: setDefaultFlateCompressionLevel(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setDefaultFlateCompressionLevel' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setDefaultFlateCompressionLevel' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setDefaultFlateCompressionLevel(number).");return b.messageHandler.sendWithPromise("pdfNetSetDefaultFlateCompressionLevel",{level:a},this.userPriority)};b.getVersion=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getVersion'. Expected 0 arguments. Function Signature: getVersion()");
return b.messageHandler.sendWithPromise("pdfNetGetVersion",{},this.userPriority)};b.setLogLevel=function(a){"undefined"===typeof a&&(a=b.LogLevel.e_LogLevel_Fatal);if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setLogLevel'. Expected at most 1 arguments. Function Signature: setLogLevel(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setLogLevel' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setLogLevel' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setLogLevel(number).");return b.messageHandler.sendWithPromise("pdfNetSetLogLevel",{level:a},this.userPriority)};b.Rect.init=function(a,c,d,e){if(4!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'init'. Expected 4 arguments. Function Signature: init(number, number, number, number)");if(a instanceof
Promise)throw new TypeError("1st input argument in function 'init' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'init' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: init(number, number, number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'init' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'init' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: init(number, number, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'init' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'init' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: init(number, number, number, number).");
if(e instanceof Promise)throw new TypeError("4th input argument in function 'init' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof e)throw new TypeError("4th input argument '"+e+"' in function 'init' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: init(number, number, number, number).");return b.messageHandler.sendWithPromise("rectInit",{x1:a,y1:c,x2:d,y2:e},this.userPriority).then(function(a){return"0"==a?null:new b.Rect(a)})};
b.Rect.prototype.assign=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'assign'. Expected 1 argument. Function Signature: assign(Rect)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'assign' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Rect)&&"Rect"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'assign' is of type '"+
a.name+"'. Expected type 'Rect'. Function Signature: assign(Rect).");throw new TypeError("1st input argument '"+a+"' in function 'assign' is of type '"+typeof a+"'. Expected type 'Rect'. Function Signature: assign(Rect).");}if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'assign'. Perhaps a yield statement is required for "+this.yieldFunction+"?");if("undefined"!=
typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'assign'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");var c=this;this.yieldFunction="Rect.assign";return b.messageHandler.sendWithPromise("Rect.assign",{left:this,right:a},this.userPriority).then(function(a){c.yieldFunction=void 0;copyFunc(a.left,c)})};b.Rect.prototype.attach=function(a){if(1!=
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'attach'. Expected 1 argument. Function Signature: attach(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'attach' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'attach' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: attach(Obj).");
throw new TypeError("1st input argument '"+a+"' in function 'attach' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: attach(Obj).");}if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'attach'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var c=this;this.yieldFunction="Rect.attach";return b.messageHandler.sendWithPromise("Rect.attach",
{rect:this,obj:a.id},this.userPriority).then(function(a){c.yieldFunction=void 0;copyFunc(a.rect,c)})};b.Rect.prototype.update=function(a){"undefined"===typeof a&&(a=new b.Obj("__null"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'update'. Expected at most 1 arguments. Function Signature: update(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'update' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'update' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: update(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'update' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: update(Obj).");}if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'update'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");var c=this;this.yieldFunction="Rect.update";return b.messageHandler.sendWithPromise("Rect.update",{rect:this,obj:a.id},this.userPriority).then(function(a){c.yieldFunction=void 0;copyFunc(a.rect,c);return a.result})};b.Rect.prototype.get=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'get'. Expected 0 arguments. Function Signature: get()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+
" recently altered a struct object without yielding. That object is now being accessed by function 'get'. Perhaps a yield statement is required for "+this.yieldFunction+"?");return b.messageHandler.sendWithPromise("Rect.get",{rect:this},this.userPriority)};b.Rect.prototype.set=function(a,c,d,e){if(4!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'set'. Expected 4 arguments. Function Signature: set(number, number, number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'set' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'set' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: set(number, number, number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'set' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'set' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: set(number, number, number, number).");
if(d instanceof Promise)throw new TypeError("3rd input argument in function 'set' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'set' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: set(number, number, number, number).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'set' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof e)throw new TypeError("4th input argument '"+e+"' in function 'set' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: set(number, number, number, number).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'set'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var f=this;this.yieldFunction="Rect.set";return b.messageHandler.sendWithPromise("Rect.set",
{rect:this,x1:a,y1:c,x2:d,y2:e},this.userPriority).then(function(a){f.yieldFunction=void 0;copyFunc(a.rect,f)})};b.Rect.prototype.width=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'width'. Expected 0 arguments. Function Signature: width()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'width'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("Rect.width",{rect:this},this.userPriority)};b.Rect.prototype.height=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'height'. Expected 0 arguments. Function Signature: height()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'height'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");return b.messageHandler.sendWithPromise("Rect.height",{rect:this},this.userPriority)};b.Rect.prototype.contains=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'contains'. Expected 2 arguments. Function Signature: contains(number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'contains' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=
typeof a)throw new TypeError("1st input argument '"+a+"' in function 'contains' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: contains(number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'contains' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'contains' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: contains(number, number).");
if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'contains'. Perhaps a yield statement is required for "+this.yieldFunction+"?");return b.messageHandler.sendWithPromise("Rect.contains",{rect:this,x:a,y:c},this.userPriority)};b.Rect.prototype.intersectRect=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'intersectRect'. Expected 2 arguments. Function Signature: intersectRect(Rect, Rect)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'intersectRect' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Rect)&&"Rect"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'intersectRect' is of type '"+a.name+"'. Expected type 'Rect'. Function Signature: intersectRect(Rect, Rect).");throw new TypeError("1st input argument '"+a+"' in function 'intersectRect' is of type '"+typeof a+
"'. Expected type 'Rect'. Function Signature: intersectRect(Rect, Rect).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'intersectRect' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Rect)&&"Rect"!=c.name){if("object"==typeof c)throw new TypeError("2nd input argument in function 'intersectRect' is of type '"+c.name+"'. Expected type 'Rect'. Function Signature: intersectRect(Rect, Rect).");throw new TypeError("2nd input argument '"+
c+"' in function 'intersectRect' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: intersectRect(Rect, Rect).");}if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'intersectRect'. Perhaps a yield statement is required for "+this.yieldFunction+"?");if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'intersectRect'. Perhaps a yield statement is required for '"+
a.yieldFunction+"'?");if("undefined"!=typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'intersectRect'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");var d=this;this.yieldFunction="Rect.intersectRect";return b.messageHandler.sendWithPromise("Rect.intersectRect",{rect:this,rect1:a,rect2:c},this.userPriority).then(function(a){d.yieldFunction=
void 0;copyFunc(a.rect,d);return a.result})};b.Rect.prototype.normalize=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'normalize'. Expected 0 arguments. Function Signature: normalize()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'normalize'. Perhaps a yield statement is required for "+this.yieldFunction+
"?");var a=this;this.yieldFunction="Rect.normalize";return b.messageHandler.sendWithPromise("Rect.normalize",{rect:this},this.userPriority).then(function(b){a.yieldFunction=void 0;copyFunc(b.rect,a)})};b.Rect.prototype.inflate1=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'inflate1'. Expected 1 argument. Function Signature: inflate1(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'inflate1' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'inflate1' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: inflate1(number).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'inflate1'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var c=this;this.yieldFunction="Rect.inflate1";return b.messageHandler.sendWithPromise("Rect.inflate1",
{rect:this,amount:a},this.userPriority).then(function(a){c.yieldFunction=void 0;copyFunc(a.rect,c)})};b.Rect.prototype.inflate2=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'inflate2'. Expected 2 arguments. Function Signature: inflate2(number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'inflate2' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'inflate2' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: inflate2(number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'inflate2' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'inflate2' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: inflate2(number, number).");if("undefined"!==
typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'inflate2'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var d=this;this.yieldFunction="Rect.inflate2";return b.messageHandler.sendWithPromise("Rect.inflate2",{rect:this,x:a,y:c},this.userPriority).then(function(a){d.yieldFunction=void 0;copyFunc(a.rect,d)})};b.Redactor.redactionCreate=function(a,c,d,e){if(4!=
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'redactionCreate'. Expected 4 arguments. Function Signature: redactionCreate(number, Rect, boolean, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'redactionCreate' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'redactionCreate' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: redactionCreate(number, Rect, boolean, string).");
if(c instanceof Promise)throw new TypeError("2nd input argument in function 'redactionCreate' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Rect)&&"Rect"!=c.name){if("object"==typeof c)throw new TypeError("2nd input argument in function 'redactionCreate' is of type '"+c.name+"'. Expected type 'Rect'. Function Signature: redactionCreate(number, Rect, boolean, string).");throw new TypeError("2nd input argument '"+c+"' in function 'redactionCreate' is of type '"+
typeof c+"'. Expected type 'Rect'. Function Signature: redactionCreate(number, Rect, boolean, string).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'redactionCreate' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'redactionCreate' is of type '"+typeof d+"'. Expected type 'boolean'. Function Signature: redactionCreate(number, Rect, boolean, string).");
if(e instanceof Promise)throw new TypeError("4th input argument in function 'redactionCreate' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof e)throw new TypeError("4th input argument '"+e+"' in function 'redactionCreate' is of type '"+typeof e+"'. Expected type 'string'. Function Signature: redactionCreate(number, Rect, boolean, string).");if("undefined"!=typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'redactionCreate'. Perhaps a yield statement is required for '"+
c.yieldFunction+"'?");return b.messageHandler.sendWithPromise("redactor_RedactionCreate",{page_num:a,bbox:c,negative:d,text:e},this.userPriority).then(function(a){return"0"==a?null:new b.Redaction(a)})};b.Redactor.redactionDestroy=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'redactionDestroy'. Expected 1 argument. Function Signature: redactionDestroy(Redaction)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'redactionDestroy' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Redaction)){if("object"==typeof a)throw new TypeError("1st input argument in function 'redactionDestroy' is of type '"+a.name+"'. Expected type 'Redaction'. Function Signature: redactionDestroy(Redaction).");throw new TypeError("1st input argument '"+a+"' in function 'redactionDestroy' is of type '"+typeof a+"'. Expected type 'Redaction'. Function Signature: redactionDestroy(Redaction).");}return b.messageHandler.sendWithPromise("redactor_RedactionDestroy",{redaction:a.id},this.userPriority)};
b.Redactor.redactionCopy=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'redactionCopy'. Expected 1 argument. Function Signature: redactionCopy(Redaction)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'redactionCopy' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Redaction)){if("object"==typeof a)throw new TypeError("1st input argument in function 'redactionCopy' is of type '"+
a.name+"'. Expected type 'Redaction'. Function Signature: redactionCopy(Redaction).");throw new TypeError("1st input argument '"+a+"' in function 'redactionCopy' is of type '"+typeof a+"'. Expected type 'Redaction'. Function Signature: redactionCopy(Redaction).");}return b.messageHandler.sendWithPromise("redactor_RedactionCopy",{other:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.Redaction(a)})};b.RedactionAppearance.prototype.destroy=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("RedactionAppearance.destroy",
{auto_dealloc_obj:this.id},this.userPriority)};b.Shading.create=function(a){"undefined"===typeof a&&(a=new b.Obj("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected at most 1 arguments. Function Signature: create(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'create' is of type '"+
a.name+"'. Expected type 'Obj'. Function Signature: create(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: create(Obj).");}return b.messageHandler.sendWithPromise("shadingCreate",{shading_dict:a.id},this.userPriority).then(function(a){if("0"==a)return null;a=new b.Shading(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Shading.prototype.assign=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'assign'. Expected 1 argument. Function Signature: assign(Shading)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'assign' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Shading)){if("object"==typeof a)throw new TypeError("1st input argument in function 'assign' is of type '"+a.name+"'. Expected type 'Shading'. Function Signature: assign(Shading).");throw new TypeError("1st input argument '"+
a+"' in function 'assign' is of type '"+typeof a+"'. Expected type 'Shading'. Function Signature: assign(Shading).");}return b.messageHandler.sendWithPromise("Shading.assign",{left:this.id,right:a.id},this.userPriority)};b.Shading.prototype.destroy=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=
c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("Shading.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.Shading.getTypeFromObj=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTypeFromObj'. Expected 1 argument. Function Signature: getTypeFromObj(Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'getTypeFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'getTypeFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: getTypeFromObj(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'getTypeFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: getTypeFromObj(Obj).");
}return b.messageHandler.sendWithPromise("shadingGetTypeFromObj",{shading_dict:a.id},this.userPriority)};b.Shading.prototype.getType=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getType'. Expected 0 arguments. Function Signature: getType()");return b.messageHandler.sendWithPromise("Shading.getType",{s:this.id},this.userPriority)};b.Shading.prototype.getSDFObj=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSDFObj'. Expected 0 arguments. Function Signature: getSDFObj()");
return b.messageHandler.sendWithPromise("Shading.getSDFObj",{s:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Shading.prototype.getBaseColorSpace=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getBaseColorSpace'. Expected 0 arguments. Function Signature: getBaseColorSpace()");return b.messageHandler.sendWithPromise("Shading.getBaseColorSpace",{s:this.id},this.userPriority).then(function(a){if("0"==a)return null;
a=new b.ColorSpace(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Shading.prototype.hasBBox=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'hasBBox'. Expected 0 arguments. Function Signature: hasBBox()");return b.messageHandler.sendWithPromise("Shading.hasBBox",{s:this.id},this.userPriority)};b.Shading.prototype.getBBox=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getBBox'. Expected 0 arguments. Function Signature: getBBox()");
return b.messageHandler.sendWithPromise("Shading.getBBox",{s:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Rect(a)})};b.Shading.prototype.hasBackground=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'hasBackground'. Expected 0 arguments. Function Signature: hasBackground()");return b.messageHandler.sendWithPromise("Shading.hasBackground",{s:this.id},this.userPriority)};b.Shading.prototype.getBackground=function(){if(0!=
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getBackground'. Expected 0 arguments. Function Signature: getBackground()");return b.messageHandler.sendWithPromise("Shading.getBackground",{s:this.id},this.userPriority).then(function(a){if("0"==a)return null;a=new b.ColorPt(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Shading.prototype.getAntialias=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getAntialias'. Expected 0 arguments. Function Signature: getAntialias()");
return b.messageHandler.sendWithPromise("Shading.getAntialias",{s:this.id},this.userPriority)};b.Shading.prototype.getParamStart=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getParamStart'. Expected 0 arguments. Function Signature: getParamStart()");return b.messageHandler.sendWithPromise("Shading.getParamStart",{s:this.id},this.userPriority)};b.Shading.prototype.getParamEnd=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getParamEnd'. Expected 0 arguments. Function Signature: getParamEnd()");return b.messageHandler.sendWithPromise("Shading.getParamEnd",{s:this.id},this.userPriority)};b.Shading.prototype.isExtendStart=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isExtendStart'. Expected 0 arguments. Function Signature: isExtendStart()");return b.messageHandler.sendWithPromise("Shading.isExtendStart",{s:this.id},this.userPriority)};
b.Shading.prototype.isExtendEnd=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isExtendEnd'. Expected 0 arguments. Function Signature: isExtendEnd()");return b.messageHandler.sendWithPromise("Shading.isExtendEnd",{s:this.id},this.userPriority)};b.Shading.prototype.getColor=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getColor'. Expected 1 argument. Function Signature: getColor(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'getColor' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getColor' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getColor(number).");var c=this;this.yieldFunction="Shading.getColor";return b.messageHandler.sendWithPromise("Shading.getColor",{s:this.id,t:a},this.userPriority).then(function(a){c.yieldFunction=
void 0;copyFunc(a.out_color,c)})};b.Shading.prototype.getCoords=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getCoords'. Expected 0 arguments. Function Signature: getCoords()");return b.messageHandler.sendWithPromise("Shading.getCoords",{s:this.id},this.userPriority)};b.Shading.prototype.getCoordsRadial=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getCoordsRadial'. Expected 0 arguments. Function Signature: getCoordsRadial()");
return b.messageHandler.sendWithPromise("Shading.getCoordsRadial",{s:this.id},this.userPriority)};b.Shading.prototype.getDomain=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getDomain'. Expected 0 arguments. Function Signature: getDomain()");return b.messageHandler.sendWithPromise("Shading.getDomain",{s:this.id},this.userPriority)};b.Shading.prototype.getMatrix=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getMatrix'. Expected 0 arguments. Function Signature: getMatrix()");
return b.messageHandler.sendWithPromise("Shading.getMatrix",{s:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Matrix2D(a)})};b.Shading.prototype.getColorForFunction=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getColorForFunction'. Expected 2 arguments. Function Signature: getColorForFunction(number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getColorForFunction' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getColorForFunction' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getColorForFunction(number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'getColorForFunction' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'getColorForFunction' is of type '"+
typeof c+"'. Expected type 'number'. Function Signature: getColorForFunction(number, number).");var d=this;this.yieldFunction="Shading.getColorForFunction";return b.messageHandler.sendWithPromise("Shading.getColorForFunction",{s:this.id,t1:a,t2:c},this.userPriority).then(function(a){d.yieldFunction=void 0;copyFunc(a.out_color,d)})};b.Stamper.create=function(a,c,d){if(3!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 3 arguments. Function Signature: create(number, number, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: create(number, number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: create(number, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'create' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: create(number, number, number).");
return b.messageHandler.sendWithPromise("stamperCreate",{size_type:a,a:c,b:d},this.userPriority).then(function(a){if("0"==a)return null;a=new b.Stamper(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Stamper.prototype.destroy=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=
a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("Stamper.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.Stamper.prototype.stampImage=function(a,c,d){if(3!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'stampImage'. Expected 3 arguments. Function Signature: stampImage(PDFDoc, Image, PageSet)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'stampImage' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'stampImage' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: stampImage(PDFDoc, Image, PageSet).");throw new TypeError("1st input argument '"+a+"' in function 'stampImage' is of type '"+
typeof a+"'. Expected type 'PDFDoc'. Function Signature: stampImage(PDFDoc, Image, PageSet).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'stampImage' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Image)){if("object"==typeof c)throw new TypeError("2nd input argument in function 'stampImage' is of type '"+c.name+"'. Expected type 'Image'. Function Signature: stampImage(PDFDoc, Image, PageSet).");throw new TypeError("2nd input argument '"+
c+"' in function 'stampImage' is of type '"+typeof c+"'. Expected type 'Image'. Function Signature: stampImage(PDFDoc, Image, PageSet).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'stampImage' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(d instanceof b.PageSet)){if("object"==typeof d)throw new TypeError("3rd input argument in function 'stampImage' is of type '"+d.name+"'. Expected type 'PageSet'. Function Signature: stampImage(PDFDoc, Image, PageSet).");
throw new TypeError("3rd input argument '"+d+"' in function 'stampImage' is of type '"+typeof d+"'. Expected type 'PageSet'. Function Signature: stampImage(PDFDoc, Image, PageSet).");}return b.messageHandler.sendWithPromise("Stamper.stampImage",{stamp:this.id,dest_doc:a.id,img:c.id,dest_pages:d.id},this.userPriority)};b.Stamper.prototype.stampPage=function(a,c,d){if(3!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'stampPage'. Expected 3 arguments. Function Signature: stampPage(PDFDoc, Page, PageSet)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'stampPage' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'stampPage' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: stampPage(PDFDoc, Page, PageSet).");throw new TypeError("1st input argument '"+a+"' in function 'stampPage' is of type '"+
typeof a+"'. Expected type 'PDFDoc'. Function Signature: stampPage(PDFDoc, Page, PageSet).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'stampPage' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Page)){if("object"==typeof c)throw new TypeError("2nd input argument in function 'stampPage' is of type '"+c.name+"'. Expected type 'Page'. Function Signature: stampPage(PDFDoc, Page, PageSet).");throw new TypeError("2nd input argument '"+
c+"' in function 'stampPage' is of type '"+typeof c+"'. Expected type 'Page'. Function Signature: stampPage(PDFDoc, Page, PageSet).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'stampPage' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(d instanceof b.PageSet)){if("object"==typeof d)throw new TypeError("3rd input argument in function 'stampPage' is of type '"+d.name+"'. Expected type 'PageSet'. Function Signature: stampPage(PDFDoc, Page, PageSet).");
throw new TypeError("3rd input argument '"+d+"' in function 'stampPage' is of type '"+typeof d+"'. Expected type 'PageSet'. Function Signature: stampPage(PDFDoc, Page, PageSet).");}return b.messageHandler.sendWithPromise("Stamper.stampPage",{stamp:this.id,dest_doc:a.id,page:c.id,dest_pages:d.id},this.userPriority)};b.Stamper.prototype.stampText=function(a,c,d){if(3!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'stampText'. Expected 3 arguments. Function Signature: stampText(PDFDoc, string, PageSet)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'stampText' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'stampText' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: stampText(PDFDoc, string, PageSet).");throw new TypeError("1st input argument '"+a+"' in function 'stampText' is of type '"+
typeof a+"'. Expected type 'PDFDoc'. Function Signature: stampText(PDFDoc, string, PageSet).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'stampText' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'stampText' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: stampText(PDFDoc, string, PageSet).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'stampText' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(d instanceof b.PageSet)){if("object"==typeof d)throw new TypeError("3rd input argument in function 'stampText' is of type '"+d.name+"'. Expected type 'PageSet'. Function Signature: stampText(PDFDoc, string, PageSet).");throw new TypeError("3rd input argument '"+d+"' in function 'stampText' is of type '"+typeof d+"'. Expected type 'PageSet'. Function Signature: stampText(PDFDoc, string, PageSet).");}return b.messageHandler.sendWithPromise("Stamper.stampText",{stamp:this.id,dest_doc:a.id,txt:c,
dest_pages:d.id},this.userPriority)};b.Stamper.prototype.setFont=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setFont'. Expected 1 argument. Function Signature: setFont(Font)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setFont' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Font)){if("object"==typeof a)throw new TypeError("1st input argument in function 'setFont' is of type '"+
a.name+"'. Expected type 'Font'. Function Signature: setFont(Font).");throw new TypeError("1st input argument '"+a+"' in function 'setFont' is of type '"+typeof a+"'. Expected type 'Font'. Function Signature: setFont(Font).");}return b.messageHandler.sendWithPromise("Stamper.setFont",{stamp:this.id,font:a.id},this.userPriority)};b.Stamper.prototype.setFontColor=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setFontColor'. Expected 1 argument. Function Signature: setFontColor(ColorPt)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setFontColor' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.ColorPt)&&"ColorPt"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'setFontColor' is of type '"+a.name+"'. Expected type 'ColorPt'. Function Signature: setFontColor(ColorPt).");throw new TypeError("1st input argument '"+a+"' in function 'setFontColor' is of type '"+typeof a+
"'. Expected type 'ColorPt'. Function Signature: setFontColor(ColorPt).");}if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'setFontColor'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");return b.messageHandler.sendWithPromise("Stamper.setFontColor",{stamp:this.id,font_color:a.id},this.userPriority)};b.Stamper.prototype.setTextAlignment=
function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setTextAlignment'. Expected 1 argument. Function Signature: setTextAlignment(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setTextAlignment' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setTextAlignment' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setTextAlignment(number).");
return b.messageHandler.sendWithPromise("Stamper.setTextAlignment",{stamp:this.id,text_alignment:a},this.userPriority)};b.Stamper.prototype.setOpacity=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setOpacity'. Expected 1 argument. Function Signature: setOpacity(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setOpacity' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setOpacity' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setOpacity(number).");return b.messageHandler.sendWithPromise("Stamper.setOpacity",{stamp:this.id,opacity:a},this.userPriority)};b.Stamper.prototype.setRotation=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setRotation'. Expected 1 argument. Function Signature: setRotation(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setRotation' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setRotation' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setRotation(number).");return b.messageHandler.sendWithPromise("Stamper.setRotation",{stamp:this.id,rotation:a},this.userPriority)};b.Stamper.prototype.setAsBackground=
function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setAsBackground'. Expected 1 argument. Function Signature: setAsBackground(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setAsBackground' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setAsBackground' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setAsBackground(boolean).");
return b.messageHandler.sendWithPromise("Stamper.setAsBackground",{stamp:this.id,background:a},this.userPriority)};b.Stamper.prototype.setAsAnnotation=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setAsAnnotation'. Expected 1 argument. Function Signature: setAsAnnotation(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setAsAnnotation' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setAsAnnotation' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setAsAnnotation(boolean).");return b.messageHandler.sendWithPromise("Stamper.setAsAnnotation",{stamp:this.id,annotation:a},this.userPriority)};b.Stamper.prototype.showsOnScreen=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'showsOnScreen'. Expected 1 argument. Function Signature: showsOnScreen(boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'showsOnScreen' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'showsOnScreen' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: showsOnScreen(boolean).");return b.messageHandler.sendWithPromise("Stamper.showsOnScreen",{stamp:this.id,on_screen:a},this.userPriority)};b.Stamper.prototype.showsOnPrint=
function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'showsOnPrint'. Expected 1 argument. Function Signature: showsOnPrint(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'showsOnPrint' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'showsOnPrint' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: showsOnPrint(boolean).");
return b.messageHandler.sendWithPromise("Stamper.showsOnPrint",{stamp:this.id,on_print:a},this.userPriority)};b.Stamper.prototype.setAlignment=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setAlignment'. Expected 2 arguments. Function Signature: setAlignment(number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setAlignment' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setAlignment' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setAlignment(number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setAlignment' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setAlignment' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: setAlignment(number, number).");
return b.messageHandler.sendWithPromise("Stamper.setAlignment",{stamp:this.id,horizontal_alignment:a,vertical_alignment:c},this.userPriority)};b.Stamper.prototype.setPosition=function(a,c,d){"undefined"===typeof d&&(d=!1);if(2>arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPosition'. Expected 2 to 3 arguments. Function Signature: setPosition(number, number, boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPosition' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setPosition' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setPosition(number, number, boolean).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setPosition' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setPosition' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: setPosition(number, number, boolean).");
if(d instanceof Promise)throw new TypeError("3rd input argument in function 'setPosition' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'setPosition' is of type '"+typeof d+"'. Expected type 'boolean'. Function Signature: setPosition(number, number, boolean).");return b.messageHandler.sendWithPromise("Stamper.setPosition",{stamp:this.id,x:a,y:c,use_percentage:d},this.userPriority)};
b.Stamper.prototype.setSize=function(a,c,d){if(3!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setSize'. Expected 3 arguments. Function Signature: setSize(number, number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setSize' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setSize' is of type '"+typeof a+
"'. Expected type 'number'. Function Signature: setSize(number, number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setSize' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setSize' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: setSize(number, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'setSize' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'setSize' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: setSize(number, number, number).");return b.messageHandler.sendWithPromise("Stamper.setSize",{stamp:this.id,size_type:a,a:c,b:d},this.userPriority)};b.Stamper.deleteStamps=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'deleteStamps'. Expected 2 arguments. Function Signature: deleteStamps(PDFDoc, PageSet)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'deleteStamps' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'deleteStamps' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: deleteStamps(PDFDoc, PageSet).");throw new TypeError("1st input argument '"+a+"' in function 'deleteStamps' is of type '"+
typeof a+"'. Expected type 'PDFDoc'. Function Signature: deleteStamps(PDFDoc, PageSet).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'deleteStamps' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.PageSet)){if("object"==typeof c)throw new TypeError("2nd input argument in function 'deleteStamps' is of type '"+c.name+"'. Expected type 'PageSet'. Function Signature: deleteStamps(PDFDoc, PageSet).");throw new TypeError("2nd input argument '"+
c+"' in function 'deleteStamps' is of type '"+typeof c+"'. Expected type 'PageSet'. Function Signature: deleteStamps(PDFDoc, PageSet).");}return b.messageHandler.sendWithPromise("stamperDeleteStamps",{doc:a.id,page_set:c.id},this.userPriority)};b.Stamper.hasStamps=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'hasStamps'. Expected 2 arguments. Function Signature: hasStamps(PDFDoc, PageSet)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'hasStamps' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'hasStamps' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: hasStamps(PDFDoc, PageSet).");throw new TypeError("1st input argument '"+a+"' in function 'hasStamps' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: hasStamps(PDFDoc, PageSet).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'hasStamps' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.PageSet)){if("object"==typeof c)throw new TypeError("2nd input argument in function 'hasStamps' is of type '"+c.name+"'. Expected type 'PageSet'. Function Signature: hasStamps(PDFDoc, PageSet).");throw new TypeError("2nd input argument '"+c+"' in function 'hasStamps' is of type '"+typeof c+"'. Expected type 'PageSet'. Function Signature: hasStamps(PDFDoc, PageSet).");}return b.messageHandler.sendWithPromise("stamperHasStamps",{doc:a.id,page_set:c.id},this.userPriority)};b.TextExtractor.create=
function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 0 arguments. Function Signature: create()");return b.messageHandler.sendWithPromise("textExtractorCreate",{},this.userPriority).then(function(a){if("0"==a)return null;a=new b.TextExtractor(a);createdObjects.push({name:a.name,id:a.id});return a})};b.TextExtractor.prototype.destroy=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");
for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("TextExtractor.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.TextExtractor.prototype.begin=
function(a,c,d){"undefined"===typeof c&&(c=new b.Rect("0"));"undefined"===typeof d&&(d=0);if(1>arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'begin'. Expected 1 to 3 arguments. Function Signature: begin(Page, Rect, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'begin' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Page)){if("object"==typeof a)throw new TypeError("1st input argument in function 'begin' is of type '"+
a.name+"'. Expected type 'Page'. Function Signature: begin(Page, Rect, number).");throw new TypeError("1st input argument '"+a+"' in function 'begin' is of type '"+typeof a+"'. Expected type 'Page'. Function Signature: begin(Page, Rect, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'begin' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Rect)&&"Rect"!=c.name){if("object"==typeof c)throw new TypeError("2nd input argument in function 'begin' is of type '"+
c.name+"'. Expected type 'Rect'. Function Signature: begin(Page, Rect, number).");throw new TypeError("2nd input argument '"+c+"' in function 'begin' is of type '"+typeof c+"'. Expected type 'Rect'. Function Signature: begin(Page, Rect, number).");}if(d instanceof Promise)throw new TypeError("3rd input argument in function 'begin' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'begin' is of type '"+
typeof d+"'. Expected type 'number'. Function Signature: begin(Page, Rect, number).");if("undefined"!=typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'begin'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");var e=this;this.yieldFunction="TextExtractor.begin";return b.messageHandler.sendWithPromise("TextExtractor.begin",{te:this.id,page:a.id,
clip_ptr:c,flags:d},this.userPriority).then(function(a){e.yieldFunction=void 0;copyFunc(a.clip_ptr,e)})};b.TextExtractor.prototype.getWordCount=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getWordCount'. Expected 0 arguments. Function Signature: getWordCount()");return b.messageHandler.sendWithPromise("TextExtractor.getWordCount",{te:this.id},this.userPriority)};b.TextExtractor.prototype.setRightToLeftLanguage=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'setRightToLeftLanguage'. Expected 1 argument. Function Signature: setRightToLeftLanguage(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setRightToLeftLanguage' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setRightToLeftLanguage' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setRightToLeftLanguage(boolean).");
return b.messageHandler.sendWithPromise("TextExtractor.setRightToLeftLanguage",{te:this.id,rtl:a},this.userPriority)};b.TextExtractor.prototype.getRightToLeftLanguage=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getRightToLeftLanguage'. Expected 0 arguments. Function Signature: getRightToLeftLanguage()");return b.messageHandler.sendWithPromise("TextExtractor.getRightToLeftLanguage",{te:this.id},this.userPriority)};b.TextExtractor.prototype.getAsText=
function(a){"undefined"===typeof a&&(a=!0);if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getAsText'. Expected at most 1 arguments. Function Signature: getAsText(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getAsText' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getAsText' is of type '"+typeof a+
"'. Expected type 'boolean'. Function Signature: getAsText(boolean).");return b.messageHandler.sendWithPromise("TextExtractor.getAsText",{te:this.id,dehyphen:a},this.userPriority)};b.TextExtractor.prototype.getTextUnderAnnot=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTextUnderAnnot'. Expected 1 argument. Function Signature: getTextUnderAnnot(Annot)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getTextUnderAnnot' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Annot)){if("object"==typeof a)throw new TypeError("1st input argument in function 'getTextUnderAnnot' is of type '"+a.name+"'. Expected type 'Annot'. Function Signature: getTextUnderAnnot(Annot).");throw new TypeError("1st input argument '"+a+"' in function 'getTextUnderAnnot' is of type '"+typeof a+"'. Expected type 'Annot'. Function Signature: getTextUnderAnnot(Annot).");}return b.messageHandler.sendWithPromise("TextExtractor.getTextUnderAnnot",{te:this.id,annot:a.id},this.userPriority)};
b.TextExtractor.prototype.getAsXML=function(a){"undefined"===typeof a&&(a=0);if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getAsXML'. Expected at most 1 arguments. Function Signature: getAsXML(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getAsXML' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getAsXML' is of type '"+
typeof a+"'. Expected type 'number'. Function Signature: getAsXML(number).");return b.messageHandler.sendWithPromise("TextExtractor.getAsXML",{te:this.id,xml_output_flags:a},this.userPriority)};b.TextExtractorStyle.prototype.getFont=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFont'. Expected 0 arguments. Function Signature: getFont()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getFont'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");var a=this;this.yieldFunction="TextExtractorStyle.getFont";return b.messageHandler.sendWithPromise("TextExtractorStyle.getFont",{tes:this},this.userPriority).then(function(c){a.yieldFunction=void 0;if("0"==c)return null;copyFunc(c.tes,a);return new b.Obj(c.result)})};b.TextExtractorStyle.prototype.getFontName=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFontName'. Expected 0 arguments. Function Signature: getFontName()");
if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getFontName'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction="TextExtractorStyle.getFontName";return b.messageHandler.sendWithPromise("TextExtractorStyle.getFontName",{tes:this},this.userPriority).then(function(b){a.yieldFunction=void 0;copyFunc(b.tes,a);return b.result})};
b.TextExtractorStyle.prototype.getFontSize=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFontSize'. Expected 0 arguments. Function Signature: getFontSize()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getFontSize'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction=
"TextExtractorStyle.getFontSize";return b.messageHandler.sendWithPromise("TextExtractorStyle.getFontSize",{tes:this},this.userPriority).then(function(b){a.yieldFunction=void 0;copyFunc(b.tes,a);return b.result})};b.TextExtractorStyle.prototype.getWeight=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getWeight'. Expected 0 arguments. Function Signature: getWeight()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+
" recently altered a struct object without yielding. That object is now being accessed by function 'getWeight'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction="TextExtractorStyle.getWeight";return b.messageHandler.sendWithPromise("TextExtractorStyle.getWeight",{tes:this},this.userPriority).then(function(b){a.yieldFunction=void 0;copyFunc(b.tes,a);return b.result})};b.TextExtractorStyle.prototype.isItalic=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'isItalic'. Expected 0 arguments. Function Signature: isItalic()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'isItalic'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction="TextExtractorStyle.isItalic";return b.messageHandler.sendWithPromise("TextExtractorStyle.isItalic",{tes:this},
this.userPriority).then(function(b){a.yieldFunction=void 0;copyFunc(b.tes,a);return b.result})};b.TextExtractorStyle.prototype.isSerif=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isSerif'. Expected 0 arguments. Function Signature: isSerif()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'isSerif'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");var a=this;this.yieldFunction="TextExtractorStyle.isSerif";return b.messageHandler.sendWithPromise("TextExtractorStyle.isSerif",{tes:this},this.userPriority).then(function(b){a.yieldFunction=void 0;copyFunc(b.tes,a);return b.result})};b.TextExtractorStyle.prototype.compare=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'compare'. Expected 1 argument. Function Signature: compare(TextExtractorStyle)");if(a instanceof
Promise)throw new TypeError("1st input argument in function 'compare' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.TextExtractorStyle)&&"TextExtractorStyle"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'compare' is of type '"+a.name+"'. Expected type 'TextExtractorStyle'. Function Signature: compare(TextExtractorStyle).");throw new TypeError("1st input argument '"+a+"' in function 'compare' is of type '"+
typeof a+"'. Expected type 'TextExtractorStyle'. Function Signature: compare(TextExtractorStyle).");}if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'compare'. Perhaps a yield statement is required for "+this.yieldFunction+"?");if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'compare'. Perhaps a yield statement is required for '"+
a.yieldFunction+"'?");var c=this;this.yieldFunction="TextExtractorStyle.compare";return b.messageHandler.sendWithPromise("TextExtractorStyle.compare",{tes:this,s:a},this.userPriority).then(function(a){c.yieldFunction=void 0;copyFunc(a.tes,c);return a.result})};b.TextExtractorStyle.create=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 0 arguments. Function Signature: create()");return b.messageHandler.sendWithPromise("textExtractorStyleCreate",
{},this.userPriority).then(function(a){return"0"==a?null:new b.TextExtractorStyle(a)})};b.TextExtractorStyle.prototype.copy=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'copy'. Expected 0 arguments. Function Signature: copy()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'copy'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");var a=this;this.yieldFunction="TextExtractorStyle.copy";return b.messageHandler.sendWithPromise("TextExtractorStyle.copy",{s:this},this.userPriority).then(function(c){a.yieldFunction=void 0;if("0"==c)return null;copyFunc(c.s,a);return new b.TextExtractorStyle(c.result.mp_imp)})};b.TextExtractorWord.prototype.getNumGlyphs=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getNumGlyphs'. Expected 0 arguments. Function Signature: getNumGlyphs()");
if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getNumGlyphs'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction="TextExtractorWord.getNumGlyphs";return b.messageHandler.sendWithPromise("TextExtractorWord.getNumGlyphs",{tew:this},this.userPriority).then(function(b){a.yieldFunction=void 0;copyFunc(b.tew,a);return b.result})};
b.TextExtractorWord.prototype.getCharStyle=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getCharStyle'. Expected 1 argument. Function Signature: getCharStyle(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getCharStyle' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getCharStyle' is of type '"+
typeof a+"'. Expected type 'number'. Function Signature: getCharStyle(number).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getCharStyle'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var c=this;this.yieldFunction="TextExtractorWord.getCharStyle";return b.messageHandler.sendWithPromise("TextExtractorWord.getCharStyle",{tew:this,char_idx:a},
this.userPriority).then(function(a){c.yieldFunction=void 0;if("0"==a)return null;copyFunc(a.tew,c);return new b.TextExtractorStyle(a.result.mp_imp)})};b.TextExtractorWord.prototype.getStyle=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getStyle'. Expected 0 arguments. Function Signature: getStyle()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getStyle'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");var a=this;this.yieldFunction="TextExtractorWord.getStyle";return b.messageHandler.sendWithPromise("TextExtractorWord.getStyle",{tew:this},this.userPriority).then(function(c){a.yieldFunction=void 0;if("0"==c)return null;copyFunc(c.tew,a);return new b.TextExtractorStyle(c.result.mp_imp)})};b.TextExtractorWord.prototype.getStringLen=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getStringLen'. Expected 0 arguments. Function Signature: getStringLen()");
if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getStringLen'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction="TextExtractorWord.getStringLen";return b.messageHandler.sendWithPromise("TextExtractorWord.getStringLen",{tew:this},this.userPriority).then(function(b){a.yieldFunction=void 0;copyFunc(b.tew,a);return b.result})};
b.TextExtractorWord.prototype.getNextWord=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getNextWord'. Expected 0 arguments. Function Signature: getNextWord()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getNextWord'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction=
"TextExtractorWord.getNextWord";return b.messageHandler.sendWithPromise("TextExtractorWord.getNextWord",{tew:this},this.userPriority).then(function(c){a.yieldFunction=void 0;if("0"==c)return null;copyFunc(c.tew,a);return new b.TextExtractorWord(c.result.line,c.result.word,c.result.end,c.result.uni,c.result.num,c.result.cur_num,c.result.mp_bld)})};b.TextExtractorWord.prototype.getCurrentNum=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getCurrentNum'. Expected 0 arguments. Function Signature: getCurrentNum()");
if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getCurrentNum'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction="TextExtractorWord.getCurrentNum";return b.messageHandler.sendWithPromise("TextExtractorWord.getCurrentNum",{tew:this},this.userPriority).then(function(b){a.yieldFunction=void 0;copyFunc(b.tew,a);return b.result})};
b.TextExtractorWord.prototype.compare=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'compare'. Expected 1 argument. Function Signature: compare(TextExtractorWord)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'compare' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.TextExtractorWord)&&"TextExtractorWord"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'compare' is of type '"+
a.name+"'. Expected type 'TextExtractorWord'. Function Signature: compare(TextExtractorWord).");throw new TypeError("1st input argument '"+a+"' in function 'compare' is of type '"+typeof a+"'. Expected type 'TextExtractorWord'. Function Signature: compare(TextExtractorWord).");}if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'compare'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'compare'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");var c=this;this.yieldFunction="TextExtractorWord.compare";return b.messageHandler.sendWithPromise("TextExtractorWord.compare",{tew:this,word:a},this.userPriority).then(function(a){c.yieldFunction=
void 0;copyFunc(a.tew,c);return a.result})};b.TextExtractorWord.create=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 0 arguments. Function Signature: create()");return b.messageHandler.sendWithPromise("textExtractorWordCreate",{},this.userPriority).then(function(a){return"0"==a?null:new b.TextExtractorWord(a)})};b.TextExtractorWord.prototype.isValid=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'isValid'. Expected 0 arguments. Function Signature: isValid()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'isValid'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction="TextExtractorWord.isValid";return b.messageHandler.sendWithPromise("TextExtractorWord.isValid",{tew:this},this.userPriority).then(function(b){a.yieldFunction=
void 0;copyFunc(b.tew,a);return b.result})};b.TextExtractorLine.prototype.getNumWords=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getNumWords'. Expected 0 arguments. Function Signature: getNumWords()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getNumWords'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");var a=this;this.yieldFunction="TextExtractorLine.getNumWords";return b.messageHandler.sendWithPromise("TextExtractorLine.getNumWords",{line:this},this.userPriority).then(function(b){a.yieldFunction=void 0;copyFunc(b.line,a);return b.result})};b.TextExtractorLine.prototype.isSimpleLine=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isSimpleLine'. Expected 0 arguments. Function Signature: isSimpleLine()");if("undefined"!==
typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'isSimpleLine'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction="TextExtractorLine.isSimpleLine";return b.messageHandler.sendWithPromise("TextExtractorLine.isSimpleLine",{line:this},this.userPriority).then(function(b){a.yieldFunction=void 0;copyFunc(b.line,a);return b.result})};b.TextExtractorLine.prototype.getQuad=
function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getQuad'. Expected 0 arguments. Function Signature: getQuad()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getQuad'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction="TextExtractorLine.getQuad";return b.messageHandler.sendWithPromise("TextExtractorLine.getQuad",
{line:this},this.userPriority).then(function(b){a.yieldFunction=void 0;copyFunc(b.line,a)})};b.TextExtractorLine.prototype.getFirstWord=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFirstWord'. Expected 0 arguments. Function Signature: getFirstWord()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getFirstWord'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");var a=this;this.yieldFunction="TextExtractorLine.getFirstWord";return b.messageHandler.sendWithPromise("TextExtractorLine.getFirstWord",{line:this},this.userPriority).then(function(c){a.yieldFunction=void 0;if("0"==c)return null;copyFunc(c.line,a);return new b.TextExtractorWord(c.result.line,c.result.word,c.result.end,c.result.uni,c.result.num,c.result.cur_num,c.result.mp_bld)})};b.TextExtractorLine.prototype.getWord=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getWord'. Expected 1 argument. Function Signature: getWord(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getWord' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getWord' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getWord(number).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+
this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getWord'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var c=this;this.yieldFunction="TextExtractorLine.getWord";return b.messageHandler.sendWithPromise("TextExtractorLine.getWord",{line:this,word_idx:a},this.userPriority).then(function(a){c.yieldFunction=void 0;if("0"==a)return null;copyFunc(a.line,c);return new b.TextExtractorWord(a.result.line,a.result.word,
a.result.end,a.result.uni,a.result.num,a.result.cur_num,a.result.mp_bld)})};b.TextExtractorLine.prototype.getNextLine=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getNextLine'. Expected 0 arguments. Function Signature: getNextLine()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getNextLine'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");var a=this;this.yieldFunction="TextExtractorLine.getNextLine";return b.messageHandler.sendWithPromise("TextExtractorLine.getNextLine",{line:this},this.userPriority).then(function(c){a.yieldFunction=void 0;if("0"==c)return null;copyFunc(c.line,a);return new b.TextExtractorLine(c.result.line,c.result.uni,c.result.num,c.result.cur_num,c.result.m_direction,c.result.mp_bld)})};b.TextExtractorLine.prototype.getCurrentNum=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getCurrentNum'. Expected 0 arguments. Function Signature: getCurrentNum()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getCurrentNum'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction="TextExtractorLine.getCurrentNum";return b.messageHandler.sendWithPromise("TextExtractorLine.getCurrentNum",
{line:this},this.userPriority).then(function(b){a.yieldFunction=void 0;copyFunc(b.line,a);return b.result})};b.TextExtractorLine.prototype.getStyle=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getStyle'. Expected 0 arguments. Function Signature: getStyle()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getStyle'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");var a=this;this.yieldFunction="TextExtractorLine.getStyle";return b.messageHandler.sendWithPromise("TextExtractorLine.getStyle",{line:this},this.userPriority).then(function(c){a.yieldFunction=void 0;if("0"==c)return null;copyFunc(c.line,a);return new b.TextExtractorStyle(c.result.mp_imp)})};b.TextExtractorLine.prototype.getParagraphID=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getParagraphID'. Expected 0 arguments. Function Signature: getParagraphID()");
if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getParagraphID'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction="TextExtractorLine.getParagraphID";return b.messageHandler.sendWithPromise("TextExtractorLine.getParagraphID",{line:this},this.userPriority).then(function(b){a.yieldFunction=void 0;copyFunc(b.line,a);
return b.result})};b.TextExtractorLine.prototype.getFlowID=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFlowID'. Expected 0 arguments. Function Signature: getFlowID()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getFlowID'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=
this;this.yieldFunction="TextExtractorLine.getFlowID";return b.messageHandler.sendWithPromise("TextExtractorLine.getFlowID",{line:this},this.userPriority).then(function(b){a.yieldFunction=void 0;copyFunc(b.line,a);return b.result})};b.TextExtractorLine.prototype.endsWithHyphen=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'endsWithHyphen'. Expected 0 arguments. Function Signature: endsWithHyphen()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+
this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'endsWithHyphen'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction="TextExtractorLine.endsWithHyphen";return b.messageHandler.sendWithPromise("TextExtractorLine.endsWithHyphen",{line:this},this.userPriority).then(function(b){a.yieldFunction=void 0;copyFunc(b.line,a);return b.result})};b.TextExtractorLine.prototype.compare=function(a){if(1!=
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'compare'. Expected 1 argument. Function Signature: compare(TextExtractorLine)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'compare' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.TextExtractorLine)&&"TextExtractorLine"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'compare' is of type '"+
a.name+"'. Expected type 'TextExtractorLine'. Function Signature: compare(TextExtractorLine).");throw new TypeError("1st input argument '"+a+"' in function 'compare' is of type '"+typeof a+"'. Expected type 'TextExtractorLine'. Function Signature: compare(TextExtractorLine).");}if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'compare'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'compare'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");var c=this;this.yieldFunction="TextExtractorLine.compare";return b.messageHandler.sendWithPromise("TextExtractorLine.compare",{line:this,line2:a},this.userPriority).then(function(a){c.yieldFunction=
void 0;copyFunc(a.line,c);return a.result})};b.TextExtractorLine.create=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 0 arguments. Function Signature: create()");return b.messageHandler.sendWithPromise("textExtractorLineCreate",{},this.userPriority).then(function(a){return"0"==a?null:new b.TextExtractorLine(a)})};b.TextExtractorLine.prototype.isValid=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'isValid'. Expected 0 arguments. Function Signature: isValid()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'isValid'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction="TextExtractorLine.isValid";return b.messageHandler.sendWithPromise("TextExtractorLine.isValid",{line:this},this.userPriority).then(function(b){a.yieldFunction=
void 0;copyFunc(b.line,a);return b.result})};b.TextExtractor.prototype.getNumLines=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getNumLines'. Expected 0 arguments. Function Signature: getNumLines()");return b.messageHandler.sendWithPromise("TextExtractor.getNumLines",{te:this.id},this.userPriority)};b.TextExtractor.prototype.getFirstLine=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFirstLine'. Expected 0 arguments. Function Signature: getFirstLine()");
return b.messageHandler.sendWithPromise("TextExtractor.getFirstLine",{te:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.TextExtractorLine(a)})};b.TextExtractor.prototype.getQuads=function(a,c,d){if(3!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getQuads'. Expected 3 arguments. Function Signature: getQuads(Matrix2D, number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getQuads' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Matrix2D)&&"Matrix2D"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'getQuads' is of type '"+a.name+"'. Expected type 'Matrix2D'. Function Signature: getQuads(Matrix2D, number, number).");throw new TypeError("1st input argument '"+a+"' in function 'getQuads' is of type '"+typeof a+"'. Expected type 'Matrix2D'. Function Signature: getQuads(Matrix2D, number, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'getQuads' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'getQuads' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: getQuads(Matrix2D, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'getQuads' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'getQuads' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: getQuads(Matrix2D, number, number).");
if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'getQuads'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");var e=this;this.yieldFunction="TextExtractor.getQuads";return b.messageHandler.sendWithPromise("TextExtractor.getQuads",{te:this.id,mtx:a,quads:c,quads_size:d},this.userPriority).then(function(a){e.yieldFunction=void 0;
copyFunc(a.mtx,e)})};b.TextSearch.create=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 0 arguments. Function Signature: create()");return b.messageHandler.sendWithPromise("textSearchCreate",{},this.userPriority).then(function(a){if("0"==a)return null;a=new b.TextSearch(a);createdObjects.push({name:a.name,id:a.id});return a})};b.TextSearch.prototype.destroy=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("TextSearch.destroy",
{auto_dealloc_obj:this.id},this.userPriority)};b.TextSearch.prototype.begin=function(a,c,d,e,f){"undefined"===typeof e&&(e=-1);"undefined"===typeof f&&(f=-1);if(3>arguments.length||5<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'begin'. Expected 3 to 5 arguments. Function Signature: begin(PDFDoc, string, number, number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'begin' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'begin' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: begin(PDFDoc, string, number, number, number).");throw new TypeError("1st input argument '"+a+"' in function 'begin' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: begin(PDFDoc, string, number, number, number).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'begin' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'begin' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: begin(PDFDoc, string, number, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'begin' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'begin' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: begin(PDFDoc, string, number, number, number).");
if(e instanceof Promise)throw new TypeError("4th input argument in function 'begin' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof e)throw new TypeError("4th input argument '"+e+"' in function 'begin' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: begin(PDFDoc, string, number, number, number).");if(f instanceof Promise)throw new TypeError("5th input argument in function 'begin' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof f)throw new TypeError("5th input argument '"+f+"' in function 'begin' is of type '"+typeof f+"'. Expected type 'number'. Function Signature: begin(PDFDoc, string, number, number, number).");return b.messageHandler.sendWithPromise("TextSearch.begin",{ts:this.id,doc:a.id,pattern:c,mode:d,start_page:e,end_page:f},this.userPriority)};b.TextSearch.prototype.setPattern=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPattern'. Expected 1 argument. Function Signature: setPattern(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPattern' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setPattern' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setPattern(string).");return b.messageHandler.sendWithPromise("TextSearch.setPattern",{ts:this.id,pattern:a},this.userPriority)};b.TextSearch.prototype.getMode=function(){if(0!=
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getMode'. Expected 0 arguments. Function Signature: getMode()");return b.messageHandler.sendWithPromise("TextSearch.getMode",{ts:this.id},this.userPriority)};b.TextSearch.prototype.setMode=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setMode'. Expected 1 argument. Function Signature: setMode(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setMode' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setMode' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setMode(number).");return b.messageHandler.sendWithPromise("TextSearch.setMode",{ts:this.id,mode:a},this.userPriority)};b.TextSearch.prototype.setRightToLeftLanguage=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setRightToLeftLanguage'. Expected 1 argument. Function Signature: setRightToLeftLanguage(boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setRightToLeftLanguage' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setRightToLeftLanguage' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setRightToLeftLanguage(boolean).");return b.messageHandler.sendWithPromise("TextSearch.setRightToLeftLanguage",{ts:this.id,flag:a},this.userPriority)};
b.TextSearch.prototype.getCurrentPage=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getCurrentPage'. Expected 0 arguments. Function Signature: getCurrentPage()");return b.messageHandler.sendWithPromise("TextSearch.getCurrentPage",{ts:this.id},this.userPriority)};b.NameTree.create=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 2 arguments. Function Signature: create(SDFDoc, string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: create(SDFDoc, string).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+
typeof a+"'. Expected type 'SDFDoc'. Function Signature: create(SDFDoc, string).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'create' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: create(SDFDoc, string).");return b.messageHandler.sendWithPromise("nameTreeCreate",{doc:a.id,
name:c},this.userPriority).then(function(a){return"0"==a?null:new b.NameTree(a)})};b.NameTree.find=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'find'. Expected 2 arguments. Function Signature: find(SDFDoc, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'find' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof
b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'find' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: find(SDFDoc, string).");throw new TypeError("1st input argument '"+a+"' in function 'find' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: find(SDFDoc, string).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'find' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'find' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: find(SDFDoc, string).");return b.messageHandler.sendWithPromise("nameTreeFind",{doc:a.id,name:c},this.userPriority).then(function(a){return"0"==a?null:new b.NameTree(a)})};b.NameTree.createFromObj=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromObj'. Expected 1 argument. Function Signature: createFromObj(Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: createFromObj(Obj).");
}return b.messageHandler.sendWithPromise("nameTreeCreateFromObj",{name_tree:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.NameTree(a)})};b.NameTree.prototype.copy=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'copy'. Expected 0 arguments. Function Signature: copy()");return b.messageHandler.sendWithPromise("NameTree.copy",{d:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.NameTree(a)})};b.NameTree.prototype.isValid=
function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isValid'. Expected 0 arguments. Function Signature: isValid()");return b.messageHandler.sendWithPromise("NameTree.isValid",{tree:this.id},this.userPriority)};b.NameTree.prototype.getIterator=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getIterator'. Expected 1 argument. Function Signature: getIterator(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getIterator' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getIterator' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: getIterator(string).");return b.messageHandler.sendWithPromise("NameTree.getIterator",{tree:this.id,key:a},this.userPriority).then(function(a){if("0"==a)return null;a=new b.DictIterator(a);createdObjects.push({name:a.name,id:a.id});return a})};b.NameTree.prototype.getValue=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getValue'. Expected 1 argument. Function Signature: getValue(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getValue' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getValue' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: getValue(string).");return b.messageHandler.sendWithPromise("NameTree.getValue",
{tree:this.id,key:a},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.NameTree.prototype.getIteratorBegin=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getIteratorBegin'. Expected 0 arguments. Function Signature: getIteratorBegin()");return b.messageHandler.sendWithPromise("NameTree.getIteratorBegin",{tree:this.id},this.userPriority).then(function(a){if("0"==a)return null;a=new b.DictIterator(a);createdObjects.push({name:a.name,
id:a.id});return a})};b.NameTree.prototype.put=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'put'. Expected 2 arguments. Function Signature: put(string, Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'put' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'put' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: put(string, Obj).");
if(c instanceof Promise)throw new TypeError("2nd input argument in function 'put' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Obj)){if("object"==typeof c)throw new TypeError("2nd input argument in function 'put' is of type '"+c.name+"'. Expected type 'Obj'. Function Signature: put(string, Obj).");throw new TypeError("2nd input argument '"+c+"' in function 'put' is of type '"+typeof c+"'. Expected type 'Obj'. Function Signature: put(string, Obj).");
}return b.messageHandler.sendWithPromise("NameTree.put",{tree:this.id,key:a,value:c.id},this.userPriority)};b.NameTree.prototype.eraseKey=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'eraseKey'. Expected 1 argument. Function Signature: eraseKey(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'eraseKey' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'eraseKey' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: eraseKey(string).");return b.messageHandler.sendWithPromise("NameTree.eraseKey",{tree:this.id,key:a},this.userPriority)};b.NameTree.prototype.erase=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'erase'. Expected 1 argument. Function Signature: erase(DictIterator)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'erase' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.DictIterator)){if("object"==typeof a)throw new TypeError("1st input argument in function 'erase' is of type '"+a.name+"'. Expected type 'DictIterator'. Function Signature: erase(DictIterator).");throw new TypeError("1st input argument '"+a+"' in function 'erase' is of type '"+typeof a+"'. Expected type 'DictIterator'. Function Signature: erase(DictIterator).");}return b.messageHandler.sendWithPromise("NameTree.erase",{tree:this.id,pos:a.id},this.userPriority)};b.NameTree.prototype.getSDFObj=
function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSDFObj'. Expected 0 arguments. Function Signature: getSDFObj()");return b.messageHandler.sendWithPromise("NameTree.getSDFObj",{tree:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.NumberTree.create=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 1 argument. Function Signature: create(Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'create' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: create(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: create(Obj).");
}return b.messageHandler.sendWithPromise("numberTreeCreate",{number_tree:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.NumberTree(a)})};b.NumberTree.prototype.copy=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'copy'. Expected 0 arguments. Function Signature: copy()");return b.messageHandler.sendWithPromise("NumberTree.copy",{tree:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.NumberTree(a)})};b.NumberTree.prototype.isValid=
function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isValid'. Expected 0 arguments. Function Signature: isValid()");return b.messageHandler.sendWithPromise("NumberTree.isValid",{tree:this.id},this.userPriority)};b.NumberTree.prototype.getIterator=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getIterator'. Expected 1 argument. Function Signature: getIterator(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getIterator' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getIterator' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getIterator(number).");return b.messageHandler.sendWithPromise("NumberTree.getIterator",{tree:this.id,key:a},this.userPriority).then(function(a){if("0"==a)return null;a=new b.DictIterator(a);createdObjects.push({name:a.name,id:a.id});return a})};b.NumberTree.prototype.getValue=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getValue'. Expected 1 argument. Function Signature: getValue(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getValue' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getValue' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getValue(number).");return b.messageHandler.sendWithPromise("NumberTree.getValue",
{tree:this.id,key:a},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.NumberTree.prototype.getIteratorBegin=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getIteratorBegin'. Expected 0 arguments. Function Signature: getIteratorBegin()");return b.messageHandler.sendWithPromise("NumberTree.getIteratorBegin",{tree:this.id},this.userPriority).then(function(a){if("0"==a)return null;a=new b.DictIterator(a);createdObjects.push({name:a.name,
id:a.id});return a})};b.NumberTree.prototype.put=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'put'. Expected 2 arguments. Function Signature: put(number, Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'put' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'put' is of type '"+typeof a+
"'. Expected type 'number'. Function Signature: put(number, Obj).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'put' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Obj)){if("object"==typeof c)throw new TypeError("2nd input argument in function 'put' is of type '"+c.name+"'. Expected type 'Obj'. Function Signature: put(number, Obj).");throw new TypeError("2nd input argument '"+c+"' in function 'put' is of type '"+
typeof c+"'. Expected type 'Obj'. Function Signature: put(number, Obj).");}return b.messageHandler.sendWithPromise("NumberTree.put",{tree:this.id,key:a,value:c.id},this.userPriority)};b.NumberTree.prototype.eraseKey=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'eraseKey'. Expected 1 argument. Function Signature: eraseKey(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'eraseKey' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'eraseKey' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: eraseKey(number).");return b.messageHandler.sendWithPromise("NumberTree.eraseKey",{tree:this.id,key:a},this.userPriority)};b.NumberTree.prototype.erase=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'erase'. Expected 1 argument. Function Signature: erase(DictIterator)");if(a instanceof
Promise)throw new TypeError("1st input argument in function 'erase' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.DictIterator)){if("object"==typeof a)throw new TypeError("1st input argument in function 'erase' is of type '"+a.name+"'. Expected type 'DictIterator'. Function Signature: erase(DictIterator).");throw new TypeError("1st input argument '"+a+"' in function 'erase' is of type '"+typeof a+"'. Expected type 'DictIterator'. Function Signature: erase(DictIterator).");
}return b.messageHandler.sendWithPromise("NumberTree.erase",{tree:this.id,pos:a.id},this.userPriority)};b.NumberTree.prototype.getSDFObj=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getSDFObj'. Expected 0 arguments. Function Signature: getSDFObj()");return b.messageHandler.sendWithPromise("NumberTree.getSDFObj",{tree:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Obj.prototype.getType=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getType'. Expected 0 arguments. Function Signature: getType()");return b.messageHandler.sendWithPromise("Obj.getType",{o:this.id},this.userPriority)};b.Obj.prototype.getDoc=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getDoc'. Expected 0 arguments. Function Signature: getDoc()");return b.messageHandler.sendWithPromise("Obj.getDoc",{o:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.SDFDoc(a)})};
b.Obj.prototype.write=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'write'. Expected 1 argument. Function Signature: write(FilterWriter)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'write' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.FilterWriter)){if("object"==typeof a)throw new TypeError("1st input argument in function 'write' is of type '"+a.name+
"'. Expected type 'FilterWriter'. Function Signature: write(FilterWriter).");throw new TypeError("1st input argument '"+a+"' in function 'write' is of type '"+typeof a+"'. Expected type 'FilterWriter'. Function Signature: write(FilterWriter).");}return b.messageHandler.sendWithPromise("Obj.write",{o:this.id,stream:a.id},this.userPriority)};b.Obj.prototype.isEqual=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isEqual'. Expected 1 argument. Function Signature: isEqual(Obj)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'isEqual' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'isEqual' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: isEqual(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'isEqual' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: isEqual(Obj).");
}return b.messageHandler.sendWithPromise("Obj.isEqual",{o:this.id,to:a.id},this.userPriority)};b.Obj.prototype.isBool=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isBool'. Expected 0 arguments. Function Signature: isBool()");return b.messageHandler.sendWithPromise("Obj.isBool",{o:this.id},this.userPriority)};b.Obj.prototype.getBool=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getBool'. Expected 0 arguments. Function Signature: getBool()");
return b.messageHandler.sendWithPromise("Obj.getBool",{o:this.id},this.userPriority)};b.Obj.prototype.setBool=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setBool'. Expected 1 argument. Function Signature: setBool(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setBool' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'setBool' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setBool(boolean).");return b.messageHandler.sendWithPromise("Obj.setBool",{o:this.id,b:a},this.userPriority)};b.Obj.prototype.isNumber=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isNumber'. Expected 0 arguments. Function Signature: isNumber()");return b.messageHandler.sendWithPromise("Obj.isNumber",{o:this.id},this.userPriority)};b.Obj.prototype.getNumber=
function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getNumber'. Expected 0 arguments. Function Signature: getNumber()");return b.messageHandler.sendWithPromise("Obj.getNumber",{o:this.id},this.userPriority)};b.Obj.prototype.setNumber=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setNumber'. Expected 1 argument. Function Signature: setNumber(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setNumber' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setNumber' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setNumber(number).");return b.messageHandler.sendWithPromise("Obj.setNumber",{o:this.id,n:a},this.userPriority)};b.Obj.prototype.isNull=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isNull'. Expected 0 arguments. Function Signature: isNull()");return b.messageHandler.sendWithPromise("Obj.isNull",
{o:this.id},this.userPriority)};b.Obj.prototype.isString=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isString'. Expected 0 arguments. Function Signature: isString()");return b.messageHandler.sendWithPromise("Obj.isString",{o:this.id},this.userPriority)};b.Obj.prototype.getRawBuffer=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getRawBuffer'. Expected 0 arguments. Function Signature: getRawBuffer()");
return b.messageHandler.sendWithPromise("Obj.getRawBuffer",{o:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Vector(a)})};b.Obj.prototype.getBuffer=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getBuffer'. Expected 0 arguments. Function Signature: getBuffer()");return b.messageHandler.sendWithPromise("Obj.getBuffer",{o:this.id},this.userPriority)};b.Obj.prototype.setString=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'setString'. Expected 1 argument. Function Signature: setString(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setString' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setString' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setString(string).");return b.messageHandler.sendWithPromise("Obj.setString",
{o:this.id,value:a},this.userPriority)};b.Obj.prototype.setUString=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setUString'. Expected 1 argument. Function Signature: setUString(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setUString' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setUString' is of type '"+
typeof a+"'. Expected type 'string'. Function Signature: setUString(string).");return b.messageHandler.sendWithPromise("Obj.setUString",{o:this.id,value:a},this.userPriority)};b.Obj.prototype.isName=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isName'. Expected 0 arguments. Function Signature: isName()");return b.messageHandler.sendWithPromise("Obj.isName",{o:this.id},this.userPriority)};b.Obj.prototype.getName=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getName'. Expected 0 arguments. Function Signature: getName()");return b.messageHandler.sendWithPromise("Obj.getName",{o:this.id},this.userPriority)};b.Obj.prototype.setName=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setName'. Expected 1 argument. Function Signature: setName(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setName' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setName' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setName(string).");return b.messageHandler.sendWithPromise("Obj.setName",{o:this.id,name:a},this.userPriority)};b.Obj.prototype.isIndirect=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isIndirect'. Expected 0 arguments. Function Signature: isIndirect()");return b.messageHandler.sendWithPromise("Obj.isIndirect",
{o:this.id},this.userPriority)};b.Obj.prototype.getObjNum=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getObjNum'. Expected 0 arguments. Function Signature: getObjNum()");return b.messageHandler.sendWithPromise("Obj.getObjNum",{o:this.id},this.userPriority)};b.Obj.prototype.getGenNum=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getGenNum'. Expected 0 arguments. Function Signature: getGenNum()");
return b.messageHandler.sendWithPromise("Obj.getGenNum",{o:this.id},this.userPriority)};b.Obj.prototype.getOffset=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getOffset'. Expected 0 arguments. Function Signature: getOffset()");return b.messageHandler.sendWithPromise("Obj.getOffset",{o:this.id},this.userPriority)};b.Obj.prototype.isFree=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isFree'. Expected 0 arguments. Function Signature: isFree()");
return b.messageHandler.sendWithPromise("Obj.isFree",{o:this.id},this.userPriority)};b.Obj.prototype.setMark=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setMark'. Expected 1 argument. Function Signature: setMark(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setMark' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'setMark' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setMark(boolean).");return b.messageHandler.sendWithPromise("Obj.setMark",{o:this.id,mark:a},this.userPriority)};b.Obj.prototype.isMarked=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isMarked'. Expected 0 arguments. Function Signature: isMarked()");return b.messageHandler.sendWithPromise("Obj.isMarked",{o:this.id},this.userPriority)};b.Obj.prototype.isLoaded=
function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isLoaded'. Expected 0 arguments. Function Signature: isLoaded()");return b.messageHandler.sendWithPromise("Obj.isLoaded",{o:this.id},this.userPriority)};b.Obj.prototype.isContainer=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isContainer'. Expected 0 arguments. Function Signature: isContainer()");return b.messageHandler.sendWithPromise("Obj.isContainer",
{o:this.id},this.userPriority)};b.Obj.prototype.size=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'size'. Expected 0 arguments. Function Signature: size()");return b.messageHandler.sendWithPromise("Obj.size",{o:this.id},this.userPriority)};b.Obj.prototype.getDictIterator=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getDictIterator'. Expected 0 arguments. Function Signature: getDictIterator()");
return b.messageHandler.sendWithPromise("Obj.getDictIterator",{o:this.id},this.userPriority).then(function(a){if("0"==a)return null;a=new b.DictIterator(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Obj.prototype.isDict=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isDict'. Expected 0 arguments. Function Signature: isDict()");return b.messageHandler.sendWithPromise("Obj.isDict",{o:this.id},this.userPriority)};b.Obj.prototype.find=
function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'find'. Expected 1 argument. Function Signature: find(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'find' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'find' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: find(string).");
return b.messageHandler.sendWithPromise("Obj.find",{o:this.id,key:a},this.userPriority).then(function(a){if("0"==a)return null;a=new b.DictIterator(a);createdObjects.push({name:a.name,id:a.id});return a})};b.Obj.prototype.findObj=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'findObj'. Expected 1 argument. Function Signature: findObj(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'findObj' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'findObj' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: findObj(string).");return b.messageHandler.sendWithPromise("Obj.findObj",{o:this.id,key:a},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Obj.prototype.get=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'get'. Expected 1 argument. Function Signature: get(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'get' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'get' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: get(string).");return b.messageHandler.sendWithPromise("Obj.get",{o:this.id,key:a},this.userPriority).then(function(a){if("0"==a)return null;a=new b.DictIterator(a);createdObjects.push({name:a.name,
id:a.id});return a})};b.Obj.prototype.putName=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'putName'. Expected 2 arguments. Function Signature: putName(string, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'putName' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'putName' is of type '"+
typeof a+"'. Expected type 'string'. Function Signature: putName(string, string).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'putName' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'putName' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: putName(string, string).");return b.messageHandler.sendWithPromise("Obj.putName",{o:this.id,
key:a,name:c},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Obj.prototype.putArray=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'putArray'. Expected 1 argument. Function Signature: putArray(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'putArray' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'putArray' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: putArray(string).");return b.messageHandler.sendWithPromise("Obj.putArray",{o:this.id,key:a},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Obj.prototype.putBool=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'putBool'. Expected 2 arguments. Function Signature: putBool(string, boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'putBool' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'putBool' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: putBool(string, boolean).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'putBool' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'putBool' is of type '"+typeof c+"'. Expected type 'boolean'. Function Signature: putBool(string, boolean).");
return b.messageHandler.sendWithPromise("Obj.putBool",{o:this.id,key:a,value:c},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Obj.prototype.putDict=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'putDict'. Expected 1 argument. Function Signature: putDict(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'putDict' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'putDict' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: putDict(string).");return b.messageHandler.sendWithPromise("Obj.putDict",{o:this.id,key:a},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Obj.prototype.putNumber=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'putNumber'. Expected 2 arguments. Function Signature: putNumber(string, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'putNumber' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'putNumber' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: putNumber(string, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'putNumber' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'putNumber' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: putNumber(string, number).");return b.messageHandler.sendWithPromise("Obj.putNumber",{o:this.id,key:a,value:c},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Obj.prototype.putString=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'putString'. Expected 2 arguments. Function Signature: putString(string, string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'putString' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'putString' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: putString(string, string).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'putString' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'putString' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: putString(string, string).");return b.messageHandler.sendWithPromise("Obj.putString",{o:this.id,key:a,value:c},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Obj.prototype.putStringWithSize=function(a,c,d){if(3!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'putStringWithSize'. Expected 3 arguments. Function Signature: putStringWithSize(string, string, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'putStringWithSize' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'putStringWithSize' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: putStringWithSize(string, string, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'putStringWithSize' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'putStringWithSize' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: putStringWithSize(string, string, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'putStringWithSize' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'putStringWithSize' is of type '"+
typeof d+"'. Expected type 'number'. Function Signature: putStringWithSize(string, string, number).");return b.messageHandler.sendWithPromise("Obj.putStringWithSize",{o:this.id,key:a,value:c,size:d},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Obj.prototype.putText=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'putText'. Expected 2 arguments. Function Signature: putText(string, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'putText' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'putText' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: putText(string, string).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'putText' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'putText' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: putText(string, string).");
return b.messageHandler.sendWithPromise("Obj.putText",{o:this.id,key:a,t:c},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Obj.prototype.putNull=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'putNull'. Expected 1 argument. Function Signature: putNull(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'putNull' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'putNull' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: putNull(string).");return b.messageHandler.sendWithPromise("Obj.putNull",{o:this.id,key:a},this.userPriority)};b.Obj.prototype.put=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'put'. Expected 2 arguments. Function Signature: put(string, Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'put' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'put' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: put(string, Obj).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'put' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Obj)){if("object"==typeof c)throw new TypeError("2nd input argument in function 'put' is of type '"+c.name+"'. Expected type 'Obj'. Function Signature: put(string, Obj).");
throw new TypeError("2nd input argument '"+c+"' in function 'put' is of type '"+typeof c+"'. Expected type 'Obj'. Function Signature: put(string, Obj).");}return b.messageHandler.sendWithPromise("Obj.put",{o:this.id,key:a,input_obj:c.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Obj.prototype.putRect=function(a,c,d,e,f){if(5!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'putRect'. Expected 5 arguments. Function Signature: putRect(string, number, number, number, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'putRect' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'putRect' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: putRect(string, number, number, number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'putRect' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'putRect' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: putRect(string, number, number, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'putRect' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'putRect' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: putRect(string, number, number, number, number).");
if(e instanceof Promise)throw new TypeError("4th input argument in function 'putRect' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof e)throw new TypeError("4th input argument '"+e+"' in function 'putRect' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: putRect(string, number, number, number, number).");if(f instanceof Promise)throw new TypeError("5th input argument in function 'putRect' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof f)throw new TypeError("5th input argument '"+f+"' in function 'putRect' is of type '"+typeof f+"'. Expected type 'number'. Function Signature: putRect(string, number, number, number, number).");return b.messageHandler.sendWithPromise("Obj.putRect",{o:this.id,key:a,x1:c,y1:d,x2:e,y2:f},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Obj.prototype.putMatrix=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'putMatrix'. Expected 2 arguments. Function Signature: putMatrix(string, Matrix2D)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'putMatrix' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'putMatrix' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: putMatrix(string, Matrix2D).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'putMatrix' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.Matrix2D)&&"Matrix2D"!=c.name){if("object"==typeof c)throw new TypeError("2nd input argument in function 'putMatrix' is of type '"+c.name+"'. Expected type 'Matrix2D'. Function Signature: putMatrix(string, Matrix2D).");throw new TypeError("2nd input argument '"+c+"' in function 'putMatrix' is of type '"+typeof c+"'. Expected type 'Matrix2D'. Function Signature: putMatrix(string, Matrix2D).");}if("undefined"!=typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'putMatrix'. Perhaps a yield statement is required for '"+
c.yieldFunction+"'?");var d=this;this.yieldFunction="Obj.putMatrix";return b.messageHandler.sendWithPromise("Obj.putMatrix",{o:this.id,key:a,mtx:c},this.userPriority).then(function(a){d.yieldFunction=void 0;if("0"==a)return null;copyFunc(a.mtx,d);return new b.Obj(a.result)})};b.Obj.prototype.eraseFromKey=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'eraseFromKey'. Expected 1 argument. Function Signature: eraseFromKey(string)");if(a instanceof
Promise)throw new TypeError("1st input argument in function 'eraseFromKey' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'eraseFromKey' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: eraseFromKey(string).");return b.messageHandler.sendWithPromise("Obj.eraseFromKey",{o:this.id,key:a},this.userPriority)};b.Obj.prototype.erase=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'erase'. Expected 1 argument. Function Signature: erase(DictIterator)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'erase' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.DictIterator)){if("object"==typeof a)throw new TypeError("1st input argument in function 'erase' is of type '"+a.name+"'. Expected type 'DictIterator'. Function Signature: erase(DictIterator).");throw new TypeError("1st input argument '"+
a+"' in function 'erase' is of type '"+typeof a+"'. Expected type 'DictIterator'. Function Signature: erase(DictIterator).");}return b.messageHandler.sendWithPromise("Obj.erase",{o:this.id,pos:a.id},this.userPriority)};b.Obj.prototype.rename=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'rename'. Expected 2 arguments. Function Signature: rename(string, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'rename' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'rename' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: rename(string, string).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'rename' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'rename' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: rename(string, string).");
return b.messageHandler.sendWithPromise("Obj.rename",{o:this.id,old_key:a,new_key:c},this.userPriority)};b.Obj.prototype.isArray=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isArray'. Expected 0 arguments. Function Signature: isArray()");return b.messageHandler.sendWithPromise("Obj.isArray",{o:this.id},this.userPriority)};b.Obj.prototype.getAt=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getAt'. Expected 1 argument. Function Signature: getAt(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'getAt' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getAt' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getAt(number).");return b.messageHandler.sendWithPromise("Obj.getAt",{o:this.id,index:a},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Obj.prototype.insertName=
function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'insertName'. Expected 2 arguments. Function Signature: insertName(number, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'insertName' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'insertName' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: insertName(number, string).");
if(c instanceof Promise)throw new TypeError("2nd input argument in function 'insertName' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'insertName' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: insertName(number, string).");return b.messageHandler.sendWithPromise("Obj.insertName",{o:this.id,pos:a,name:c},this.userPriority).then(function(a){return"0"==a?null:
new b.Obj(a)})};b.Obj.prototype.insertArray=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'insertArray'. Expected 1 argument. Function Signature: insertArray(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'insertArray' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'insertArray' is of type '"+
typeof a+"'. Expected type 'number'. Function Signature: insertArray(number).");return b.messageHandler.sendWithPromise("Obj.insertArray",{o:this.id,pos:a},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Obj.prototype.insertBool=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'insertBool'. Expected 2 arguments. Function Signature: insertBool(number, boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'insertBool' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'insertBool' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: insertBool(number, boolean).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'insertBool' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'insertBool' is of type '"+typeof c+"'. Expected type 'boolean'. Function Signature: insertBool(number, boolean).");
return b.messageHandler.sendWithPromise("Obj.insertBool",{o:this.id,pos:a,value:c},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Obj.prototype.insertDict=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'insertDict'. Expected 1 argument. Function Signature: insertDict(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'insertDict' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'insertDict' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: insertDict(number).");return b.messageHandler.sendWithPromise("Obj.insertDict",{o:this.id,pos:a},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Obj.prototype.insertNumber=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'insertNumber'. Expected 2 arguments. Function Signature: insertNumber(number, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'insertNumber' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'insertNumber' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: insertNumber(number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'insertNumber' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'insertNumber' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: insertNumber(number, number).");return b.messageHandler.sendWithPromise("Obj.insertNumber",{o:this.id,pos:a,value:c},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Obj.prototype.insertString=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'insertString'. Expected 2 arguments. Function Signature: insertString(number, string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'insertString' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'insertString' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: insertString(number, string).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'insertString' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'insertString' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: insertString(number, string).");return b.messageHandler.sendWithPromise("Obj.insertString",{o:this.id,pos:a,value:c},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Obj.prototype.insertStringWithSize=function(a,c,d){if(3!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'insertStringWithSize'. Expected 3 arguments. Function Signature: insertStringWithSize(number, string, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'insertStringWithSize' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'insertStringWithSize' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: insertStringWithSize(number, string, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'insertStringWithSize' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'insertStringWithSize' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: insertStringWithSize(number, string, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'insertStringWithSize' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'insertStringWithSize' is of type '"+
typeof d+"'. Expected type 'number'. Function Signature: insertStringWithSize(number, string, number).");return b.messageHandler.sendWithPromise("Obj.insertStringWithSize",{o:this.id,pos:a,value:c,size:d},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Obj.prototype.insertText=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'insertText'. Expected 2 arguments. Function Signature: insertText(number, string)");if(a instanceof
Promise)throw new TypeError("1st input argument in function 'insertText' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'insertText' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: insertText(number, string).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'insertText' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'insertText' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: insertText(number, string).");return b.messageHandler.sendWithPromise("Obj.insertText",{o:this.id,pos:a,t:c},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Obj.prototype.insertNull=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'insertNull'. Expected 1 argument. Function Signature: insertNull(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'insertNull' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'insertNull' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: insertNull(number).");return b.messageHandler.sendWithPromise("Obj.insertNull",{o:this.id,pos:a},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};
b.Obj.prototype.insert=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'insert'. Expected 2 arguments. Function Signature: insert(number, Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'insert' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'insert' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: insert(number, Obj).");
if(c instanceof Promise)throw new TypeError("2nd input argument in function 'insert' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Obj)){if("object"==typeof c)throw new TypeError("2nd input argument in function 'insert' is of type '"+c.name+"'. Expected type 'Obj'. Function Signature: insert(number, Obj).");throw new TypeError("2nd input argument '"+c+"' in function 'insert' is of type '"+typeof c+"'. Expected type 'Obj'. Function Signature: insert(number, Obj).");
}return b.messageHandler.sendWithPromise("Obj.insert",{o:this.id,pos:a,input_obj:c.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Obj.prototype.insertRect=function(a,c,d,e,f){if(5!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'insertRect'. Expected 5 arguments. Function Signature: insertRect(number, number, number, number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'insertRect' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'insertRect' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: insertRect(number, number, number, number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'insertRect' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'insertRect' is of type '"+
typeof c+"'. Expected type 'number'. Function Signature: insertRect(number, number, number, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'insertRect' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'insertRect' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: insertRect(number, number, number, number, number).");
if(e instanceof Promise)throw new TypeError("4th input argument in function 'insertRect' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof e)throw new TypeError("4th input argument '"+e+"' in function 'insertRect' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: insertRect(number, number, number, number, number).");if(f instanceof Promise)throw new TypeError("5th input argument in function 'insertRect' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof f)throw new TypeError("5th input argument '"+f+"' in function 'insertRect' is of type '"+typeof f+"'. Expected type 'number'. Function Signature: insertRect(number, number, number, number, number).");return b.messageHandler.sendWithPromise("Obj.insertRect",{o:this.id,pos:a,x1:c,y1:d,x2:e,y2:f},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Obj.prototype.insertMatrix=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'insertMatrix'. Expected 2 arguments. Function Signature: insertMatrix(number, Matrix2D)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'insertMatrix' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'insertMatrix' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: insertMatrix(number, Matrix2D).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'insertMatrix' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.Matrix2D)&&"Matrix2D"!=c.name){if("object"==typeof c)throw new TypeError("2nd input argument in function 'insertMatrix' is of type '"+c.name+"'. Expected type 'Matrix2D'. Function Signature: insertMatrix(number, Matrix2D).");throw new TypeError("2nd input argument '"+c+"' in function 'insertMatrix' is of type '"+typeof c+"'. Expected type 'Matrix2D'. Function Signature: insertMatrix(number, Matrix2D).");}if("undefined"!=typeof c.yieldFunction)throw Error("Function '"+c.yieldFunction+
"' recently altered a struct object without yielding. That object is now being accessed by the 2nd input argument in function 'insertMatrix'. Perhaps a yield statement is required for '"+c.yieldFunction+"'?");var d=this;this.yieldFunction="Obj.insertMatrix";return b.messageHandler.sendWithPromise("Obj.insertMatrix",{o:this.id,pos:a,mtx:c},this.userPriority).then(function(a){d.yieldFunction=void 0;if("0"==a)return null;copyFunc(a.mtx,d);return new b.Obj(a.result)})};b.Obj.prototype.pushBackName=function(a){if(1!=
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'pushBackName'. Expected 1 argument. Function Signature: pushBackName(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'pushBackName' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'pushBackName' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: pushBackName(string).");
return b.messageHandler.sendWithPromise("Obj.pushBackName",{o:this.id,name:a},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Obj.prototype.pushBackArray=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'pushBackArray'. Expected 0 arguments. Function Signature: pushBackArray()");return b.messageHandler.sendWithPromise("Obj.pushBackArray",{o:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};
b.Obj.prototype.pushBackBool=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'pushBackBool'. Expected 1 argument. Function Signature: pushBackBool(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'pushBackBool' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'pushBackBool' is of type '"+
typeof a+"'. Expected type 'boolean'. Function Signature: pushBackBool(boolean).");return b.messageHandler.sendWithPromise("Obj.pushBackBool",{o:this.id,value:a},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Obj.prototype.pushBackDict=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'pushBackDict'. Expected 0 arguments. Function Signature: pushBackDict()");return b.messageHandler.sendWithPromise("Obj.pushBackDict",{o:this.id},
this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Obj.prototype.pushBackNumber=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'pushBackNumber'. Expected 1 argument. Function Signature: pushBackNumber(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'pushBackNumber' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'pushBackNumber' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: pushBackNumber(number).");return b.messageHandler.sendWithPromise("Obj.pushBackNumber",{o:this.id,value:a},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Obj.prototype.pushBackString=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'pushBackString'. Expected 1 argument. Function Signature: pushBackString(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'pushBackString' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'pushBackString' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: pushBackString(string).");return b.messageHandler.sendWithPromise("Obj.pushBackString",{o:this.id,value:a},this.userPriority).then(function(a){return"0"==a?
null:new b.Obj(a)})};b.Obj.prototype.pushBackStringWithSize=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'pushBackStringWithSize'. Expected 2 arguments. Function Signature: pushBackStringWithSize(string, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'pushBackStringWithSize' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'pushBackStringWithSize' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: pushBackStringWithSize(string, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'pushBackStringWithSize' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'pushBackStringWithSize' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: pushBackStringWithSize(string, number).");
return b.messageHandler.sendWithPromise("Obj.pushBackStringWithSize",{o:this.id,value:a,size:c},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Obj.prototype.pushBackText=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'pushBackText'. Expected 1 argument. Function Signature: pushBackText(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'pushBackText' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'pushBackText' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: pushBackText(string).");return b.messageHandler.sendWithPromise("Obj.pushBackText",{o:this.id,t:a},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Obj.prototype.pushBackNull=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'pushBackNull'. Expected 0 arguments. Function Signature: pushBackNull()");
return b.messageHandler.sendWithPromise("Obj.pushBackNull",{o:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Obj.prototype.pushBack=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'pushBack'. Expected 1 argument. Function Signature: pushBack(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'pushBack' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'pushBack' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: pushBack(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'pushBack' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: pushBack(Obj).");}return b.messageHandler.sendWithPromise("Obj.pushBack",{o:this.id,input_obj:a.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};
b.Obj.prototype.pushBackRect=function(a,c,d,e){if(4!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'pushBackRect'. Expected 4 arguments. Function Signature: pushBackRect(number, number, number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'pushBackRect' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'pushBackRect' is of type '"+
typeof a+"'. Expected type 'number'. Function Signature: pushBackRect(number, number, number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'pushBackRect' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'pushBackRect' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: pushBackRect(number, number, number, number).");if(d instanceof
Promise)throw new TypeError("3rd input argument in function 'pushBackRect' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'pushBackRect' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: pushBackRect(number, number, number, number).");if(e instanceof Promise)throw new TypeError("4th input argument in function 'pushBackRect' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof e)throw new TypeError("4th input argument '"+e+"' in function 'pushBackRect' is of type '"+typeof e+"'. Expected type 'number'. Function Signature: pushBackRect(number, number, number, number).");return b.messageHandler.sendWithPromise("Obj.pushBackRect",{o:this.id,x1:a,y1:c,x2:d,y2:e},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.Obj.prototype.pushBackMatrix=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'pushBackMatrix'. Expected 1 argument. Function Signature: pushBackMatrix(Matrix2D)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'pushBackMatrix' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Matrix2D)&&"Matrix2D"!=a.name){if("object"==typeof a)throw new TypeError("1st input argument in function 'pushBackMatrix' is of type '"+a.name+"'. Expected type 'Matrix2D'. Function Signature: pushBackMatrix(Matrix2D).");throw new TypeError("1st input argument '"+a+"' in function 'pushBackMatrix' is of type '"+
typeof a+"'. Expected type 'Matrix2D'. Function Signature: pushBackMatrix(Matrix2D).");}if("undefined"!=typeof a.yieldFunction)throw Error("Function '"+a.yieldFunction+"' recently altered a struct object without yielding. That object is now being accessed by the 1st input argument in function 'pushBackMatrix'. Perhaps a yield statement is required for '"+a.yieldFunction+"'?");var c=this;this.yieldFunction="Obj.pushBackMatrix";return b.messageHandler.sendWithPromise("Obj.pushBackMatrix",{o:this.id,
mtx:a},this.userPriority).then(function(a){c.yieldFunction=void 0;if("0"==a)return null;copyFunc(a.mtx,c);return new b.Obj(a.result)})};b.Obj.prototype.eraseAt=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'eraseAt'. Expected 1 argument. Function Signature: eraseAt(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'eraseAt' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'eraseAt' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: eraseAt(number).");return b.messageHandler.sendWithPromise("Obj.eraseAt",{o:this.id,pos:a},this.userPriority)};b.Obj.prototype.isStream=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isStream'. Expected 0 arguments. Function Signature: isStream()");return b.messageHandler.sendWithPromise("Obj.isStream",
{o:this.id},this.userPriority)};b.Obj.prototype.getRawStreamLength=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getRawStreamLength'. Expected 0 arguments. Function Signature: getRawStreamLength()");return b.messageHandler.sendWithPromise("Obj.getRawStreamLength",{o:this.id},this.userPriority)};b.Obj.prototype.setStreamData=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setStreamData'. Expected 2 arguments. Function Signature: setStreamData(string, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setStreamData' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setStreamData' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setStreamData(string, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setStreamData' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setStreamData' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: setStreamData(string, number).");return b.messageHandler.sendWithPromise("Obj.setStreamData",{obj:this.id,data:a,data_size:c},this.userPriority)};b.Obj.prototype.setStreamDataWithFilter=function(a,c,d){"undefined"===typeof d&&(d=new b.Filter("0"));if(2>arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setStreamDataWithFilter'. Expected 2 to 3 arguments. Function Signature: setStreamDataWithFilter(string, number, Filter)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setStreamDataWithFilter' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a&&null!==a)throw new TypeError("1st input argument '"+a+"' in function 'setStreamDataWithFilter' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: setStreamDataWithFilter(string, number, Filter).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setStreamDataWithFilter' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setStreamDataWithFilter' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: setStreamDataWithFilter(string, number, Filter).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'setStreamDataWithFilter' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(d instanceof b.Filter)){if("object"==typeof d)throw new TypeError("3rd input argument in function 'setStreamDataWithFilter' is of type '"+
d.name+"'. Expected type 'Filter'. Function Signature: setStreamDataWithFilter(string, number, Filter).");throw new TypeError("3rd input argument '"+d+"' in function 'setStreamDataWithFilter' is of type '"+typeof d+"'. Expected type 'Filter'. Function Signature: setStreamDataWithFilter(string, number, Filter).");}var e=-1;if(0!=d.id){for(var f=createdObjects.length-1;0<=f;f--)if(createdObjects[f].id==d.id){e=f;break}if(-1!=e)for(createdObjects.splice(e,1),f=deallocStackCounter.length-1;0<=f;f--)if(deallocStackCounter[f]>
e)--deallocStackCounter[f];else break;else console.log("[WARNING] Object to remove ownership from was not found in memory deallocation list. Decallocating may cause errors.")}return b.messageHandler.sendWithPromise("Obj.setStreamDataWithFilter",{obj:this.id,data:a,data_size:c,no_own_filter_chain:d.id},this.userPriority)};b.Obj.prototype.getRawStream=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getRawStream'. Expected 1 argument. Function Signature: getRawStream(boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'getRawStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getRawStream' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: getRawStream(boolean).");return b.messageHandler.sendWithPromise("Obj.getRawStream",{o:this.id,decrypt:a},this.userPriority).then(function(a){return"0"==a?null:
new b.Filter(a)})};b.Obj.prototype.getDecodedStream=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getDecodedStream'. Expected 0 arguments. Function Signature: getDecodedStream()");return b.messageHandler.sendWithPromise("Obj.getDecodedStream",{o:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Filter(a)})};b.ObjSet.create=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 0 arguments. Function Signature: create()");
return b.messageHandler.sendWithPromise("objSetCreate",{},this.userPriority).then(function(a){if("0"==a)return null;a=new b.ObjSet(a);createdObjects.push({name:a.name,id:a.id});return a})};b.ObjSet.prototype.destroy=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,
1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");return b.messageHandler.sendWithPromise("ObjSet.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.ObjSet.prototype.createName=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createName'. Expected 1 argument. Function Signature: createName(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createName' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createName' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: createName(string).");return b.messageHandler.sendWithPromise("ObjSet.createName",{set:this.id,name:a},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};
b.ObjSet.prototype.createArray=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createArray'. Expected 0 arguments. Function Signature: createArray()");return b.messageHandler.sendWithPromise("ObjSet.createArray",{set:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.ObjSet.prototype.createBool=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createBool'. Expected 1 argument. Function Signature: createBool(boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createBool' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createBool' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: createBool(boolean).");return b.messageHandler.sendWithPromise("ObjSet.createBool",{set:this.id,value:a},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};
b.ObjSet.prototype.createDict=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createDict'. Expected 0 arguments. Function Signature: createDict()");return b.messageHandler.sendWithPromise("ObjSet.createDict",{set:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.ObjSet.prototype.createNull=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createNull'. Expected 0 arguments. Function Signature: createNull()");
return b.messageHandler.sendWithPromise("ObjSet.createNull",{set:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.ObjSet.prototype.createNumber=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createNumber'. Expected 1 argument. Function Signature: createNumber(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createNumber' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createNumber' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: createNumber(number).");return b.messageHandler.sendWithPromise("ObjSet.createNumber",{set:this.id,value:a},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.ObjSet.prototype.createString=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createString'. Expected 1 argument. Function Signature: createString(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createString' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createString' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: createString(string).");return b.messageHandler.sendWithPromise("ObjSet.createString",{set:this.id,value:a},this.userPriority).then(function(a){return"0"==a?null:
new b.Obj(a)})};b.ObjSet.prototype.createFromJson=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromJson'. Expected 1 argument. Function Signature: createFromJson(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromJson' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createFromJson' is of type '"+
typeof a+"'. Expected type 'string'. Function Signature: createFromJson(string).");return b.messageHandler.sendWithPromise("ObjSet.createFromJson",{set:this.id,json:a},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.SDFDoc.prototype.createShallowCopy=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createShallowCopy'. Expected 0 arguments. Function Signature: createShallowCopy()");return b.messageHandler.sendWithPromise("SDFDoc.createShallowCopy",
{source:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.SDFDoc(a)})};b.SDFDoc.prototype.releaseFileHandles=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'releaseFileHandles'. Expected 0 arguments. Function Signature: releaseFileHandles()");return b.messageHandler.sendWithPromise("SDFDoc.releaseFileHandles",{doc:this.id},this.userPriority)};b.SDFDoc.prototype.isEncrypted=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'isEncrypted'. Expected 0 arguments. Function Signature: isEncrypted()");return b.messageHandler.sendWithPromise("SDFDoc.isEncrypted",{doc:this.id},this.userPriority)};b.SDFDoc.prototype.initSecurityHandler=function(a){if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'initSecurityHandler'. Expected at most 1 arguments. Function Signature: initSecurityHandler(void*)");return b.messageHandler.sendWithPromise("SDFDoc.initSecurityHandler",
{doc:this.id,custom_data:a},this.userPriority)};b.SDFDoc.prototype.initStdSecurityHandler=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'initStdSecurityHandler'. Expected 2 arguments. Function Signature: initStdSecurityHandler(string, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'initStdSecurityHandler' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=
typeof a)throw new TypeError("1st input argument '"+a+"' in function 'initStdSecurityHandler' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: initStdSecurityHandler(string, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'initStdSecurityHandler' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'initStdSecurityHandler' is of type '"+
typeof c+"'. Expected type 'number'. Function Signature: initStdSecurityHandler(string, number).");return b.messageHandler.sendWithPromise("SDFDoc.initStdSecurityHandler",{doc:this.id,password:a,password_sz:c},this.userPriority)};b.SDFDoc.prototype.initStdSecurityHandlerUString=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'initStdSecurityHandlerUString'. Expected 1 argument. Function Signature: initStdSecurityHandlerUString(string)");if(a instanceof
Promise)throw new TypeError("1st input argument in function 'initStdSecurityHandlerUString' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'initStdSecurityHandlerUString' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: initStdSecurityHandlerUString(string).");return b.messageHandler.sendWithPromise("SDFDoc.initStdSecurityHandlerUString",{doc:this.id,password:a},
this.userPriority)};b.SDFDoc.prototype.isModified=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isModified'. Expected 0 arguments. Function Signature: isModified()");return b.messageHandler.sendWithPromise("SDFDoc.isModified",{doc:this.id},this.userPriority)};b.SDFDoc.prototype.hasRepairedXRef=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'hasRepairedXRef'. Expected 0 arguments. Function Signature: hasRepairedXRef()");
return b.messageHandler.sendWithPromise("SDFDoc.hasRepairedXRef",{doc:this.id},this.userPriority)};b.SDFDoc.prototype.isFullSaveRequired=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isFullSaveRequired'. Expected 0 arguments. Function Signature: isFullSaveRequired()");return b.messageHandler.sendWithPromise("SDFDoc.isFullSaveRequired",{doc:this.id},this.userPriority)};b.SDFDoc.prototype.getTrailer=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getTrailer'. Expected 0 arguments. Function Signature: getTrailer()");return b.messageHandler.sendWithPromise("SDFDoc.getTrailer",{doc:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.SDFDoc.prototype.getObj=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getObj'. Expected 1 argument. Function Signature: getObj(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getObj' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getObj' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getObj(number).");return b.messageHandler.sendWithPromise("SDFDoc.getObj",{doc:this.id,obj_num:a},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.SDFDoc.prototype.importObj=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'importObj'. Expected 2 arguments. Function Signature: importObj(Obj, boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'importObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'importObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: importObj(Obj, boolean).");throw new TypeError("1st input argument '"+a+"' in function 'importObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: importObj(Obj, boolean).");
}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'importObj' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'importObj' is of type '"+typeof c+"'. Expected type 'boolean'. Function Signature: importObj(Obj, boolean).");return b.messageHandler.sendWithPromise("SDFDoc.importObj",{doc:this.id,obj:a.id,deep_copy:c},this.userPriority).then(function(a){return"0"==
a?null:new b.Obj(a)})};b.SDFDoc.prototype.xRefSize=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'xRefSize'. Expected 0 arguments. Function Signature: xRefSize()");return b.messageHandler.sendWithPromise("SDFDoc.xRefSize",{doc:this.id},this.userPriority)};b.SDFDoc.prototype.clearMarks=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'clearMarks'. Expected 0 arguments. Function Signature: clearMarks()");
return b.messageHandler.sendWithPromise("SDFDoc.clearMarks",{doc:this.id},this.userPriority)};b.SDFDoc.prototype.saveStream=function(a,c,d){if(3!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'saveStream'. Expected 3 arguments. Function Signature: saveStream(Filter, number, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'saveStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof
b.Filter)){if("object"==typeof a)throw new TypeError("1st input argument in function 'saveStream' is of type '"+a.name+"'. Expected type 'Filter'. Function Signature: saveStream(Filter, number, string).");throw new TypeError("1st input argument '"+a+"' in function 'saveStream' is of type '"+typeof a+"'. Expected type 'Filter'. Function Signature: saveStream(Filter, number, string).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'saveStream' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'saveStream' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: saveStream(Filter, number, string).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'saveStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'saveStream' is of type '"+typeof d+"'. Expected type 'string'. Function Signature: saveStream(Filter, number, string).");
return b.messageHandler.sendWithPromise("SDFDoc.saveStream",{doc:this.id,stream:a.id,flags:c,header:d},this.userPriority)};b.SDFDoc.prototype.getHeader=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getHeader'. Expected 0 arguments. Function Signature: getHeader()");return b.messageHandler.sendWithPromise("SDFDoc.getHeader",{doc:this.id},this.userPriority)};b.SDFDoc.prototype.getSecurityHandler=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getSecurityHandler'. Expected 0 arguments. Function Signature: getSecurityHandler()");return b.messageHandler.sendWithPromise("SDFDoc.getSecurityHandler",{doc:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.SecurityHandler(a)})};b.SDFDoc.prototype.setSecurityHandler=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setSecurityHandler'. Expected 1 argument. Function Signature: setSecurityHandler(SecurityHandler)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setSecurityHandler' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.SecurityHandler)){if("object"==typeof a)throw new TypeError("1st input argument in function 'setSecurityHandler' is of type '"+a.name+"'. Expected type 'SecurityHandler'. Function Signature: setSecurityHandler(SecurityHandler).");throw new TypeError("1st input argument '"+a+"' in function 'setSecurityHandler' is of type '"+
typeof a+"'. Expected type 'SecurityHandler'. Function Signature: setSecurityHandler(SecurityHandler).");}var c=-1;if(0!=a.id){for(var d=createdObjects.length-1;0<=d;d--)if(createdObjects[d].id==a.id){c=d;break}if(-1!=c)for(createdObjects.splice(c,1),d=deallocStackCounter.length-1;0<=d;d--)if(deallocStackCounter[d]>c)--deallocStackCounter[d];else break;else console.log("[WARNING] Object to remove ownership from was not found in memory deallocation list. Decallocating may cause errors.")}return b.messageHandler.sendWithPromise("SDFDoc.setSecurityHandler",
{doc:this.id,no_own_handler:a.id},this.userPriority)};b.SDFDoc.prototype.removeSecurity=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'removeSecurity'. Expected 0 arguments. Function Signature: removeSecurity()");return b.messageHandler.sendWithPromise("SDFDoc.removeSecurity",{doc:this.id},this.userPriority)};b.SDFDoc.prototype.swap=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'swap'. Expected 2 arguments. Function Signature: swap(number, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'swap' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'swap' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: swap(number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'swap' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'swap' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: swap(number, number).");return b.messageHandler.sendWithPromise("SDFDoc.swap",{doc:this.id,obj_num1:a,obj_num2:c},this.userPriority)};b.SDFDoc.prototype.isLinearized=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isLinearized'. Expected 0 arguments. Function Signature: isLinearized()");
return b.messageHandler.sendWithPromise("SDFDoc.isLinearized",{doc:this.id},this.userPriority)};b.SDFDoc.prototype.getLinearizationDict=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getLinearizationDict'. Expected 0 arguments. Function Signature: getLinearizationDict()");return b.messageHandler.sendWithPromise("SDFDoc.getLinearizationDict",{doc:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.SDFDoc.prototype.getHintStream=
function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getHintStream'. Expected 0 arguments. Function Signature: getHintStream()");return b.messageHandler.sendWithPromise("SDFDoc.getHintStream",{doc:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.SDFDoc.prototype.enableDiskCaching=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'enableDiskCaching'. Expected 1 argument. Function Signature: enableDiskCaching(boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'enableDiskCaching' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'enableDiskCaching' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: enableDiskCaching(boolean).");return b.messageHandler.sendWithPromise("SDFDoc.enableDiskCaching",{doc:this.id,use_cache_flag:a},this.userPriority)};
b.SDFDoc.prototype.lock=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'lock'. Expected 0 arguments. Function Signature: lock()");var a=this;return b.messageHandler.sendWithPromise("SDFDoc.lock",{doc:this.id},this.userPriority).then(function(){lockedObjects.push({name:"SDFDoc",id:a.id,unlocktype:"unlock"})})};b.SDFDoc.prototype.unlock=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'unlock'. Expected 0 arguments. Function Signature: unlock()");
var a=this;return b.messageHandler.sendWithPromise("SDFDoc.unlock",{doc:this.id},this.userPriority).then(function(){for(var b=-1,d=lockedObjects.length-1;0<=d;d--)if(lockedObjects[d].id==a.id){b=d;break}if(-1!=b)for(lockedObjects.splice(b,1),d=unlockStackCounter.length-1;0<=d;d--)if(b<unlockStackCounter[d])--unlockStackCounter[d];else break;else console.log("[WARNING], the object to be unlocked was not found in the unlock list. Unlocking may cause errors.")})};b.SDFDoc.prototype.lockRead=function(){if(0!=
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'lockRead'. Expected 0 arguments. Function Signature: lockRead()");var a=this;return b.messageHandler.sendWithPromise("SDFDoc.lockRead",{doc:this.id},this.userPriority).then(function(){lockedObjects.push({name:"SDFDoc",id:a.id,unlocktype:"unlockRead"})})};b.SDFDoc.prototype.unlockRead=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'unlockRead'. Expected 0 arguments. Function Signature: unlockRead()");
var a=this;return b.messageHandler.sendWithPromise("SDFDoc.unlockRead",{doc:this.id},this.userPriority).then(function(){for(var b=-1,d=lockedObjects.length-1;0<=d;d--)if(lockedObjects[d].id==a.id){b=d;break}if(-1!=b)for(lockedObjects.splice(b,1),d=unlockStackCounter.length-1;0<=d;d--)if(b<unlockStackCounter[d])--unlockStackCounter[d];else break;else console.log("[WARNING], the object to be unlocked was not found in the unlock list. Unlocking may cause errors.")})};b.SDFDoc.prototype.tryLock=function(){if(0!=
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'tryLock'. Expected 0 arguments. Function Signature: tryLock()");var a=this;return b.messageHandler.sendWithPromise("SDFDoc.tryLock",{doc:this.id},this.userPriority).then(function(b){b&&lockedObjects.push({name:"SDFDoc",id:a.id,unlocktype:"unlock"})})};b.SDFDoc.prototype.timedLock=function(a){"undefined"===typeof doc&&(doc=new b.SDFDoc("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'timedLock'. Expected at most 1 arguments. Function Signature: timedLock(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'timedLock' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'timedLock' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: timedLock(number).");var c=this;return b.messageHandler.sendWithPromise("SDFDoc.timedLock",{doc:this.id,milliseconds:a},this.userPriority).then(function(a){a&&lockedObjects.push({name:"SDFDoc",
id:c.id,unlocktype:"unlock"})})};b.SDFDoc.prototype.tryLockRead=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'tryLockRead'. Expected 0 arguments. Function Signature: tryLockRead()");var a=this;return b.messageHandler.sendWithPromise("SDFDoc.tryLockRead",{doc:this.id},this.userPriority).then(function(b){b&&lockedObjects.push({name:"SDFDoc",id:a.id,unlocktype:"unlockRead"})})};b.SDFDoc.prototype.timedLockRead=function(a){"undefined"===typeof doc&&
(doc=new b.SDFDoc("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'timedLockRead'. Expected at most 1 arguments. Function Signature: timedLockRead(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'timedLockRead' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'timedLockRead' is of type '"+typeof a+
"'. Expected type 'number'. Function Signature: timedLockRead(number).");var c=this;return b.messageHandler.sendWithPromise("SDFDoc.timedLockRead",{doc:this.id,milliseconds:a},this.userPriority).then(function(a){a&&lockedObjects.push({name:"SDFDoc",id:c.id,unlocktype:"unlockRead"})})};b.SDFDoc.prototype.getFileName=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFileName'. Expected 0 arguments. Function Signature: getFileName()");return b.messageHandler.sendWithPromise("SDFDoc.getFileName",
{doc:this.id},this.userPriority)};b.SDFDoc.prototype.createIndirectName=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createIndirectName'. Expected 1 argument. Function Signature: createIndirectName(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createIndirectName' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'createIndirectName' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: createIndirectName(string).");return b.messageHandler.sendWithPromise("SDFDoc.createIndirectName",{doc:this.id,name:a},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.SDFDoc.prototype.createIndirectArray=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createIndirectArray'. Expected 0 arguments. Function Signature: createIndirectArray()");
return b.messageHandler.sendWithPromise("SDFDoc.createIndirectArray",{doc:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.SDFDoc.prototype.createIndirectBool=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createIndirectBool'. Expected 1 argument. Function Signature: createIndirectBool(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createIndirectBool' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createIndirectBool' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: createIndirectBool(boolean).");return b.messageHandler.sendWithPromise("SDFDoc.createIndirectBool",{doc:this.id,value:a},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.SDFDoc.prototype.createIndirectDict=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createIndirectDict'. Expected 0 arguments. Function Signature: createIndirectDict()");
return b.messageHandler.sendWithPromise("SDFDoc.createIndirectDict",{doc:this.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.SDFDoc.prototype.createIndirectNull=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createIndirectNull'. Expected 0 arguments. Function Signature: createIndirectNull()");return b.messageHandler.sendWithPromise("SDFDoc.createIndirectNull",{doc:this.id},this.userPriority).then(function(a){return"0"==
a?null:new b.Obj(a)})};b.SDFDoc.prototype.createIndirectNumber=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createIndirectNumber'. Expected 1 argument. Function Signature: createIndirectNumber(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createIndirectNumber' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'createIndirectNumber' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: createIndirectNumber(number).");return b.messageHandler.sendWithPromise("SDFDoc.createIndirectNumber",{doc:this.id,value:a},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.SDFDoc.prototype.createIndirectString=function(a){a instanceof Array&&(a=new Float64Array(a));if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createIndirectString'. Expected 1 argument. Function Signature: createIndirectString(ArrayBuffer)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createIndirectString' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!h.isArrayBuffer(a.buffer)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createIndirectString' is of type '"+a.name+"'. Expected type 'ArrayBuffer'. Function Signature: createIndirectString(ArrayBuffer).");throw new TypeError("1st input argument '"+a+"' in function 'createIndirectString' is of type '"+
typeof a+"'. Expected type 'ArrayBuffer'. Function Signature: createIndirectString(ArrayBuffer).");}return b.messageHandler.sendWithPromise("SDFDoc.createIndirectString",{doc:this.id,buf_value:a.buffer},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.SDFDoc.prototype.createIndirectStringFromUString=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createIndirectStringFromUString'. Expected 1 argument. Function Signature: createIndirectStringFromUString(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createIndirectStringFromUString' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createIndirectStringFromUString' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: createIndirectStringFromUString(string).");return b.messageHandler.sendWithPromise("SDFDoc.createIndirectStringFromUString",
{doc:this.id,str:a},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.SDFDoc.prototype.createIndirectStreamFromFilter=function(a,c){"undefined"===typeof c&&(c=new b.Filter("0"));if(1>arguments.length||2<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createIndirectStreamFromFilter'. Expected 1 to 2 arguments. Function Signature: createIndirectStreamFromFilter(FilterReader, Filter)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createIndirectStreamFromFilter' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.FilterReader)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createIndirectStreamFromFilter' is of type '"+a.name+"'. Expected type 'FilterReader'. Function Signature: createIndirectStreamFromFilter(FilterReader, Filter).");throw new TypeError("1st input argument '"+a+"' in function 'createIndirectStreamFromFilter' is of type '"+typeof a+"'. Expected type 'FilterReader'. Function Signature: createIndirectStreamFromFilter(FilterReader, Filter).");}if(c instanceof
Promise)throw new TypeError("2nd input argument in function 'createIndirectStreamFromFilter' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(c instanceof b.Filter)){if("object"==typeof c)throw new TypeError("2nd input argument in function 'createIndirectStreamFromFilter' is of type '"+c.name+"'. Expected type 'Filter'. Function Signature: createIndirectStreamFromFilter(FilterReader, Filter).");throw new TypeError("2nd input argument '"+c+"' in function 'createIndirectStreamFromFilter' is of type '"+
typeof c+"'. Expected type 'Filter'. Function Signature: createIndirectStreamFromFilter(FilterReader, Filter).");}var d=-1;if(0!=c.id){for(var e=createdObjects.length-1;0<=e;e--)if(createdObjects[e].id==c.id){d=e;break}if(-1!=d)for(createdObjects.splice(d,1),e=deallocStackCounter.length-1;0<=e;e--)if(deallocStackCounter[e]>d)--deallocStackCounter[e];else break;else console.log("[WARNING] Object to remove ownership from was not found in memory deallocation list. Decallocating may cause errors.")}return b.messageHandler.sendWithPromise("SDFDoc.createIndirectStreamFromFilter",
{doc:this.id,data:a.id,no_own_filter_chain:c.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.SDFDoc.prototype.createIndirectStream=function(a,c,d){"undefined"===typeof d&&(d=new b.Filter("0"));if(2>arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createIndirectStream'. Expected 2 to 3 arguments. Function Signature: createIndirectStream(string, number, Filter)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createIndirectStream' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof a&&null!==a)throw new TypeError("1st input argument '"+a+"' in function 'createIndirectStream' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: createIndirectStream(string, number, Filter).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createIndirectStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createIndirectStream' is of type '"+
typeof c+"'. Expected type 'number'. Function Signature: createIndirectStream(string, number, Filter).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createIndirectStream' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(d instanceof b.Filter)){if("object"==typeof d)throw new TypeError("3rd input argument in function 'createIndirectStream' is of type '"+d.name+"'. Expected type 'Filter'. Function Signature: createIndirectStream(string, number, Filter).");
throw new TypeError("3rd input argument '"+d+"' in function 'createIndirectStream' is of type '"+typeof d+"'. Expected type 'Filter'. Function Signature: createIndirectStream(string, number, Filter).");}var e=-1;if(0!=d.id){for(var f=createdObjects.length-1;0<=f;f--)if(createdObjects[f].id==d.id){e=f;break}if(-1!=e)for(createdObjects.splice(e,1),f=deallocStackCounter.length-1;0<=f;f--)if(deallocStackCounter[f]>e)--deallocStackCounter[f];else break;else console.log("[WARNING] Object to remove ownership from was not found in memory deallocation list. Decallocating may cause errors.")}return b.messageHandler.sendWithPromise("SDFDoc.createIndirectStream",
{doc:this.id,data:a,data_size:c,no_own_filter_chain:d.id},this.userPriority).then(function(a){return"0"==a?null:new b.Obj(a)})};b.SecurityHandler.prototype.clone=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'clone'. Expected 0 arguments. Function Signature: clone()");return b.messageHandler.sendWithPromise("SecurityHandler.clone",{sh:this.id},this.userPriority).then(function(a){if("0"==a)return null;a=new b.SecurityHandler(a);createdObjects.push({name:a.name,
id:a.id});return a})};b.SecurityHandler.prototype.destroy=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destroy'. Expected 0 arguments. Function Signature: destroy()");for(var a=-1,c=createdObjects.length-1;0<=c;c--)if(createdObjects[c].id==this.id){a=c;break}if(-1!=a)for(createdObjects.splice(a,1),c=deallocStackCounter.length-1;0<=c;c--)if(a<deallocStackCounter[c])--deallocStackCounter[c];else break;else console.log("[WARNING], the object to be destroyed was not found in the deallocation list. Deallocating may cause errors.");
return b.messageHandler.sendWithPromise("SecurityHandler.destroy",{auto_dealloc_obj:this.id},this.userPriority)};b.SecurityHandler.prototype.initialize=function(a,c,d){if(2>arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'initialize'. Expected 2 to 3 arguments. Function Signature: initialize(SDFDoc, Obj, void*)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'initialize' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'initialize' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: initialize(SDFDoc, Obj, void*).");throw new TypeError("1st input argument '"+a+"' in function 'initialize' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: initialize(SDFDoc, Obj, void*).");}if(c instanceof Promise)throw new TypeError("2nd input argument in function 'initialize' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof b.Obj)){if("object"==typeof c)throw new TypeError("2nd input argument in function 'initialize' is of type '"+c.name+"'. Expected type 'Obj'. Function Signature: initialize(SDFDoc, Obj, void*).");throw new TypeError("2nd input argument '"+c+"' in function 'initialize' is of type '"+typeof c+"'. Expected type 'Obj'. Function Signature: initialize(SDFDoc, Obj, void*).");}return b.messageHandler.sendWithPromise("SecurityHandler.initialize",{sh:this.id,doc:a.id,encrypt_dict:c.id,custom_data:d},
this.userPriority)};b.SecurityHandler.prototype.getPermission=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPermission'. Expected 1 argument. Function Signature: getPermission(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getPermission' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getPermission' is of type '"+
typeof a+"'. Expected type 'number'. Function Signature: getPermission(number).");return b.messageHandler.sendWithPromise("SecurityHandler.getPermission",{sh:this.id,p:a},this.userPriority)};b.SecurityHandler.prototype.getKeyLength=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getKeyLength'. Expected 0 arguments. Function Signature: getKeyLength()");return b.messageHandler.sendWithPromise("SecurityHandler.getKeyLength",{sh:this.id},this.userPriority)};
b.SecurityHandler.prototype.getEncryptionAlgorithmID=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getEncryptionAlgorithmID'. Expected 0 arguments. Function Signature: getEncryptionAlgorithmID()");return b.messageHandler.sendWithPromise("SecurityHandler.getEncryptionAlgorithmID",{sh:this.id},this.userPriority)};b.SecurityHandler.prototype.getHandlerDocName=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getHandlerDocName'. Expected 0 arguments. Function Signature: getHandlerDocName()");
return b.messageHandler.sendWithPromise("SecurityHandler.getHandlerDocName",{sh:this.id},this.userPriority)};b.SecurityHandler.prototype.isModified=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isModified'. Expected 0 arguments. Function Signature: isModified()");return b.messageHandler.sendWithPromise("SecurityHandler.isModified",{sh:this.id},this.userPriority)};b.SecurityHandler.prototype.setModified=function(a){"undefined"===typeof a&&
(a=!0);if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setModified'. Expected at most 1 arguments. Function Signature: setModified(boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setModified' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setModified' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setModified(boolean).");
return b.messageHandler.sendWithPromise("SecurityHandler.setModified",{sh:this.id,is_modified:a},this.userPriority)};b.SecurityHandler.create=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'create'. Expected 1 argument. Function Signature: create(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'create' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'create' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: create(number).");return b.messageHandler.sendWithPromise("securityHandlerCreate",{crypt_type:a},this.userPriority).then(function(a){if("0"==a)return null;a=new b.SecurityHandler(a);createdObjects.push({name:a.name,id:a.id});return a})};b.SecurityHandler.createFromEncCode=function(a,c,d){if(3!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromEncCode'. Expected 3 arguments. Function Signature: createFromEncCode(string, number, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromEncCode' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createFromEncCode' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: createFromEncCode(string, number, number).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'createFromEncCode' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createFromEncCode' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: createFromEncCode(string, number, number).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createFromEncCode' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'createFromEncCode' is of type '"+
typeof d+"'. Expected type 'number'. Function Signature: createFromEncCode(string, number, number).");return b.messageHandler.sendWithPromise("securityHandlerCreateFromEncCode",{name:a,key_len:c,enc_code:d},this.userPriority).then(function(a){if("0"==a)return null;a=new b.SecurityHandler(a);createdObjects.push({name:a.name,id:a.id});return a})};b.SecurityHandler.createDefault=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createDefault'. Expected 0 arguments. Function Signature: createDefault()");
return b.messageHandler.sendWithPromise("securityHandlerCreateDefault",{},this.userPriority).then(function(a){if("0"==a)return null;a=new b.SecurityHandler(a);createdObjects.push({name:a.name,id:a.id});return a})};b.SecurityHandler.prototype.setPermission=function(a,c){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setPermission'. Expected 2 arguments. Function Signature: setPermission(number, boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'setPermission' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setPermission' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: setPermission(number, boolean).");if(c instanceof Promise)throw new TypeError("2nd input argument in function 'setPermission' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'setPermission' is of type '"+typeof c+"'. Expected type 'boolean'. Function Signature: setPermission(number, boolean).");
return b.messageHandler.sendWithPromise("SecurityHandler.setPermission",{sh:this.id,perm:a,value:c},this.userPriority)};b.SecurityHandler.prototype.changeRevisionNumber=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'changeRevisionNumber'. Expected 1 argument. Function Signature: changeRevisionNumber(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'changeRevisionNumber' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'changeRevisionNumber' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: changeRevisionNumber(number).");return b.messageHandler.sendWithPromise("SecurityHandler.changeRevisionNumber",{sh:this.id,rev_num:a},this.userPriority)};b.SecurityHandler.prototype.setEncryptMetadata=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'setEncryptMetadata'. Expected 1 argument. Function Signature: setEncryptMetadata(boolean)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'setEncryptMetadata' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'setEncryptMetadata' is of type '"+typeof a+"'. Expected type 'boolean'. Function Signature: setEncryptMetadata(boolean).");return b.messageHandler.sendWithPromise("SecurityHandler.setEncryptMetadata",{sh:this.id,encrypt_metadata:a},this.userPriority)};
b.SecurityHandler.prototype.getRevisionNumber=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getRevisionNumber'. Expected 0 arguments. Function Signature: getRevisionNumber()");return b.messageHandler.sendWithPromise("SecurityHandler.getRevisionNumber",{sh:this.id},this.userPriority)};b.SecurityHandler.prototype.isUserPasswordRequired=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isUserPasswordRequired'. Expected 0 arguments. Function Signature: isUserPasswordRequired()");
return b.messageHandler.sendWithPromise("SecurityHandler.isUserPasswordRequired",{sh:this.id},this.userPriority)};b.SecurityHandler.prototype.isMasterPasswordRequired=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isMasterPasswordRequired'. Expected 0 arguments. Function Signature: isMasterPasswordRequired()");return b.messageHandler.sendWithPromise("SecurityHandler.isMasterPasswordRequired",{sh:this.id},this.userPriority)};b.SecurityHandler.prototype.isAES=
function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isAES'. Expected 0 arguments. Function Signature: isAES()");return b.messageHandler.sendWithPromise("SecurityHandler.isAES",{sh:this.id},this.userPriority)};b.SecurityHandler.prototype.isAESObj=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isAESObj'. Expected 1 argument. Function Signature: isAESObj(Obj)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'isAESObj' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.Obj)){if("object"==typeof a)throw new TypeError("1st input argument in function 'isAESObj' is of type '"+a.name+"'. Expected type 'Obj'. Function Signature: isAESObj(Obj).");throw new TypeError("1st input argument '"+a+"' in function 'isAESObj' is of type '"+typeof a+"'. Expected type 'Obj'. Function Signature: isAESObj(Obj).");}return b.messageHandler.sendWithPromise("SecurityHandler.isAESObj",{sh:this.id,stream:a.id},this.userPriority)};b.SecurityHandler.prototype.isRC4=function(){if(0!=
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'isRC4'. Expected 0 arguments. Function Signature: isRC4()");return b.messageHandler.sendWithPromise("SecurityHandler.isRC4",{sh:this.id},this.userPriority)};b.SecurityHandler.prototype.changeUserPasswordUString=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'changeUserPasswordUString'. Expected 1 argument. Function Signature: changeUserPasswordUString(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'changeUserPasswordUString' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'changeUserPasswordUString' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: changeUserPasswordUString(string).");return b.messageHandler.sendWithPromise("SecurityHandler.changeUserPasswordUString",{sh:this.id,
password:a},this.userPriority)};b.SecurityHandler.prototype.changeUserPasswordBuffer=function(a){a instanceof Array&&(a=new Float64Array(a));if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'changeUserPasswordBuffer'. Expected 1 argument. Function Signature: changeUserPasswordBuffer(ArrayBuffer)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'changeUserPasswordBuffer' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!h.isArrayBuffer(a.buffer)){if("object"==typeof a)throw new TypeError("1st input argument in function 'changeUserPasswordBuffer' is of type '"+a.name+"'. Expected type 'ArrayBuffer'. Function Signature: changeUserPasswordBuffer(ArrayBuffer).");throw new TypeError("1st input argument '"+a+"' in function 'changeUserPasswordBuffer' is of type '"+typeof a+"'. Expected type 'ArrayBuffer'. Function Signature: changeUserPasswordBuffer(ArrayBuffer).");}return b.messageHandler.sendWithPromise("SecurityHandler.changeUserPasswordBuffer",
{sh:this.id,password_buf:a.buffer},this.userPriority)};b.SecurityHandler.prototype.changeMasterPasswordUString=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'changeMasterPasswordUString'. Expected 1 argument. Function Signature: changeMasterPasswordUString(string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'changeMasterPasswordUString' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'changeMasterPasswordUString' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: changeMasterPasswordUString(string).");return b.messageHandler.sendWithPromise("SecurityHandler.changeMasterPasswordUString",{sh:this.id,password:a},this.userPriority)};b.SecurityHandler.prototype.changeMasterPasswordBuffer=function(a){a instanceof Array&&(a=new Float64Array(a));if(1!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'changeMasterPasswordBuffer'. Expected 1 argument. Function Signature: changeMasterPasswordBuffer(ArrayBuffer)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'changeMasterPasswordBuffer' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!h.isArrayBuffer(a.buffer)){if("object"==typeof a)throw new TypeError("1st input argument in function 'changeMasterPasswordBuffer' is of type '"+a.name+"'. Expected type 'ArrayBuffer'. Function Signature: changeMasterPasswordBuffer(ArrayBuffer).");
throw new TypeError("1st input argument '"+a+"' in function 'changeMasterPasswordBuffer' is of type '"+typeof a+"'. Expected type 'ArrayBuffer'. Function Signature: changeMasterPasswordBuffer(ArrayBuffer).");}return b.messageHandler.sendWithPromise("SecurityHandler.changeMasterPasswordBuffer",{sh:this.id,password_buf:a.buffer},this.userPriority)};b.SecurityHandler.prototype.initPasswordUString=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'initPasswordUString'. Expected 1 argument. Function Signature: initPasswordUString(string)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'initPasswordUString' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'initPasswordUString' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: initPasswordUString(string).");return b.messageHandler.sendWithPromise("SecurityHandler.initPasswordUString",{sh:this.id,password:a},this.userPriority)};
b.SecurityHandler.prototype.initPasswordBuffer=function(a){a instanceof Array&&(a=new Float64Array(a));if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'initPasswordBuffer'. Expected 1 argument. Function Signature: initPasswordBuffer(ArrayBuffer)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'initPasswordBuffer' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!h.isArrayBuffer(a.buffer)){if("object"==
typeof a)throw new TypeError("1st input argument in function 'initPasswordBuffer' is of type '"+a.name+"'. Expected type 'ArrayBuffer'. Function Signature: initPasswordBuffer(ArrayBuffer).");throw new TypeError("1st input argument '"+a+"' in function 'initPasswordBuffer' is of type '"+typeof a+"'. Expected type 'ArrayBuffer'. Function Signature: initPasswordBuffer(ArrayBuffer).");}return b.messageHandler.sendWithPromise("SecurityHandler.initPasswordBuffer",{sh:this.id,password_buf:a.buffer},this.userPriority)};
b.SecurityHandler.prototype.authorize=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'authorize'. Expected 1 argument. Function Signature: authorize(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'authorize' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'authorize' is of type '"+typeof a+
"'. Expected type 'number'. Function Signature: authorize(number).");return b.messageHandler.sendWithPromise("SecurityHandler.authorize",{sh:this.id,p:a},this.userPriority)};b.SecurityHandler.prototype.authorizeFailed=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'authorizeFailed'. Expected 0 arguments. Function Signature: authorizeFailed()");return b.messageHandler.sendWithPromise("SecurityHandler.authorizeFailed",{sh:this.id},this.userPriority)};
b.SecurityHandler.prototype.getAuthorizationData=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getAuthorizationData'. Expected 1 argument. Function Signature: getAuthorizationData(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'getAuthorizationData' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getAuthorizationData' is of type '"+
typeof a+"'. Expected type 'number'. Function Signature: getAuthorizationData(number).");return b.messageHandler.sendWithPromise("SecurityHandler.getAuthorizationData",{sh:this.id,req_opr:a},this.userPriority)};b.SecurityHandler.prototype.editSecurityData=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'editSecurityData'. Expected 1 argument. Function Signature: editSecurityData(SDFDoc)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'editSecurityData' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'editSecurityData' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: editSecurityData(SDFDoc).");throw new TypeError("1st input argument '"+a+"' in function 'editSecurityData' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: editSecurityData(SDFDoc).");}return b.messageHandler.sendWithPromise("SecurityHandler.editSecurityData",
{sh:this.id,doc:a.id},this.userPriority)};b.SecurityHandler.prototype.fillEncryptDict=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'fillEncryptDict'. Expected 1 argument. Function Signature: fillEncryptDict(SDFDoc)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'fillEncryptDict' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof b.PDFDoc||a instanceof b.SDFDoc||
a instanceof b.FDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'fillEncryptDict' is of type '"+a.name+"'. Expected type 'SDFDoc'. Function Signature: fillEncryptDict(SDFDoc).");throw new TypeError("1st input argument '"+a+"' in function 'fillEncryptDict' is of type '"+typeof a+"'. Expected type 'SDFDoc'. Function Signature: fillEncryptDict(SDFDoc).");}return b.messageHandler.sendWithPromise("SecurityHandler.fillEncryptDict",{sh:this.id,doc:a.id},this.userPriority).then(function(a){return"0"==
a?null:new b.Obj(a)})};b.SignatureHandler.prototype.getName=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getName'. Expected 0 arguments. Function Signature: getName()");return b.messageHandler.sendWithPromise("SignatureHandler.getName",{signature_handler:this.id},this.userPriority)};b.SignatureHandler.prototype.reset=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'reset'. Expected 0 arguments. Function Signature: reset()");
return b.messageHandler.sendWithPromise("SignatureHandler.reset",{signature_handler:this.id},this.userPriority)};b.SignatureHandler.prototype.createSignature=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createSignature'. Expected 0 arguments. Function Signature: createSignature()");return b.messageHandler.sendWithPromise("SignatureHandler.createSignature",{signature_handler:this.id},this.userPriority)};b.SignatureHandler.prototype.destructor=
function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'destructor'. Expected 0 arguments. Function Signature: destructor()");return b.messageHandler.sendWithPromise("SignatureHandler.destructor",{signature_handler:this.id},this.userPriority)};h.PDFNet=b})("undefined"===typeof window?this:window);
(function(h){function p(a){function b(c){c=a.next(c);var d=c.value;return c.done?c.value:d.then(b)}return Promise.resolve().then(b)}var b=function(a,b){b=b||{};var c=new XMLHttpRequest;return new Promise(function(d,l){c.open("GET",a,!0);c.responseType="arraybuffer";b.withCredentials&&(c.withCredentials=b.withCredentials);c.onerror=function(){l(Error("Network error occurred"))};c.onload=function(a){200==this.status?(a=new Uint8Array(c.response),d(a)):l(Error("Download Failed"))};var h=b.customHeaders;
if(h)for(var n in h)c.setRequestHeader(n,h[n]);c.send()},function(){c.abort()})};createdObjects=[];lockedObjects=[];stackCallCounter=beginOperationCounter=0;deallocStackCounter=[];unlockStackCounter=[];var a;h.PDFTron&&PDFTron.WebViewer&&PDFTron.WebViewer.prototype&&PDFTron.WebViewer.prototype.version&&!PDFTron.skipPDFNetWebViewerWarning&&console.warn("PDFNet.js and WebViewer.js have been included in the same context. See pdftron.com/kb_same_context for an explanation of why this could be an error in your application.");
h.PDFNet.messageHandler={sendWithPromise:function(){throw Error("PDFNet.initialize must be called and finish resolving before any other PDFNetJS function calls.");}};h.PDFNet.initialize=function(b,c){if(!a){var d={pnaclCrashError:function(a,b){console.log("PNaClCrashError: "+a+", "+b)},pnaclLoadError:function(a,b){console.log("PNaClLoadError: "+a+", "+b)},emsWorkerError:function(a,b){console.log("EmsWorkerError: "+a+", "+b)}},k="pnacl"!==c&&!h.CoreControls.isSubzeroEnabled();a=createPromiseCapability();
var l=function(c){h.CoreControls.preloadPDFWorker(c,d,{useEmscriptenWhileLoading:k,autoSwap:!1});h.CoreControls.initPDFWorkerTransports(c,d,b).then(function(b){h.PDFNet.messageHandler=b;a.resolve()})};"undefined"!==typeof readerControl&&"undefined"!==typeof readerControl.pdfType&&(c=readerControl.pdfType);c&&"auto"!==c?l(c):CoreControls.getDefaultBackendType().then(l)}return a.promise};PDFNet.userPriority=2;h.copyFunc=function(a,b){for(var c in a)b[c]=a[c]};PDFNet.runGeneratorWithoutCleanup=function(a,
b){return PDFNet.runWithoutCleanup(function(){return p(a)},b)};PDFNet.runGeneratorWithCleanup=function(a,b){return PDFNet.runWithCleanup(function(){return p(a)},b)};PDFNet.runWithCleanup=function(a,b){var c;return PDFNet.initialize(b).then(function(){return PDFNet.beginOperation()}).then(function(){PDFNet.startDeallocateStack();return a()}).then(function(a){c=a;return PDFNet.endDeallocateStack()}).then(function(){PDFNet.finishOperation();if(0<stackCallCounter)throw Error('Detected not yet deallocated stack. You may have called "PDFNet.startDeallocateStack()" somewhere without calling "PDFNet.endDeallocateStack()" afterwards.');
return c})};PDFNet.runWithoutCleanup=function(a,b){return PDFNet.initialize(b).then(function(){return PDFNet.beginOperation()}).then(function(){return a()}).then(function(a){PDFNet.finishOperation();return a})};PDFNet.displayAllocatedObjects=function(){console.log("List of created but not yet deallocated objects:");if(0==createdObjects.length)console.log("~~None~~ (nothing to deallocate)");else for(var a=0;a<createdObjects.length;a++)console.log(createdObjects[a]);return createdObjects.length};PDFNet.getAllocatedObjectsCount=
function(){return createdObjects.length};PDFNet.startDeallocateStack=function(){stackCallCounter+=1;deallocStackCounter.push(createdObjects.length);unlockStackCounter.push(lockedObjects.length);return Promise.resolve()};PDFNet.endDeallocateStack=function(){if(0===stackCallCounter)return console.log("Warning, no startDeallocateStack() instances remain."),Promise.resolve();var a=deallocStackCounter.pop(),b=unlockStackCounter.pop(),c,d,h=[],m=[];c=0;if("undefined"!==typeof b&&0!==lockedObjects.length&&
lockedObjects.length!==b)for(;lockedObjects.length>b;)d=lockedObjects.pop(),d=PDFNet.messageHandler.sendWithPromise(d.name+"."+d.unlocktype,{doc:d.id},this.userPriority),d=d["catch"](function(a){console.log(a)}),h.push(d),c++;b=0;if("undefined"!==typeof a&&0!==createdObjects.length&&createdObjects.length!==a)for(;createdObjects.length>a;)c=createdObjects.pop(),c=PDFNet.messageHandler.sendWithPromise(c.name+".destroy",{auto_dealloc_obj:c.id},this.userPriority),c=c["catch"](function(a){console.log(a)}),
m.push(c),b++;--stackCallCounter;return Promise.all(h).then(function(){return Promise.all(m)})};PDFNet.getStackCount=function(){return Promise.resolve(stackCallCounter)};PDFNet.deallocateAllObjects=function(){if(0==createdObjects.length){console.log("~~None~~ (nothing to deallocate)");var a=createPromiseCapability();a.resolve();return a.promise}var b,a=[];for(deallocStackCounter=[];lockedObjects.length;)objToUnlock=lockedObjects.pop(),unlockPromise=PDFNet.messageHandler.sendWithPromise(objToUnlock.name+
"."+objToUnlock.unlocktype,{doc:objToUnlock.id},this.userPriority),unlockPromise=unlockPromise["catch"](function(a){console.log(a)}),a.push(unlockPromise);for(;createdObjects.length;)b=createdObjects.pop(),b=PDFNet.messageHandler.sendWithPromise(b.name+".destroy",{auto_dealloc_obj:b.id},this.userPriority),b=b["catch"](function(a){console.log(a)}),a.push(b);return Promise.all(a)};PDFNet.Redactor.redact=function(a,b,c,d,h){"undefined"===typeof c&&(c={});"undefined"===typeof c.redaction_overlay&&(c.redaction_overlay=
!0);"undefined"===typeof c.positive_overlay_color?c.positive_overlay_color=void 0:"undefined"!==typeof c.positive_overlay_color.id&&(c.positive_overlay_color=c.positive_overlay_color.id);"undefined"===typeof c.negative_overlay_color?c.negative_overlay_color=void 0:"undefined"!==typeof c.negative_overlay_color.id&&(c.negative_overlay_color=c.negative_overlay_color.id);"undefined"===typeof c.border&&(c.border=!0);"undefined"===typeof c.use_overlay_text&&(c.use_overlay_text=!0);"undefined"===typeof c.font?
c.font=void 0:"undefined"!==typeof c.font.id&&(c.font=c.font.id);"undefined"===typeof c.min_font_size&&(c.min_font_size=2);"undefined"===typeof c.max_font_size&&(c.max_font_size=24);"undefined"===typeof c.text_color?c.text_color=void 0:"undefined"!==typeof c.text_color.id&&(c.text_color=c.text_color.id);"undefined"===typeof c.horiz_text_alignment&&(c.horiz_text_alignment=-1);"undefined"===typeof c.vert_text_alignment&&(c.vert_text_alignment=1);"undefined"===typeof c.show_redacted_content_regions&&
(c.show_redacted_content_regions=!1);"undefined"===typeof c.redacted_content_color?c.redacted_content_color=void 0:"undefined"!==typeof c.redacted_content_color.id&&(c.redacted_content_color=c.redacted_content_color.id);"undefined"===typeof d&&(d=!0);"undefined"===typeof h&&(h=!0);if(2>arguments.length||5<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'redact'. Expected 2 to 5 arguments. Function Signature: redact(PDFDoc, Array of Redaction Objects, RedactionAppearance, boolean=true, boolean=true)");
if(a instanceof Promise)throw new TypeError("Received a Promise object in 1st input argument of function 'redact'. Promises require a 'yield' statement before being accessed.");if(!(a instanceof PDFNet.PDFDoc||a instanceof PDFNet.SDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'redact' is of type '"+a.name+"'. Expected type 'PDFDoc'. Function Signature: redact(PDFDoc, Array of Redaction Objects, RedactionAppearance, boolean=true, boolean=true).");throw new TypeError("1st input argument '"+
a+"' in function 'redact' is of type '"+typeof a+"'. Expected type 'PDFDoc'. Function Signature: redact(PDFDoc, Array of Redaction Objects, RedactionAppearance, boolean=true, boolean=true).");}if(b instanceof Promise)throw new TypeError("Received a Promise object in 2nd input argument in function 'redact'. Promises require a 'yield' statement before being accessed.");if(!(b instanceof Array)){if("object"==typeof b)throw new TypeError("2nd input argument in function 'redact' is of type '"+b.name+"'. Expected an array of 'Redaction' objects. Function Signature: redact(PDFDoc, Array of Redaction Objects, number, RedactionAppearance, boolean, boolean).");
throw new TypeError("2nd input argument '"+b+"' in function 'redact' is of type '"+typeof b+"'. Expected type 'Redaction'. Function Signature: redact(PDFDoc, Redaction, number, RedactionAppearance, boolean, boolean).");}if(c instanceof Promise)throw new TypeError("Received a Promise object in 3rd input argument in function 'redact'. Promises require a 'yield' statement before being accessed.");if("object"!==typeof c)throw new TypeError("3nd input argument in function 'redact' is of type '"+c.name+
"'. Expected a RedactionAppearance (javascript) object. Function Signature: redact(PDFDoc, Array of Redaction Objects, number, RedactionAppearance, boolean, boolean).");if(d instanceof Promise)throw new TypeError("Received a Promise object in 4th input argument in function 'redact'. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof d)throw new TypeError("4th input argument '"+d+"' in function 'redact' is of type '"+typeof d+"'. Expected type 'boolean'. Function Signature: redact(PDFDoc, Array of Redaction Objects, RedactionAppearance, boolean=true, boolean=true).");
if(h instanceof Promise)throw new TypeError("Received a Promise object in 5th input argument in function 'redact'. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof h)throw new TypeError("5th input argument '"+h+"' in function 'redact' is of type '"+typeof h+"'. Expected type 'boolean'. Function Signature: redact(PDFDoc, Array of Redaction Objects, RedactionAppearance, boolean=true, boolean=true).");return PDFNet.messageHandler.sendWithPromise("redactorRedact",{doc:a.id,
red_arr:b,appearance:c,ext_neg_mode:d,page_coord_sys:h},this.userPriority)};PDFNet.Highlights.prototype.getCurrentQuads=function(){return PDFNet.messageHandler.sendWithPromise("Highlights.getCurrentQuads",{hlts:this.id},this.userPriority).then(function(a){a=new Float64Array(a);for(var b=[],c,d=0;d<a.length;d+=8)c=PDFNet.QuadPoint(a[d+0],a[d+1],a[d+2],a[d+3],a[d+4],a[d+5],a[d+6],a[d+7]),b.push(c);return b})};PDFNet.TextSearch.prototype.run=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'run'. Expected 0 arguments. Function Signature: run()");return PDFNet.messageHandler.sendWithPromise("TextSearch.run",{ts:this.id},this.userPriority).then(function(a){a.highlights=new PDFNet.Highlights(a.highlights);if("0"==a.highlights.id)return a;createdObjects.push({name:a.highlights.name,id:a.highlights.id});return a})};PDFNet.Iterator.prototype.current=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'fillEncryptDict'. Expected 0 argument.");
var a=this;this.yieldFunction="Iterator.current";var b=PDFNet.messageHandler.sendWithPromise("Iterator.current",{itr:this.id,type:this.type},this.userPriority);a.yieldFunction=void 0;"Int"!=this.type&&(b=b.then(function(b){return new PDFNet[a.type](b)}));return b};PDFNet.PDFDoc.prototype.requirePage=function(a){if(1!==arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'requirePage'. Expected 1 argument. Function Signature: requirePage(number)");if(a instanceof
Promise)throw new TypeError("Received a Promise object in 1st input argument 'requirePage'. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'requirePage' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: requirePage(number).");if(0>=a)throw Error("1st input argument '"+a+"' in function 'requirePage' is invalid. Expected number between 1 and number of pages in the document.");return PDFNet.messageHandler.sendWithPromise("PDFDoc.RequirePage",
{docId:this.id,pageNum:a},this.userPriority)};PDFNet.PDFDoc.prototype.getPageIterator=function(a){"undefined"===typeof a&&(a=1);if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPageIterator'. Expected at most 1 argument. Function Signature: getPageIterator(number)");if(a instanceof Promise)throw new TypeError("Received a Promise object in 1st input argument 'getPageIterator'. Promises require a 'yield' statement before being accessed.");if("number"!=
typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getPageIterator' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getPageIterator(number).");return PDFNet.messageHandler.sendWithPromise("PDFDoc.getPageIterator",{doc:this.id,page_number:a},this.userPriority).then(function(a){if("0"==a)return null;a=new PDFNet.Iterator(a,"Page");createdObjects.push({name:a.name,id:a.id});return a})};PDFNet.PDFDoc.prototype.getFieldIteratorBegin=function(){if(0!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getFieldIteratorBegin'. Expected 0 arguments. Function Signature: getFieldIteratorBegin()");return PDFNet.messageHandler.sendWithPromise("PDFDoc.getFieldIteratorBegin",{doc:this.id},this.userPriority).then(function(a){if("0"==a)return null;a=new PDFNet.Iterator(a,"Field");createdObjects.push({name:a.name,id:a.id});return a})};PDFNet.PDFDoc.prototype.getFieldIterator=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFieldIterator'. Expected 1 argument. Function Signature: getFieldIterator(string)");
if(a instanceof Promise)throw new TypeError("Received a Promise object in 1st input argument 'getFieldIterator'. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+url+"' in function 'getFieldIterator' is of type '"+typeof url+"'. Expected type 'string'. Function Signature: getFieldIterator(string).");return PDFNet.messageHandler.sendWithPromise("PDFDoc.getFieldIterator",{doc:this.id,field_name:a},this.userPriority).then(function(a){if("0"==
a)return null;a=new PDFNet.Iterator(a,"Field");createdObjects.push({name:a.name,id:a.id});return a})};PDFNet.PDFDoc.prototype.getFileData=function(a){a({type:"id",id:this.id})};PDFNet.PDFDoc.prototype.getFile=function(a){return null};PDFNet.FDFDoc.prototype.getFieldIteratorBegin=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFieldIteratorBegin'. Expected 0 arguments. Function Signature: getFieldIteratorBegin()");return PDFNet.messageHandler.sendWithPromise("FDFDoc.getFieldIteratorBegin",
{doc:this.id},this.userPriority).then(function(a){if("0"==a)return null;a=new PDFNet.Iterator(a,"Field");createdObjects.push({name:a.name,id:a.id});return a})};PDFNet.FDFDoc.prototype.getFieldIterator=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getFieldIterator'. Expected 1 argument. Function Signature: getFieldIterator(string)");if(a instanceof Promise)throw new TypeError("Received a Promise object in 1st input argument 'getFieldIterator'. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof a)throw new TypeError("1st input argument '"+url+"' in function 'getFieldIterator' is of type '"+typeof url+"'. Expected type 'string'. Function Signature: getFieldIterator(string).");return PDFNet.messageHandler.sendWithPromise("FDFDoc.getFieldIterator",{doc:this.id,field_name:a},this.userPriority).then(function(a){if("0"==a)return null;a=new PDFNet.Iterator(a,"Field");createdObjects.push({name:a.name,id:a.id});return a})};PDFNet.ElementReader.prototype.getChangesIterator=function(){if(0!=
arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getChangesIterator'. Expected 0 arguments. Function Signature: getChangesIterator()");return PDFNet.messageHandler.sendWithPromise("ElementReader.getChangesIterator",{r:this.id},this.userPriority).then(function(a){if("0"==a)return null;a=new PDFNet.Iterator(a,"Int");createdObjects.push({name:a.name,id:a.id});return a})};PDFNet.beginOperation=function(a){"undefined"===typeof a?a={allowMultipleInstances:!1}:"undefined"===
typeof a.allowMultipleInstances&&console.log("Warning: passing in options object without value 'allowMultipleInstances'");if(0<beginOperationCounter&&!a.allowMultipleInstances)throw Error("a previous instance of PDFNet.beginOperation() has been called without being terminated by PDFNet.finishOperation(). If this is intentional, pass in an options object with its parameter 'allowMultipleInstances' set to 'true' (ex. optObj={}; optObj.allowMultipleInstances=true; PDFNet.beginOperation(optObj));");beginOperationCounter+=
1;if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'beginOperation'. Expected 0 to 1 arguments. Function Signature: beginOperation(optObj = {})");return PDFNet.messageHandler.sendWithPromise("BeginOperation",{},this.userPriority)};PDFNet.finishOperation=function(){if(0<beginOperationCounter){--beginOperationCounter;if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'finishOperation'. Expected 0 arguments. Function Signature: finishOperation()");
return PDFNet.messageHandler.sendWithPromise("FinishOperation",{},this.userPriority)}};PDFNet.PDFDoc.createFromURL=function(a,c){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromURL'. Expected 1 argument. Function Signature: createFromURL(string)");if(a instanceof Promise)throw new TypeError("Received a Promise object in 1st input argument 'createFromURL'. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+
a+"' in function 'createFromURL' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: createFromURL(string).");return b(a,c).then(function(a){return PDFNet.PDFDoc.createFromBuffer(a)})};PDFNet.PDFDraw.prototype.exportStream=function(a,b,c){"undefined"==typeof b&&(b="PNG");"undefined"==typeof c&&(c=new PDFNet.Obj("0"));if(1>arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'exportStream'. Expected 1 to 3 arguments. Function Signature: exportStream(Page, string, Obj)");
if(a instanceof Promise)throw new TypeError("Received a Promise object in 1st input argument 'exportStream'. Promises require a 'yield' statement before being accessed.");if(!(a instanceof PDFNet.Page)){if("object"==typeof a)throw new TypeError("1st input argument in function 'exportStream' is of type '"+a.name+"'. Expected type 'Page'. Function Signature: exportStream(Page, string, Obj).");throw new TypeError("1st input argument '"+a+"' in function 'exportStream' is of type '"+typeof a+"'. Expected type 'Page'. Function Signature: exportStream(Page, string, Obj).");
}if(b instanceof Promise)throw new TypeError("Received a Promise object in 1st input argument 'exportStream'. Promises require a 'yield' statement before being accessed.");if("string"!=typeof b)throw new TypeError("2nd input argument '"+b+"' in function 'exportStream' is of type '"+typeof b+"'. Expected type 'string'. Function Signature: exportStream(Page, string, Obj).");if(c instanceof Promise)throw new TypeError("Received a Promise object in 1st input argument 'exportStream'. Promises require a 'yield' statement before being accessed.");
if(!(c instanceof PDFNet.Obj)){if("object"==typeof c)throw new TypeError("3rd input argument in function 'exportStream' is of type '"+c.name+"'. Expected type 'Obj'. Function Signature: exportStream(Page, string, Obj).");throw new TypeError("3rd input argument '"+c+"' in function 'exportStream' is of type '"+typeof c+"'. Expected type 'Obj'. Function Signature: exportStream(Page, string, Obj).");}return PDFNet.messageHandler.sendWithPromise("PDFDraw.exportStream",{d:this.id,page:a.id,format:b,encoder_params:c.id},
this.userPriority).then(function(a){return"0"==a?null:new Uint8Array(a)})};PDFNet.Element.prototype.getTextData=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getTextData'. Expected 0 arguments. Function Signature: getTextData()");return PDFNet.messageHandler.sendWithPromise("Element.getTextData",{e:this.id},this.userPriority)};PDFNet.Element.prototype.getPathData=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getPathData'. Expected 0 arguments. Function Signature: getPathData()");
return PDFNet.messageHandler.sendWithPromise("Element.getPathData",{e:this.id},this.userPriority).then(function(a){a.operators=new Uint8Array(a.operators);a.points=new Float64Array(a.points);return a})};PDFNet.PDFDoc.prototype.convertToXod=function(a){"undefined"===typeof a&&(a={});return PDFNet.messageHandler.sendWithPromise("PDFDoc.convertToXod",{doc:this.id,optionsObject:a},this.userPriority).then(function(a){return"0"==a?null:new Uint8Array(a)})};PDFNet.PDFDoc.prototype.convertToXodStream=function(a){"undefined"===
typeof a&&(a={});return PDFNet.messageHandler.sendWithPromise("PDFDoc.convertToXodStream",{doc:this.id,optionsObject:a},this.userPriority).then(function(a){return"0"==a?null:new PDFNet.Filter(a)})};PDFNet.FilterReader.prototype.read=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'read'. Expected 1 argument. Function Signature: read(number).");if(a instanceof Promise)throw new TypeError("Received a Promise object in 1st input argument 'read'. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'read' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: read(number).");return PDFNet.messageHandler.sendWithPromise("FilterReader.read",{reader:this.id,buf_size:a},this.userPriority).then(function(a){return"0"==a?null:new Uint8Array(a)})};PDFNet.bitmapInfo=function(a){copyFunc(a,this)};PDFNet.PDFDraw.prototype.getBitmap=function(a,b,c){if(3!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'getBitmap'. Expected 3 arguments. Function Signature: getBitmap(Page, PixelFormat, boolean).");if(a instanceof Promise)throw new TypeError("Received a Promise object in 1st input argument 'getBitmap'. Promises require a 'yield' statement before being accessed.");if(!(a instanceof PDFNet.Page)){if("object"==typeof a)throw new TypeError("1st input argument in function 'getBitmap' is of type '"+a.name+"'. Expected type 'Page'. Function Signature: getBitmap(Page, PixelFormat, boolean).");
throw new TypeError("1st input argument '"+a+"' in function 'getBitmap' is of type '"+typeof a+"'. Expected type 'Page'. Function Signature: getBitmap(Page, PixelFormat, boolean).");}if(b instanceof Promise)throw new TypeError("Received a Promise object in 1st input argument 'getBitmap'. Promises require a 'yield' statement before being accessed.");if("number"!=typeof b)throw new TypeError("2nd input argument '"+b+"' in function 'getBitmap' is of type '"+typeof b+"'. Expected type 'number'. Function Signature: getBitmap(Page, PixelFormat, boolean).");
if(c instanceof Promise)throw new TypeError("Received a Promise object in 1st input argument 'getBitmap'. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof c)throw new TypeError("3rd input argument '"+c+"' in function 'getBitmap' is of type '"+typeof c+"'. Expected type 'boolean'. Function Signature: getBitmap(Page, PixelFormat, boolean).");return PDFNet.messageHandler.sendWithPromise("PDFDraw.getBitmap",{d:this.id,page:a.id,pix_fmt:b,demult:c},this.userPriority).then(function(a){return"0"==
a?null:new PDFNet.bitmapInfo(a)})};PDFNet.Matrix2D.create=function(a,b,c,d,h,m){void 0==a&&(a=0);void 0==b&&(b=0);void 0==c&&(c=0);void 0==d&&(d=0);void 0==h&&(h=0);void 0==m&&(m=0);if(6<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'Matrix2D.create'. Expected 6 or fewer arguments. Function Signature: create(number, number, number, number, number, number).");if(a instanceof Promise)throw new TypeError("Received a Promise object in 1st input argument 'Matrix2D.create'. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'Matrix2D.create' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: create(number, number, number, number, number, number).");if(b instanceof Promise)throw new TypeError("Received a Promise object in 2nd input argument 'Matrix2D.create'. Promises require a 'yield' statement before being accessed.");if("number"!=typeof b)throw new TypeError("2nd input argument '"+b+"' in function 'Matrix2D.create' is of type '"+
typeof b+"'. Expected type 'number'. Function Signature: create(number, number, number, number, number, number).");if(c instanceof Promise)throw new TypeError("Received a Promise object in 3rd input argument 'Matrix2D.create'. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("3rd input argument '"+c+"' in function 'Matrix2D.create' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: create(number, number, number, number, number, number).");
if(d instanceof Promise)throw new TypeError("Received a Promise object in 4th input argument 'Matrix2D.create'. Promises require a 'yield' statement before being accessed.");if("number"!=typeof d)throw new TypeError("4th input argument '"+d+"' in function 'Matrix2D.create' is of type '"+typeof d+"'. Expected type 'number'. Function Signature: create(number, number, number, number, number, number).");if(h instanceof Promise)throw new TypeError("Received a Promise object in 5th input argument 'Matrix2D.create'. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof h)throw new TypeError("5th input argument '"+h+"' in function 'Matrix2D.create' is of type '"+typeof h+"'. Expected type 'number'. Function Signature: create(number, number, number, number, number, number).");if(m instanceof Promise)throw new TypeError("Received a Promise object in 6th input argument 'Matrix2D.create'. Promises require a 'yield' statement before being accessed.");if("number"!=typeof m)throw new TypeError("6th input argument '"+m+"' in function 'Matrix2D.create' is of type '"+
typeof m+"'. Expected type 'number'. Function Signature: create(number, number, number, number, number, number).");var n=createPromiseCapability(),q=new PDFNet.Matrix2D({m_a:a,m_b:b,m_c:c,m_d:d,m_h:h,m_v:m});n.resolve(q);return n.promise};PDFNet.PDFDoc.prototype.getPDFDoc=function(){console.log("In PDFNetUser.js getPDFDoc");return PDFNet.messageHandler.sendWithPromise("GetPDFDoc",{doc:this.id},this.userPriority).then(function(a){return"0"==a?null:new PDFNet.PDFDoc(a)})};PDFNet.TextExtractorLine.prototype.getBBox=
function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getBBox'. Expected 0 arguments. Function Signature: getBBox()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getBBox'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction="TextExtractorLine.getBBox";return PDFNet.messageHandler.sendWithPromise("TextExtractorLine.getBBox",
{line:this},this.userPriority).then(function(b){a.yieldFunction=void 0;return new PDFNet.Rect(b.result.x1,b.result.y1,b.result.x2,b.result.y2,b.result.mp_rect)})};PDFNet.TextExtractorWord.prototype.getBBox=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getBBox'. Expected 0 arguments. Function Signature: getBBox()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getBBox'. Perhaps a yield statement is required for "+
this.yieldFunction+"?");var a=this;this.yieldFunction="TextExtractorWord.getBBox";return PDFNet.messageHandler.sendWithPromise("TextExtractorWord.getBBox",{tew:this},this.userPriority).then(function(b){a.yieldFunction=void 0;return new PDFNet.Rect(b.result.x1,b.result.y1,b.result.x2,b.result.y2,b.result.mp_rect)})};PDFNet.TextExtractorWord.prototype.getQuad=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getQuad'. Expected 0 arguments. Function Signature: getQuad()");
if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getQuad'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction="TextExtractorWord.getQuad";return PDFNet.messageHandler.sendWithPromise("TextExtractorWord.getQuad",{tew:this},this.userPriority).then(function(b){a.yieldFunction=void 0;return new PDFNet.QuadPoint(b.result.p1x,
b.result.p1y,b.result.p2x,b.result.p2y,b.result.p3x,b.result.p3y,b.result.p4x,b.result.p4y)})};PDFNet.TextExtractorWord.prototype.getGlyphQuad=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getGlyphQuad'. Expected 1 argument. Function Signature: getGlyphQuad(number)");if(a instanceof Promise)throw new TypeError("Received a Promise object in 1st input argument 'getGlyphQuad'. Promises require a 'yield' statement before being accessed.");if("number"!=
typeof a)throw new TypeError("1st input argument '"+a+"' in function 'getGlyphQuad' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: getGlyphQuad(number).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getGlyphQuad'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var b=this;this.yieldFunction="TextExtractorWord.getGlyphQuad";
return PDFNet.messageHandler.sendWithPromise("TextExtractorWord.getGlyphQuad",{tew:this,glyph_idx:a},this.userPriority).then(function(a){b.yieldFunction=void 0;return new PDFNet.QuadPoint(a.result.p1x,a.result.p1y,a.result.p2x,a.result.p2y,a.result.p3x,a.result.p3y,a.result.p4x,a.result.p4y)})};PDFNet.TextExtractorStyle.prototype.getColor=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getColor'. Expected 0 arguments. Function Signature: getColor()");
if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getColor'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction="TextExtractorStyle.getColor";return PDFNet.messageHandler.sendWithPromise("TextExtractorStyle.getColor",{tes:this},this.userPriority).then(function(b){a.yieldFunction=void 0;return"0"==b?null:new PDFNet.ColorPt(b)})};
PDFNet.TextExtractorWord.prototype.getString=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getString'. Expected 0 arguments. Function Signature: getString()");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'getString'. Perhaps a yield statement is required for "+this.yieldFunction+"?");var a=this;this.yieldFunction=
"TextExtractorWord.getString";return PDFNet.messageHandler.sendWithPromise("TextExtractorWord.getString",{tew:this},this.userPriority).then(function(b){a.yieldFunction=void 0;return b})};PDFNet.SecurityHandler.prototype.changeUserPasswordNonAscii=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'changeUserPasswordNonAscii'. Expected 1 argument. Function Signature: changeUserPasswordNonAscii(string)");if(a instanceof Promise)throw new TypeError("Received a Promise object in 1st input argument 'changeUserPasswordNonAscii'. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'changeUserPasswordNonAscii' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: changeUserPasswordNonAscii(string).");return PDFNet.messageHandler.sendWithPromise("SecurityHandler.changeUserPasswordNonAscii",{sh:this.id,password:a,pwd_length:a.length},this.userPriority)};PDFNet.SecurityHandler.prototype.changeMasterPasswordNonAscii=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'changeMasterPasswordNonAscii'. Expected 1 argument. Function Signature: changeMasterPasswordNonAscii(string)");if(a instanceof Promise)throw new TypeError("Received a Promise object in 1st input argument 'changeMasterPasswordNonAscii'. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'changeMasterPasswordNonAscii' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: changeMasterPasswordNonAscii(string).");
return PDFNet.messageHandler.sendWithPromise("SecurityHandler.changeMasterPasswordNonAscii",{sh:this.id,password:a,pwd_length:a.length},this.userPriority)};PDFNet.SecurityHandler.prototype.initPassword=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'initPassword'. Expected 1 argument. Function Signature: initPassword(string)");if(a instanceof Promise)throw new TypeError("Received a Promise object in 1st input argument 'initPassword'. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'initPassword' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: initPassword(string).");return PDFNet.messageHandler.sendWithPromise("SecurityHandler.initPassword",{sh:this.id,password:a},this.userPriority)};PDFNet.SecurityHandler.prototype.initPasswordNonAscii=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'initPasswordNonAscii'. Expected 1 argument. Function Signature: initPasswordNonAscii(string)");
if(a instanceof Promise)throw new TypeError("Received a Promise object in 1st input argument 'initPasswordNonAscii'. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'initPasswordNonAscii' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: initPasswordNonAscii(string).");return PDFNet.messageHandler.sendWithPromise("SecurityHandler.initPasswordNonAscii",{sh:this.id,password:a,pwd_length:a.length},
this.userPriority)};PDFNet.Element.prototype.getBBox=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getBBox'. Expected 0 arguments. Function Signature: getBBox()");var a=this;this.yieldFunction="Element.getBBox";return PDFNet.messageHandler.sendWithPromise("Element.getBBox",{e:this.id},this.userPriority).then(function(b){a.yieldFunction=void 0;return new PDFNet.Rect(b)})};PDFNet.Matrix2D.prototype.mult=function(a,b){if(2!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'mult'. Expected 2 arguments. Function Signature: mult(number, number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'mult' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'mult' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: mult(number, number).");if(b instanceof Promise)throw new TypeError("2nd input argument in function 'mult' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("number"!=typeof b)throw new TypeError("2nd input argument '"+b+"' in function 'mult' is of type '"+typeof b+"'. Expected type 'number'. Function Signature: mult(number, number).");if("undefined"!==typeof this.yieldFunction)throw Error("Function "+this.yieldFunction+" recently altered a struct object without yielding. That object is now being accessed by function 'mult'. Perhaps a yield statement is required for "+this.yieldFunction+"?");return PDFNet.messageHandler.sendWithPromise("Matrix2D.mult",
{matrix:this,x:a,y:b},this.userPriority)};PDFNet.Obj.prototype.getAsPDFText=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'getAsPDFText'. Expected 0 arguments. Function Signature: getAsPDFText()");return PDFNet.messageHandler.sendWithPromise("Obj.getAsPDFText",{o:this.id},this.userPriority)};PDFNet.PDFDoc.prototype.initSecurityHandler=function(a){"undefined"===typeof a&&(a=0);if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'initSecurityHandler'. Expected at most 1 arguments. Function Signature: initSecurityHandler(void*)");
return PDFNet.messageHandler.sendWithPromise("PDFDoc.initSecurityHandler",{doc:this.id,custom_data:a},this.userPriority)};PDFNet.Image.createFromURL=function(a,b,c,d){"undefined"===typeof c&&(c=new PDFNet.Obj("0"));if(2>arguments.length||3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromURL'. Expected 2 to 3 arguments. Function Signature: createFromURL(PDFDoc, string, Obj)");if(a instanceof Promise)throw new TypeError("Received a Promise object in 1st input argument 'createFromURL'. Promises require a 'yield' statement before being accessed.");
if(!(a instanceof PDFNet.PDFDoc)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFromURL' is of type '"+a.name+"'. Expected type 'Page'. Function Signature: createFromURL(PDFDoc, string, Obj).");throw new TypeError("1st input argument '"+a+"' in function 'createFromURL' is of type '"+typeof a+"'. Expected type 'Page'. Function Signature: createFromURL(PDFDoc, string, Obj).");}if(b instanceof Promise)throw new TypeError("Received a Promise object in 1st input argument 'createFromURL'. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof b)throw new TypeError("2nd input argument '"+b+"' in function 'createFromURL' is of type '"+typeof b+"'. Expected type 'string'. Function Signature: createFromURL(PDFDoc, string, Obj).");if(c instanceof Promise)throw new TypeError("Received a Promise object in 1st input argument 'createFromURL'. Promises require a 'yield' statement before being accessed.");if(!(c instanceof PDFNet.Obj)){if("object"==typeof c)throw new TypeError("3rd input argument in function 'createFromURL' is of type '"+
c.name+"'. Expected type 'Obj'. Function Signature: createFromURL(PDFDoc, string, Obj).");throw new TypeError("3rd input argument '"+c+"' in function 'createFromURL' is of type '"+typeof c+"'. Expected type 'Obj'. Function Signature: createFromURL(PDFDoc, string, Obj).");}var l=createPromiseCapability();(new h.CoreControls.PartRetrievers.ExternalPdfPartRetriever(b,d)).getFileData(function(b){PDFNet.Image.createFromMemory2(a,b,c).then(function(a){l.resolve(a)})});return l.promise};PDFNet.PDFDoc.prototype.addStdSignatureHandlerFromURL=
function(a,b){if(2!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'addStdSignatureHandlerFromURL'. Expected 2 arguments. Function Signature: addStdSignatureHandlerFromURL(string, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'addStdSignatureHandlerFromURL' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'addStdSignatureHandlerFromURL' is of type '"+
typeof a+"'. Expected type 'string'. Function Signature: addStdSignatureHandlerFromURL(string, string).");if(b instanceof Promise)throw new TypeError("2nd input argument in function 'addStdSignatureHandlerFromURL' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof b)throw new TypeError("2nd input argument '"+b+"' in function 'addStdSignatureHandlerFromURL' is of type '"+typeof b+"'. Expected type 'string'. Function Signature: addStdSignatureHandlerFromURL(string, string).");
var c=createPromiseCapability(),d=this;(new h.CoreControls.PartRetrievers.ExternalPdfPartRetriever(a)).getFileData(function(a){d.addStdSignatureHandlerFromBufferWithDoc(a,b,d).then(function(a){c.resolve(a)})});return c.promise};PDFNet.PDFDoc.prototype.addStdSignatureHandlerFromBufferWithDoc=function(a,b,c){if(3!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'addStdSignatureHandlerFromBuffer'. Expected 3 arguments. Function Signature: addStdSignatureHandlerFromBuffer(ArrayBuffer, string, PDFDoc)");
if(c instanceof Promise)throw new TypeError("1st input argument in function 'addStdSignatureHandlerFromBuffer' is a Promise object. Promises require a 'yield' statement before being accessed.");if(a instanceof Promise)throw new TypeError("2nd input argument in function 'addStdSignatureHandlerFromBuffer' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!h.isArrayBuffer(a.buffer)){if("object"==typeof a)throw new TypeError("2nd input argument in function 'addStdSignatureHandlerFromBuffer' is of type '"+
a.name+"'. Expected type 'ArrayBuffer'. Function Signature: addStdSignatureHandlerFromBuffer(ArrayBuffer, string, PDFDoc).");throw new TypeError("2nd input argument '"+a+"' in function 'addStdSignatureHandlerFromBuffer' is of type '"+typeof a+"'. Expected type 'ArrayBuffer'. Function Signature: addStdSignatureHandlerFromBuffer(ArrayBuffer, string, PDFDoc).");}if(b instanceof Promise)throw new TypeError("3rd input argument in function 'addStdSignatureHandlerFromBuffer' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof b)throw new TypeError("3rd input argument '"+b+"' in function 'addStdSignatureHandlerFromBuffer' is of type '"+typeof b+"'. Expected type 'string'. Function Signature: addStdSignatureHandlerFromBuffer(ArrayBuffer, string, PDFDoc).");return PDFNet.messageHandler.sendWithPromise("PDFDoc.addStdSignatureHandlerFromBuffer",{doc:c.id,pkcs12_buffer:a.buffer,pkcs12_pass:b},this.userPriority)};PDFNet.Filter.createFromMemory=function(a){return PDFNet.messageHandler.sendWithPromise("filterCreateFromMemory",
{buf:a.buffer},this.userPriority).then(function(a){if("0"==a)return null;a=new PDFNet.Filter(a);createdObjects.push({name:a.name,id:a.id});return a})};PDFNet.Filter.createURLFilter=function(a){if(1!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createURLFilter'. Expected 1 argument. Function Signature: createURLFilter(string)");if("string"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createURLFilter' is of type '"+typeof a+"'. Expected type 'string'. Function Signature: createURLFilter(string).");
var b=createPromiseCapability();(new h.CoreControls.PartRetrievers.ExternalPdfPartRetriever(a)).getFileData(function(a){PDFNet.Filter.createFromMemory(a).then(function(a){b.resolve(a)})});return b.promise};PDFNet.Filter.createFlateEncode=function(a,b,c){"undefined"===typeof a&&(a=new PDFNet.Filter("0"));"undefined"===typeof b&&(b=-1);"undefined"===typeof c&&(c=256);if(3<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFlateEncode'. Expected at most 3 arguments. Function Signature: createFlateEncode(Filter, number, number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFlateEncode' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!(a instanceof PDFNet.Filter)){if("object"==typeof a)throw new TypeError("1st input argument in function 'createFlateEncode' is of type '"+a.name+"'. Expected type 'Filter'. Function Signature: createFlateEncode(Filter, number, number).");throw new TypeError("1st input argument '"+a+"' in function 'createFlateEncode' is of type '"+
typeof a+"'. Expected type 'Filter'. Function Signature: createFlateEncode(Filter, number, number).");}if(b instanceof Promise)throw new TypeError("2nd input argument in function 'createFlateEncode' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof b)throw new TypeError("2nd input argument '"+b+"' in function 'createFlateEncode' is of type '"+typeof b+"'. Expected type 'number'. Function Signature: createFlateEncode(Filter, number, number).");if(c instanceof
Promise)throw new TypeError("3rd input argument in function 'createFlateEncode' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof c)throw new TypeError("3rd input argument '"+c+"' in function 'createFlateEncode' is of type '"+typeof c+"'. Expected type 'number'. Function Signature: createFlateEncode(Filter, number, number).");return PDFNet.messageHandler.sendWithPromise("Filter.createFlateEncode",{input_filter:a.id,compression_level:b,buf_sz:c},
this.userPriority).then(function(a){if("0"==a)return null;a=new PDFNet.Filter(a);createdObjects.push({name:a.name,id:a.id});return a})};PDFNet.PDFDoc.prototype.importPages=function(a,b){"undefined"===typeof a&&(a=new PDFNet.Page("false"));if(1>arguments.length||2<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'importPages'. Expected 1 to 2 arguments. Function Signature: importPages(ArrayBuffer, boolean)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'importPages' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(!h.isArrayBuffer(a.buffer)){if("object"==typeof a)throw new TypeError("1st input argument in function 'importPages' is of type '"+a.name+"'. Expected type 'ArrayBuffer'. Function Signature: importPages(ArrayBuffer, boolean).");throw new TypeError("1st input argument '"+a+"' in function 'importPages' is of type '"+typeof a+"'. Expected type 'ArrayBuffer'. Function Signature: importPages(ArrayBuffer, boolean).");}if(b instanceof Promise)throw new TypeError("3rd input argument in function 'importPages' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!=typeof b)throw new TypeError("3rd input argument '"+b+"' in function 'importPages' is of type '"+typeof b+"'. Expected type 'boolean'. Function Signature: importPages(ArrayBuffer, boolean).");return PDFNet.messageHandler.sendWithPromise("PDFDoc.importPages",{doc:this.id,page_buf:a.buffer,import_bookmarks:b},this.userPriority).then(function(a){return"0"==a?null:new PDFNet.Page(a)})};PDFNet.SDFDoc.prototype.saveMemory=function(a,b){if(2!=arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'saveMemory'. Expected 2 arguments. Function Signature: saveMemory(number, string)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'saveMemory' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'saveMemory' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: saveMemory(number, string).");if(b instanceof
Promise)throw new TypeError("2nd input argument in function 'saveMemory' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof b)throw new TypeError("2nd input argument '"+b+"' in function 'saveMemory' is of type '"+typeof b+"'. Expected type 'string'. Function Signature: saveMemory(number, string).");return PDFNet.messageHandler.sendWithPromise("SDFDoc.saveMemory",{doc:this.id,flags:a,header:b},this.userPriority).then(function(a){return new Uint8Array(a)})};
var c=PDFNet.PDFDoc.prototype.saveMemoryBuffer,d=PDFNet.PDFDoc.prototype.saveStream;PDFNet.PDFDoc.prototype.saveMemoryBuffer=function(a){var b=this;return Promise.resolve(b.documentCompletePromise).then(function(){return c.call(b,a)})};PDFNet.PDFDoc.prototype.saveStream=function(a){var b=this;return Promise.resolve(b.documentCompletePromise).then(function(){return d.call(b,a)})};PDFNet.PDFACompliance.createFromUrl=function(a,c,d,h,l,m,n,q){if(2>arguments.length||7<arguments.length)throw new RangeError(arguments.length+
" arguments passed into function 'createFromUrl'. Expected 7 arguments. Function Signature: createFromUrl(convert, url, pwd, conform, excep, max_ref_objs, first_stop)");"undefined"===typeof d&&(d="");"undefined"===typeof h&&(h=PDFNet.PDFACompliance.Conformance.e_Level1B);"undefined"===typeof l&&(l=new Int32Array(0));"undefined"===typeof m&&(m=10);"undefined"===typeof n&&(n=!1);if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromUrl' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createFromUrl' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: createFromUrl(convert, url, pwd, conform, excep, max_ref_objs, first_stop).");if(c instanceof Promise)throw new TypeError("Received a Promise object in 1st input argument 'createFromURL'. Promises require a 'yield' statement before being accessed.");if("string"!=typeof c)throw new TypeError("2nd input argument '"+c+"' in function 'createFromURL' is of type '"+
typeof c+"'. Expected type 'string'. Function Signature: createFromURL(PDFDoc, string, Obj).");if(d instanceof Promise)throw new TypeError("3rd input argument in function 'createFromUrl' is a Promise object. Promises require a 'yield' statement before being accessed.");if("string"!=typeof d)throw new TypeError("3rd input argument '"+d+"' in function 'createFromUrl' is of type '"+typeof d+"'. Expected type 'string'. Function Signature: createFromUrl(convert, url, pwd, conform, excep, max_ref_objs, first_stop).");
if(h instanceof Promise)throw new TypeError("4th input argument in function 'createFromUrl' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof h)throw new TypeError("4th input argument '"+h+"' in function 'createFromUrl' is of type '"+typeof h+"'. Expected type 'number'. Function Signature: createFromUrl(convert, url, pwd, conform, excep, max_ref_objs, first_stop).");if(l instanceof Promise)throw new TypeError("5th input argument in function 'createFromUrl' is a Promise object. Promises require a 'yield' statement before being accessed.");
if(m instanceof Promise)throw new TypeError("6th input argument in function 'createFromUrl' is a Promise object. Promises require a 'yield' statement before being accessed.");if(n instanceof Promise)throw new TypeError("7th input argument in function 'createFromUrl' is a Promise object. Promises require a 'yield' statement before being accessed.");return b(c).then(function(b){return PDFNet.PDFACompliance.createFromBuffer(a,b,d,h,l,m,n)})};PDFNet.PDFACompliance.createFromBuffer=function(a,b,c,d,l,
m,n){"undefined"===typeof c&&(c="");"undefined"===typeof d&&(d=PDFNet.PDFACompliance.Conformance.e_Level1B);"undefined"===typeof l&&(l=new Int32Array(0));"undefined"===typeof m&&(m=10);"undefined"===typeof n&&(n=!1);if(2>arguments.length||7<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'createFromBuffer'. Expected 7 arguments. Function Signature: createFromBuffer(convert, buf, pwd, conform, excep, max_ref_objs, first_stop)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'createFromBuffer' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("boolean"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'createFromBuffer' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: createFromBuffer(convert, buf, pwd, conform, excep, max_ref_objs, first_stop).");if(b instanceof Promise)throw new TypeError("2nd input argument in function 'createFromBuffer' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!h.isArrayBuffer(b.buffer)){if("object"==typeof b)throw new TypeError("2nd input argument in function 'createFromBuffer' is of type '"+
b.name+"'. Expected typed array. Function Signature: createFromBuffer(convert, buf, pwd, conform, excep, max_ref_objs, first_stop).");throw new TypeError("2nd input argument '"+b+"' in function 'createFromBuffer' is of type '"+typeof b+"'. Expected typed array. Function Signature: createFromBuffer(convert, buf, pwd, conform, excep, max_ref_objs, first_stop).");}if(c instanceof Promise)throw new TypeError("3rd input argument in function 'createFromBuffer' is a Promise object. Promises require a 'yield' statement before being accessed.");
if("string"!=typeof c)throw new TypeError("3rd input argument '"+c+"' in function 'createFromBuffer' is of type '"+typeof c+"'. Expected type 'string'. Function Signature: createFromBuffer(convert, buf, pwd, conform, excep, max_ref_objs, first_stop).");if(d instanceof Promise)throw new TypeError("4th input argument in function 'createFromBuffer' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof d)throw new TypeError("4th input argument '"+d+"' in function 'createFromBuffer' is of type '"+
typeof d+"'. Expected type 'number'. Function Signature: createFromBuffer(convert, buf, pwd, conform, excep, max_ref_objs, first_stop).");if(l instanceof Promise)throw new TypeError("5th input argument in function 'createFromBuffer' is a Promise object. Promises require a 'yield' statement before being accessed.");if(!h.isArrayBuffer(l.buffer)){if("object"==typeof l)throw new TypeError("5th input argument in function 'createFromBuffer' is of type '"+l.name+"'. Expected typed array. Function Signature: createFromBuffer(convert, buf, pwd, conform, excep, max_ref_objs, first_stop).");
throw new TypeError("5th input argument '"+l+"' in function 'createFromBuffer' is of type '"+typeof l+"'. Expected typed array. Function Signature: createFromBuffer(convert, buf, pwd, conform, excep, max_ref_objs, first_stop).");}if(m instanceof Promise)throw new TypeError("6th input argument in function 'createFromBuffer' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof m)throw new TypeError("6th input argument '"+m+"' in function 'createFromBuffer' is of type '"+
typeof m+"'. Expected type 'number'. Function Signature: createFromBuffer(convert, buf, pwd, conform, excep, max_ref_objs, first_stop).");if(n instanceof Promise)throw new TypeError("7th input argument in function 'createFromBuffer' is a Promise object. Promises require a 'yield' statement before being accessed.");if("boolean"!=typeof n)throw new TypeError("7th input argument '"+n+"' in function 'createFromBuffer' is of type '"+typeof n+"'. Expected type 'number'. Function Signature: createFromBuffer(convert, buf, pwd, conform, excep, max_ref_objs, first_stop).");
return PDFNet.messageHandler.sendWithPromise("pdfaComplianceCreateFromBuffer",{convert:a,buf:b.buffer,password:c,conform:d,excep:l.buffer,max_ref_objs:m,first_stop:n},this.userPriority).then(function(a){a=new PDFNet.PDFACompliance(a);createdObjects.push({name:a.name,id:a.id});return a})};PDFNet.PDFDoc.prototype.lock=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'lock'. Expected 0 arguments. Function Signature: lock()");lockedObjects.push({name:"PDFDoc",
id:this.id,unlocktype:"unlock"});return PDFNet.messageHandler.sendWithPromise("PDFDoc.lock",{doc:this.id},this.userPriority)};PDFNet.PDFDoc.prototype.unlock=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'unlock'. Expected 0 arguments. Function Signature: unlock()");var a=this;return PDFNet.messageHandler.sendWithPromise("PDFDoc.unlock",{doc:this.id},this.userPriority).then(function(){for(var b=-1,c=lockedObjects.length-1;0<=c;c--)if(lockedObjects[c].id==
a.id){b=c;break}if(-1!=b)for(lockedObjects.splice(b,1),c=unlockStackCounter.length-1;0<=c;c--)if(b<unlockStackCounter[c])--unlockStackCounter[c];else break;else console.log("[WARNING], the object to be unlocked was not found in the unlock list. Unlocking may cause errors.")})};PDFNet.PDFDoc.prototype.lockRead=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'lockRead'. Expected 0 arguments. Function Signature: lockRead()");lockedObjects.push({name:"PDFDoc",
id:this.id,unlocktype:"unlockRead"});return PDFNet.messageHandler.sendWithPromise("PDFDoc.lockRead",{doc:this.id},this.userPriority)};PDFNet.PDFDoc.prototype.unlockRead=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'unlockRead'. Expected 0 arguments. Function Signature: unlockRead()");var a=this;return PDFNet.messageHandler.sendWithPromise("PDFDoc.unlockRead",{doc:this.id},this.userPriority).then(function(){for(var b=-1,c=lockedObjects.length-
1;0<=c;c--)if(lockedObjects[c].id==a.id){b=c;break}if(-1!=b)for(lockedObjects.splice(b,1),c=unlockStackCounter.length-1;0<=c;c--)if(b<unlockStackCounter[c])--unlockStackCounter[c];else break;else console.log("[WARNING], the object to be unlocked was not found in the unlock list. Unlocking may cause errors.")})};PDFNet.PDFDoc.prototype.tryLock=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'tryLock'. Expected 0 arguments. Function Signature: tryLock()");
var a=lockedObjects.length;lockedObjects.push({name:"PDFDoc",id:this.id,unlocktype:"unlock"});return PDFNet.messageHandler.sendWithPromise("PDFDoc.tryLock",{doc:this.id},this.userPriority).then(function(b){b||lockedObjects.splice(a,1)})};PDFNet.PDFDoc.prototype.timedLock=function(a){"undefined"===typeof doc&&(doc=new PDFNet.PDFDoc("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'timedLock'. Expected at most 1 arguments. Function Signature: timedLock(number)");
if(a instanceof Promise)throw new TypeError("1st input argument in function 'timedLock' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=typeof a)throw new TypeError("1st input argument '"+a+"' in function 'timedLock' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: timedLock(number).");var b=lockedObjects.length;lockedObjects.push({name:"PDFDoc",id:this.id,unlocktype:"unlock"});return PDFNet.messageHandler.sendWithPromise("PDFDoc.timedLock",
{doc:this.id,milliseconds:a},this.userPriority).then(function(a){a||lockedObjects.splice(b,1)})};PDFNet.PDFDoc.prototype.tryLockRead=function(){if(0!=arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'tryLockRead'. Expected 0 arguments. Function Signature: tryLockRead()");var a=lockedObjects.length;lockedObjects.push({name:"PDFDoc",id:this.id,unlocktype:"unlockRead"});return PDFNet.messageHandler.sendWithPromise("PDFDoc.tryLockRead",{doc:this.id},this.userPriority).then(function(b){b||
lockedObjects.splice(a,1)})};PDFNet.PDFDoc.prototype.timedLockRead=function(a){"undefined"===typeof doc&&(doc=new PDFNet.PDFDoc("0"));if(1<arguments.length)throw new RangeError(arguments.length+" arguments passed into function 'timedLockRead'. Expected at most 1 arguments. Function Signature: timedLockRead(number)");if(a instanceof Promise)throw new TypeError("1st input argument in function 'timedLockRead' is a Promise object. Promises require a 'yield' statement before being accessed.");if("number"!=
typeof a)throw new TypeError("1st input argument '"+a+"' in function 'timedLockRead' is of type '"+typeof a+"'. Expected type 'number'. Function Signature: timedLockRead(number).");var b=lockedObjects.length;lockedObjects.push({name:"PDFDoc",id:this.id,unlocktype:"unlockRead"});return PDFNet.messageHandler.sendWithPromise("PDFDoc.timedLockRead",{doc:this.id,milliseconds:a},this.userPriority).then(function(a){a||lockedObjects.splice(b,1)})};PDFNet.hasFullApi=!0;h.PDFNet.Convert.office2PDF=function(a,
b){return PDFNet.Convert.office2PDFBuffer(a,b).then(function(){PDFNet.PDFDoc.create().then(function(a){a.initSecurityHandler();return a})})}})("undefined"===typeof window?this:window);
